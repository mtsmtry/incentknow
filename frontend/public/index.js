// Generated by purs bundle 0.13.6
var PS = {};
(function(exports) {
  "use strict";

  exports.ace = ace;

  exports.editNodeImpl = function (el, self) {
    return function () {
      return self.edit(el);
    };
  };
})(PS["Ace"] = PS["Ace"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Ace"] = $PS["Ace"] || {};
  var exports = $PS["Ace"];
  var $foreign = $PS["Ace"];             
  var editNode = function (el) {
      return function (self) {
          return $foreign.editNodeImpl(el, self);
      };
  };
  exports["editNode"] = editNode;
  exports["ace"] = $foreign.ace;
})(PS);
(function(exports) {
  "use strict";

  exports.onImpl = function (event, fn, self) {
    return function () {
      return self.on(event, function (e) {
        fn(e)();
      });
    };
  };

  function  create(text, mode) {
    return function () {
      var EditSession = ace.require("ace/edit_session").EditSession;
      return new EditSession(text, mode);
    };
  }
})(PS["Ace.EditSession"] = PS["Ace.EditSession"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Ace.EditSession"] = $PS["Ace.EditSession"] || {};
  var exports = $PS["Ace.EditSession"];
  var $foreign = $PS["Ace.EditSession"];
  var onChange = function (self) {
      return function (fn) {
          return $foreign.onImpl("change", fn, self);
      };
  };
  exports["onChange"] = onChange;
})(PS);
(function(exports) {
  "use strict";

  function effize(method) {
    return function () {
      var me = arguments[arguments.length - 1];
      var args = Array.prototype.slice.call(arguments, 0, -1);
      return function () {
        return me[method].apply(me, args);
      };
    };
  }

  function effGet(field) {
    return function (self) {
      return function () {
        return self[field];
      };
    };
  }

  function effSet(field) {
    return function (val, self) {
      return function () {
        self[field] = val;
      };
    };
  }                                             
  exports.getSession = effize("getSession");
  exports.setValueImpl = effize("setValue");
  exports.getValue = effize("getValue");                  
  exports.setHighlightGutterLineImpl = effize("setHighlightGutterLine");
  exports.setHighlightActiveLineImpl = effize("setHighlightActiveLine");
  exports.setReadOnlyImpl = effize("setReadOnly");    
  exports.getCursorPosition = effize("getCursorPosition");
  exports.moveCursorToImpl = effize("moveCursorTo");

  exports.setOption = function (s) {
    return function (a) {
      return function (editor) {
        return function () {
          editor.setOption(s, a);
        };
      };
    };
  };
})(PS["Ace.Editor"] = PS["Ace.Editor"] || {});
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];              
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                

  // | A `Functor` is a type constructor which supports a mapping operation
  // | `map`.
  // |
  // | `map` can be used to turn functions `a -> b` into functions
  // | `f a -> f b` whose argument and return types use the type constructor `f`
  // | to represent some computational context.
  // |
  // | Instances must satisfy the following laws:
  // |
  // | - Identity: `map identity = identity`
  // | - Composition: `map (f <<< g) = map f <<< map g`
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };

  // | `mapFlipped` is `map` with its arguments reversed. For example:
  // |
  // | ```purescript
  // | [1, 2, 3] <#> \n -> n * n
  // | ```
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };

  // | The `void` function is used to ignore the type wrapped by a
  // | [`Functor`](#functor), replacing it with `Unit` and keeping only the type
  // | information provided by the type constructor itself.
  // |
  // | `void` is often useful when using `do` notation to change the return type
  // | of a monadic computation:
  // |
  // | ```purescript
  // | main = forE 1 10 \n -> void do
  // |   print n
  // |   print (n * n)
  // | ```
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };

  // | A version of `voidRight` with its arguments flipped.
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };

  // | Ignore the return value of a computation, using the specified return value
  // | instead.
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["unlessM"] = unlessM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.MonadZero"] = $PS["Control.MonadZero"] || {};
  var exports = $PS["Control.MonadZero"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      

  // | A value-level proxy for a type-level symbol.
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();

  // | A class for known symbols
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.eqStringImpl);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];

  // | The `Show` type class represents those types which can be converted into
  // | a human-readable `String` representation.
  // |
  // | While not required, it is recommended that for any expression `x`, the
  // | string `show x` be executable PureScript code which evaluates to the same
  // | value as the expression `x`.
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Just) {
              return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
          };
          if (v instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 207, column 28): " + [ v.constructor.name ]);
      });
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var ordMaybe = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqMaybe(dictOrd.Eq0());
      }, function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Nothing) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Nothing) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 194, column 1 - line 194, column 51): " + [ x.constructor.name, y.constructor.name ]);
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["ordMaybe"] = ordMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
  exports["null"] = $foreign["null"];
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Ace.Editor"] = $PS["Ace.Editor"] || {};
  var exports = $PS["Ace.Editor"];
  var $foreign = $PS["Ace.Editor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var setValue = function (val) {
      return function (cursorPos) {
          return function (self) {
              return $foreign.setValueImpl(val, Data_Nullable.toNullable(cursorPos), self);
          };
      };
  };
  var setReadOnly = function (readOnly) {
      return function (self) {
          return $foreign.setReadOnlyImpl(readOnly, self);
      };
  };                                               
  var setMaxLines = $foreign.setOption("maxLines");
  var setHighlightGutterLine = function (shouldHighlight) {
      return function (self) {
          return $foreign.setHighlightGutterLineImpl(shouldHighlight, self);
      };
  };
  var setHighlightActiveLine = function (shouldHighlight) {
      return function (self) {
          return $foreign.setHighlightActiveLineImpl(shouldHighlight, self);
      };
  };
  var moveCursorTo = function (row) {
      return function (column) {
          return function (animate) {
              return function (self) {
                  return $foreign.moveCursorToImpl(row, Data_Nullable.toNullable(column), Data_Nullable.toNullable(animate), self);
              };
          };
      };
  };
  exports["moveCursorTo"] = moveCursorTo;
  exports["setHighlightActiveLine"] = setHighlightActiveLine;
  exports["setHighlightGutterLine"] = setHighlightGutterLine;
  exports["setReadOnly"] = setReadOnly;
  exports["setValue"] = setValue;
  exports["setMaxLines"] = setMaxLines;
  exports["getCursorPosition"] = $foreign.getCursorPosition;
  exports["getSession"] = $foreign.getSession;
  exports["getValue"] = $foreign.getValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Ace.Types"] = $PS["Ace.Types"] || {};
  var exports = $PS["Ace.Types"];
  var getRow = function (v) {
      return v.row;
  };
  var getColumn = function (v) {
      return v.column;
  };
  exports["getRow"] = getRow;
  exports["getColumn"] = getColumn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  var $90 = wrap(dictNewtype1);
                  var $91 = unwrap(dictNewtype);
                  return function ($92) {
                      return $90(f($91($92)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOf = function (dictFoldable) {
      return function (dictPlus) {
          return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  var notElem = function (dictFoldable) {
      return function (dictEq) {
          return function (x) {
              var $207 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
              var $208 = elem(dictFoldable)(dictEq)(x);
              return function ($209) {
                  return $207($208($209));
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["oneOf"] = oneOf;
  exports["notElem"] = notElem;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];            
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Left) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Right) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var eqEither = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                  };
                  return false;
              };
          });
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                                                          
  var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
  var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["isLeft"] = isLeft;
  exports["isRight"] = isRight;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["eqEither"] = eqEither;
  exports["foldableEither"] = foldableEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  if (v instanceof Data_Ordering.LT) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
              };
          });
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });           
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v.value1 instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value1.value0;
                          $copy_memo = new Cons(v.value0, memo);
                          return;
                      };
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 133, column 22 - line 135, column 61): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 140, column 22 - line 142, column 52): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 162, column 1 - line 164, column 37): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["plusList"] = plusList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["singleton"] = singleton;
  exports["cons"] = cons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = new Data_Functor.Functor(function (f) {
      return function (x) {
          return mkAp(new Pure(f))(x);
      };
  });
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = new Control_Apply.Apply(function () {
      return functorFreeAp;
  }, function (fba) {
      return function (fb) {
          return mkAp(fba)(fb);
      };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
      return applyFreeAp;
  }, Pure.create);
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["retractFreeAp"] = retractFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $17 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($18) {
                  return $17(Data_Either.Left.create($18));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];            
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                      if (rm instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                      };
                      if (rm instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                              if (rn instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                              };
                              if (rn instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [ rn.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [ rm.constructor.name ]);
                  });
              };
          });
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  var semigroupEffect = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
  };
  var monoidEffect = function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEffect(dictMonoid.Semigroup0());
      }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
  };
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["monoidEffect"] = monoidEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v = Effect_Ref.read(r)();
                      if (v instanceof Loop) {
                          var e = f(v.value0)();
                          Effect_Ref.write(e)(r)();
                          return false;
                      };
                      if (v instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
          };
      };
  });
  var forever = function (dictMonadRec) {
      return function (ma) {
          return tailRecM(dictMonadRec)(function (u) {
              return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
          })(Data_Unit.unit);
      };
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["forever"] = forever;
  exports["monadRecEffect"] = monadRecEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Free.Trans"] = $PS["Control.Monad.Free.Trans"] || {};
  var exports = $PS["Control.Monad.Free.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];                      
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)((function () {
                              var $123 = Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f);
                              return function ($124) {
                                  return $123(v1.value1($124));
                              };
                          })());
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 59, column 1 - line 61, column 71): " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var bimapFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (nf) {
              return function (nm) {
                  return function (v) {
                      if (v instanceof Bind) {
                          return Data_Exists.runExists(function (v1) {
                              return bound((function () {
                                  var $125 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                                  return function ($126) {
                                      return $125(v1.value0($126));
                                  };
                              })())((function () {
                                  var $127 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                                  return function ($128) {
                                      return $127(v1.value1($128));
                                  };
                              })());
                          })(v.value0);
                      };
                      if (v instanceof FreeT) {
                          return new FreeT(function (v1) {
                              return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)((function () {
                                  var $129 = Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm));
                                  return function ($130) {
                                      return nf($129($130));
                                  };
                              })()))(nm(v.value0(Data_Unit.unit)));
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 123, column 1 - line 123, column 109): " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
                  };
              };
          };
      };
  };
  var hoistFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 54, column 20 - line 56, column 67): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 5 - line 57, column 98): " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 49, column 3 - line 49, column 75): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 141, column 3 - line 141, column 63): " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 82, column 15 - line 84, column 25): " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["hoistFreeT"] = hoistFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Coroutine"] = $PS["Control.Coroutine"] || {};
  var exports = $PS["Control.Coroutine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)((function () {
          var $176 = Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0());
          var $177 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
          return function ($178) {
              return $176($177($178));
          };
      })());
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (l) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (r) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v1) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(l)(r)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (next) {
                                          if (next instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(next.value0));
                                          };
                                          if (next instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v1) {
                                                      return go(t);
                                                  });
                                              })(next.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [ next.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (e) {
              if (e instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(e.value0))(Data_Maybe.Nothing.value);
              };
              if (e instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(e.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [ e.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  var consumer = function (dictMonad) {
      return function (send) {
          return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (a) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(a));
          }));
      };
  };
  exports["runProcess"] = runProcess;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["consumer"] = consumer;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["functorEmit"] = functorEmit;
  exports["functorAwait"] = functorAwait;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign["_fork"](false);
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $43 = Data_Functor["void"](Effect.functorEffect);
      return function ($44) {
          return $43(launchAff($44));
      };
  })();                              
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = (function () {
      var $45 = Effect_Class.liftEffect(monadEffectAff);
      return function ($46) {
          return Canceler(Data_Function["const"]($45($46)));
      };
  })();
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);
  var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $49 = Effect_Class.liftEffect(monadEffectAff);
              return function ($50) {
                  return $49(k($50));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, (function () {
      var $53 = Control_Parallel_Class.parallel(parallelAff);
      var $54 = Control_Applicative.pure(applicativeAff);
      return function ($55) {
          return $53($54($55));
      };
  })());
  var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (err) {
              return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
          };
      };
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (res) {
              if (res instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(res.value0);
              };
              if (res instanceof Control_Monad_Rec_Class.Loop) {
                  return go(res.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ res.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var monoidCanceler = new Data_Monoid.Monoid(function () {
      return semigroupCanceler;
  }, nonCanceler);
  exports["launchAff_"] = launchAff_;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["attempt"] = attempt;
  exports["delay"] = delay;
  exports["finally"] = $$finally;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["monoidCanceler"] = monoidCanceler;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.AVar"] = $PS["Effect.AVar"] || {};
  var exports = $PS["Effect.AVar"];
  var $foreign = $PS["Effect.AVar"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var kill = function (err) {
      return function (avar) {
          return $foreign["_killVar"](ffiUtil, err, avar);
      };
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign["_putVar"](ffiUtil, value, avar, cb);
          };
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign["_takeVar"](ffiUtil, avar, cb);
      };
  };
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff.AVar"] = $PS["Effect.Aff.AVar"] || {};
  var exports = $PS["Effect.Aff.AVar"];
  var Effect_AVar = $PS["Effect.AVar"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var c = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(c);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var c = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(c);
              };
          });
      };
  };   
  var kill = function (error) {
      var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
      var $12 = Effect_AVar.kill(error);
      return function ($13) {
          return $11($12($13));
      };
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Coroutine.Aff"] = $PS["Control.Coroutine.Aff"] || {};
  var exports = $PS["Control.Coroutine.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];                
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var Finish = (function () {
      function Finish(value0) {
          this.value0 = value0;
      };
      Finish.create = function (value0) {
          return new Finish(value0);
      };
      return Finish;
  })();
  var produceAff = function (recv) {
      return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Effect_Aff_AVar.empty))(function (v) {
          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Effect_Aff.forkAff(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))(function () {
              return Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.mapFlipped(Effect_Aff.functorAff)(Effect_Aff_AVar.take(v))(function (v1) {
                  if (v1 instanceof Emit) {
                      return new Data_Either.Left(v1.value0);
                  };
                  if (v1 instanceof Finish) {
                      return new Data_Either.Right(v1.value0);
                  };
                  throw new Error("Failed pattern match at Control.Coroutine.Aff (line 77, column 30 - line 79, column 24): " + [ v1.constructor.name ]);
              }));
          });
      });
  };
  var produce = function (recv) {
      return produceAff(function (v) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv((function () {
              var $14 = Data_Functor["void"](Effect.functorEffect);
              var $15 = Effect_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)));
              return function ($16) {
                  return $14($15(v($16)));
              };
          })()));
      });
  };          
  var emit = function (v) {
      return function ($19) {
          return v(Emit.create($19));
      };
  };
  exports["emit"] = emit;
  exports["produce"] = produce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Effect_Aff.functorFiber;
  }, function () {
      return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["monadForkAff"] = monadForkAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var unsnoc = function (lst) {
      var go = function ($copy_v) {
          return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, acc) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return new Data_Maybe.Just({
                          revInit: acc,
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_v = v.value1;
                      $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [ v.constructor.name, acc.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_acc);
              };
              return $tco_result;
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit),
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };    
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["unsnoc"] = unsnoc;
  exports["reverse"] = reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)((function () {
              var $120 = Control_Applicative.pure(freeApplicative);
              return function ($121) {
                  return $120(k($121));
              };
          })())(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($122) {
      return fromView(Return.create($122));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $123 = Control_Applicative.pure(freeApplicative);
          return function ($124) {
              return $123($124);
          };
      })()));
  };
  var substFree = function (k) {
      var go = function (f) {
          var v = toView(f);
          if (v instanceof Return) {
              return Control_Applicative.pure(freeApplicative)(v.value0);
          };
          if (v instanceof Bind) {
              return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [ v.constructor.name ]);
      };
      return go;
  };
  var hoistFree = function (k) {
      return substFree(function ($125) {
          return liftF(k($125));
      });
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($136) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($136));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["hoistFree"] = hoistFree;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeMonad"] = freeMonad;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  exports["functorST"] = functorST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["gets"] = gets;
  exports["put"] = put;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  
  // | This module defines the state monad transformer, `StateT`.
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Class = $PS["Effect.Class"];                

  // | The state monad transformer.
  // |
  // | This monad transformer extends the base monad with the operations `get`
  // | and `put` which can be used to model a single piece of mutable state.
  // |
  // | The `MonadState` type class describes the operations supported by this monad.
  var StateT = function (x) {
      return x;
  };

  // | Run a computation in the `StateT` monad.
  var runStateT = function (v) {
      return v;
  };         
  var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return function (s) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
              });
          };
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadEffectState = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadStateT(dictMonadEffect.Monad0());
      }, (function () {
          var $109 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0());
          var $110 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($111) {
              return $109($110($111));
          };
      })());
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["monadEffectState"] = monadEffectState;
})(PS);
(function(exports) {
    

  exports.thenImpl = function(promise) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise.then(succCB, errCB);
        };
      };
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Promise"] = $PS["Control.Promise"] || {};
  var exports = $PS["Control.Promise"];
  var $foreign = $PS["Control.Promise"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var toAff$prime = function (customCoerce) {
      return function (p) {
          return Effect_Aff.makeAff(function (cb) {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Monoid.mempty(Effect_Aff.monoidCanceler))($foreign.thenImpl(p)(function ($1) {
                  return cb(Data_Either.Left.create(customCoerce($1)))();
              })(function ($2) {
                  return cb(Data_Either.Right.create($2))();
              }));
          });
      };
  };
  var coerce = function (fn) {
      return Data_Either.either(function (v) {
          return Effect_Exception.error("Promise failed, couldn't extract JS Error or String");
      })(Control_Category.identity(Control_Category.categoryFn))(Control_Monad_Except.runExcept(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged("Error")(fn))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Effect_Exception.error)(Foreign.readString(fn)))));
  };
  var toAff = toAff$prime(coerce);
  exports["toAff"] = toAff;
})(PS);
(function(exports) {
  "use strict";

  exports.replaceAll = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
      };
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.trim = function (s) {
    return s.trim();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["replaceAll"] = $foreign.replaceAll;
  exports["split"] = $foreign.split;
  exports["trim"] = $foreign.trim;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["DOM.HTML.Indexed.InputAcceptType"] = $PS["DOM.HTML.Indexed.InputAcceptType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputAcceptType"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_String_Common = $PS["Data.String.Common"];                
  var AcceptMediaType = (function () {
      function AcceptMediaType(value0) {
          this.value0 = value0;
      };
      AcceptMediaType.create = function (value0) {
          return new AcceptMediaType(value0);
      };
      return AcceptMediaType;
  })();
  var AcceptFileExtension = (function () {
      function AcceptFileExtension(value0) {
          this.value0 = value0;
      };
      AcceptFileExtension.create = function (value0) {
          return new AcceptFileExtension(value0);
      };
      return AcceptFileExtension;
  })();
  var renderInputAcceptTypeAtom = function (v) {
      if (v instanceof AcceptMediaType) {
          return v.value0;
      };
      if (v instanceof AcceptFileExtension) {
          return v.value0;
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputAcceptType (line 28, column 29 - line 30, column 33): " + [ v.constructor.name ]);
  };
  var renderInputAcceptType = function (v) {
      return Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(renderInputAcceptTypeAtom)(v));
  };
  var mediaType = function (mt) {
      return [ new AcceptMediaType(mt) ];
  };
  exports["mediaType"] = mediaType;
  exports["renderInputAcceptType"] = renderInputAcceptType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputType"];
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [ v.constructor.name ]);
  };
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputPassword"] = InputPassword;
  exports["InputText"] = InputText;
  exports["renderInputType"] = renderInputType;
})(PS);
(function(exports) {
  "use strict";

  function id(x) {
    return x;
  }

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }

  exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function($PS) {
  
  // | This module defines a data type and various functions for creating and
  // | manipulating JSON values. The README contains additional documentation
  // | for this module.
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];                        
  var verbJsonType = function (def) {
      return function (f) {
          return function (g) {
              return g(def)(f);
          };
      };
  };

  // Decoding
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);

  // Tests
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was a `String`, and a default value for all other cases.
  var caseJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        

  // | Convert `Json` to a `String` value, if the `Json` is a string. To write a
  // | `Json` value to a JSON string, see `stringify`.
  var toString = toJsonType(caseJsonString);

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was an `Object`, and a default value for all other cases.
  var caseJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        

  // | Convert `Json` to an `Object` of `Json` values, if the `Json` is an object.
  var toObject = toJsonType(caseJsonObject);

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was a `Number`, and a default value for all other cases.
  var caseJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        

  // | Convert `Json` to a `Number` value, if the `Json` is a number.
  var toNumber = toJsonType(caseJsonNumber);

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was null, and a default value for all other cases.
  var caseJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };

  // | Check if the provided `Json` is the `null` value
  var isNull = isJsonType(caseJsonNull);

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was a `Boolean`, and a default value for all other cases.
  var caseJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                          

  // | Convert `Json` to a `Boolean` value, if the `Json` is a boolean.
  var toBoolean = toJsonType(caseJsonBoolean);

  // | A simpler version of `caseJson` which accepts a callback for when the
  // | `Json` argument was a `Array Json`, and a default value for all other cases.
  var caseJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      

  // | Convert `Json` to an `Array` of `Json` values, if the `Json` is an array.
  var toArray = toJsonType(caseJsonArray);
  exports["isNull"] = isNull;
  exports["toBoolean"] = toBoolean;
  exports["toNumber"] = toNumber;
  exports["toString"] = toString;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["fromBoolean"] = $foreign.fromBoolean;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromString"] = $foreign.fromString;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromObject"] = $foreign.fromObject;
  exports["jsonNull"] = $foreign.jsonNull;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                      
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["for"] = $$for;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._fmapObject = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                          
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array (line 143, column 3 - line 145, column 26): " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  };
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var singleton = function (a) {
      return [ a ];
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $94 = Data_Maybe.maybe([  ])(singleton);
          return function ($95) {
              return $94(f($95));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["last"] = last;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["concat"] = $foreign.concat;
  exports["filter"] = $foreign.filter;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];      
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  exports["FunctorWithIndex"] = FunctorWithIndex;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {};
  var exports = $PS["Data.TraversableWithIndex"];  
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  };
  exports["TraversableWithIndex"] = TraversableWithIndex;
  exports["traverseWithIndex"] = traverseWithIndex;
})(PS);
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      var $36 = Data_Array.toUnfoldable(dictUnfoldable);
      var $37 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
      return function ($38) {
          return $36($37($38));
      };
  };                                                             
  var thawST = $foreign["_copyST"];
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };                                                                                                    
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign["_mapWithKey"](m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var functorObject = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign["_fmapObject"](m, f);
      };
  });
  var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorObject;
  }, mapWithKey);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var s = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
              })();
              return s;
          });
      };
  };
  var fold = $foreign["_foldM"](Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableObject;
  }, function (dictMonoid) {
      return foldMap(dictMonoid);
  }, function (f) {
      return fold(Data_Function.flip(f));
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
          };
      };
  });
  var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexObject;
  }, function () {
      return functorWithIndexObject;
  }, function () {
      return traversableObject;
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  var traversableObject = new Data_Traversable.Traversable(function () {
      return foldableObject;
  }, function () {
      return functorObject;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      var $43 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
      return function ($44) {
          return $43(Data_Function["const"]($44));
      };
  });
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["functorObject"] = functorObject;
  exports["traversableObject"] = traversableObject;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Argonaut.Decode.Class"] = $PS["Data.Argonaut.Decode.Class"] || {};
  var exports = $PS["Data.Argonaut.Decode.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Foreign_Object = $PS["Foreign.Object"];
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };                                                                                                                                                                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);                                                                                       
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeJObject = (function () {
      var $56 = Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create);
      return function ($57) {
          return $56(Data_Argonaut_Core.toObject($57));
      };
  })();
  var decodeForeignObject = function (dictDecodeJson) {
      return new DecodeJson((function () {
          var $83 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode ForeignObject: " + v;
          });
          var $84 = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject);
          return function ($85) {
              return $83($84($85));
          };
      })());
  };
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeForeignObject"] = decodeForeignObject;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS);
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["fromString"] = fromString;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Argonaut.Encode.Class"] = $PS["Data.Argonaut.Encode.Class"] || {};
  var exports = $PS["Data.Argonaut.Encode.Class"];
  var Control_Category = $PS["Control.Category"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var GEncodeJson = function (gEncodeJson) {
      this.gEncodeJson = gEncodeJson;
  };
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };
  var gEncodeJsonNil = new GEncodeJson(function (v) {
      return function (v1) {
          return Foreign_Object.empty;
      };
  });
  var gEncodeJson = function (dict) {
      return dict.gEncodeJson;
  };                                                
  var encodeRecord = function (dictGEncodeJson) {
      return function (dictRowToList) {
          return new EncodeJson(function (rec) {
              return Data_Argonaut_Core.fromObject(gEncodeJson(dictGEncodeJson)(rec)(Type_Data_RowList.RLProxy.value));
          });
      };
  };                                                                                       
  var encodeJsonJson = new EncodeJson(Control_Category.identity(Control_Category.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);  
  var encodeJsonInt = new EncodeJson(function ($40) {
      return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($40));
  });
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (dictEncodeJson) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
      });
  };
  var gEncodeJsonCons = function (dictEncodeJson) {
      return function (dictGEncodeJson) {
          return function (dictIsSymbol) {
              return function (dictCons) {
                  return new GEncodeJson(function (row) {
                      return function (v) {
                          return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value))(encodeJson(dictEncodeJson)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(row)))(gEncodeJson(dictGEncodeJson)(row)(Type_Data_RowList.RLProxy.value));
                      };
                  });
              };
          };
      };
  };
  var encodeForeignObject = function (dictEncodeJson) {
      return new EncodeJson((function () {
          var $54 = Data_Functor.map(Foreign_Object.functorObject)(encodeJson(dictEncodeJson));
          return function ($55) {
              return Data_Argonaut_Core.fromObject($54($55));
          };
      })());
  };
  exports["encodeJson"] = encodeJson;
  exports["encodeJsonInt"] = encodeJsonInt;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;
  exports["encodeForeignObject"] = encodeForeignObject;
  exports["encodeRecord"] = encodeRecord;
  exports["gEncodeJsonNil"] = gEncodeJsonNil;
  exports["gEncodeJsonCons"] = gEncodeJsonCons;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Control_Category = $PS["Control.Category"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];                        
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  var functorCoyoneda = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return coyoneda(function ($85) {
                  return f(v1.value0($85));
              })(v1.value1);
          })(v);
      };
  });
  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
  exports["unCoyoneda"] = unCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;
})(PS);
(function(exports) {
  "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["BoundedEnum"] = BoundedEnum;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Date.Component"] = $PS["Data.Date.Component"] || {};
  var exports = $PS["Data.Date.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var ordYear = Data_Ord.ordInt;
  var ordDay = Data_Ord.ordInt;
  var eqMonth = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return true;
          };
          if (x instanceof February && y instanceof February) {
              return true;
          };
          if (x instanceof March && y instanceof March) {
              return true;
          };
          if (x instanceof April && y instanceof April) {
              return true;
          };
          if (x instanceof May && y instanceof May) {
              return true;
          };
          if (x instanceof June && y instanceof June) {
              return true;
          };
          if (x instanceof July && y instanceof July) {
              return true;
          };
          if (x instanceof August && y instanceof August) {
              return true;
          };
          if (x instanceof September && y instanceof September) {
              return true;
          };
          if (x instanceof October && y instanceof October) {
              return true;
          };
          if (x instanceof November && y instanceof November) {
              return true;
          };
          if (x instanceof December && y instanceof December) {
              return true;
          };
          return false;
      };
  });
  var ordMonth = new Data_Ord.Ord(function () {
      return eqMonth;
  }, function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof January) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof January) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof February && y instanceof February) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof February) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof February) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof March && y instanceof March) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof March) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof March) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof April && y instanceof April) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof April) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof April) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof May && y instanceof May) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof May) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof May) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof June && y instanceof June) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof June) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof June) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof July && y instanceof July) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof July) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof July) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof August && y instanceof August) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof August) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof August) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof September && y instanceof September) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof September) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof September) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof October && y instanceof October) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof October) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof October) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof November && y instanceof November) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof November) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof November) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof December && y instanceof December) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 61, column 1 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
      };
  });                       
  var boundedYear = new Data_Bounded.Bounded(function () {
      return ordYear;
  }, -271820 | 0, 275759);       
  var boundedMonth = new Data_Bounded.Bounded(function () {
      return ordMonth;
  }, January.value, December.value);
  var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
      return boundedYear;
  }, function () {
      return enumYear;
  }, 547580, function (v) {
      return v;
  }, function (n) {
      if (n >= (-271820 | 0) && n <= 275759) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [ n.constructor.name ]);
  });
  var enumYear = new Data_Enum.Enum(function () {
      return ordYear;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumYear);
      var $47 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumYear);
      var $50 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
      return boundedMonth;
  }, function () {
      return enumMonth;
  }, 12, function (v) {
      if (v instanceof January) {
          return 1;
      };
      if (v instanceof February) {
          return 2;
      };
      if (v instanceof March) {
          return 3;
      };
      if (v instanceof April) {
          return 4;
      };
      if (v instanceof May) {
          return 5;
      };
      if (v instanceof June) {
          return 6;
      };
      if (v instanceof July) {
          return 7;
      };
      if (v instanceof August) {
          return 8;
      };
      if (v instanceof September) {
          return 9;
      };
      if (v instanceof October) {
          return 10;
      };
      if (v instanceof November) {
          return 11;
      };
      if (v instanceof December) {
          return 12;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(January.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(February.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(March.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(April.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(May.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(June.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(July.value);
      };
      if (v === 8) {
          return new Data_Maybe.Just(August.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(September.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(October.value);
      };
      if (v === 11) {
          return new Data_Maybe.Just(November.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(December.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumMonth = new Data_Enum.Enum(function () {
      return ordMonth;
  }, (function () {
      var $58 = Data_Enum.toEnum(boundedEnumMonth);
      var $59 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($60) {
          return $58((function (v) {
              return v - 1 | 0;
          })($59($60)));
      };
  })(), (function () {
      var $61 = Data_Enum.toEnum(boundedEnumMonth);
      var $62 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($63) {
          return $61((function (v) {
              return v + 1 | 0;
          })($62($63)));
      };
  })());
  var boundedDay = new Data_Bounded.Bounded(function () {
      return ordDay;
  }, 1, 31);
  var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
      return boundedDay;
  }, function () {
      return enumDay;
  }, 31, function (v) {
      return v;
  }, function (n) {
      if (n >= 1 && n <= 31) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [ n.constructor.name ]);
  });
  var enumDay = new Data_Enum.Enum(function () {
      return ordDay;
  }, (function () {
      var $64 = Data_Enum.toEnum(boundedEnumDay);
      var $65 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($66) {
          return $64((function (v) {
              return v - 1 | 0;
          })($65($66)));
      };
  })(), (function () {
      var $67 = Data_Enum.toEnum(boundedEnumDay);
      var $68 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($69) {
          return $67((function (v) {
              return v + 1 | 0;
          })($68($69)));
      };
  })());
  exports["boundedEnumYear"] = boundedEnumYear;
  exports["boundedEnumMonth"] = boundedEnumMonth;
  exports["boundedEnumDay"] = boundedEnumDay;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Date"] = $PS["Data.Date"] || {};
  var exports = $PS["Data.Date"];
  var $foreign = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];                                
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  }; 
  var month = function (v) {
      return v.value1;
  };
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.DateTime"] = $PS["Data.DateTime"] || {};
  var exports = $PS["Data.DateTime"];                                

  // | A date/time value in the Gregorian calendar/UTC time zone.
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  var time = function (v) {
      return v.value1;
  };
  var date = function (v) {
      return v.value0;
  };
  exports["DateTime"] = DateTime;
  exports["date"] = date;
  exports["time"] = time;
})(PS);
(function(exports) {
  "use strict";

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time"] = $PS["Data.Time"] || {};
  var exports = $PS["Data.Time"];          
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  var minute = function (v) {
      return v.value1;
  };
  var hour = function (v) {
      return v.value0;
  };
  exports["Time"] = Time;
  exports["hour"] = hour;
  exports["minute"] = minute;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var $foreign = $PS["Data.DateTime.Instant"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
  };
  exports["instant"] = instant;
  exports["toDateTime"] = toDateTime;
})(PS);
(function(exports) {
  
  function toTimestamp(date) {
      const milliseconds = date.getTime();
      return Math.floor(milliseconds / 1000);
  }

  exports.getDateTimeNow = toTimestamp(new Date());
})(PS["Data.DateTime.Utils"] = PS["Data.DateTime.Utils"] || {});
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.splitAt = function (i) {
    return function (s) {
      return { before: s.substring(0, i), after: s.substring(i) };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                         
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["charAt"] = charAt;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
  exports["splitAt"] = $foreign.splitAt;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  }; 
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time.Component"] = $PS["Data.Time.Component"] || {};
  var exports = $PS["Data.Time.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"]; 
  var ordMinute = Data_Ord.ordInt;     
  var ordHour = Data_Ord.ordInt;
  var boundedMinute = new Data_Bounded.Bounded(function () {
      return ordMinute;
  }, 0, 59); 
  var boundedHour = new Data_Bounded.Bounded(function () {
      return ordHour;
  }, 0, 23);
  var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
      return boundedMinute;
  }, function () {
      return enumMinute;
  }, 60, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 59) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [ n.constructor.name ]);
  });
  var enumMinute = new Data_Enum.Enum(function () {
      return ordMinute;
  }, (function () {
      var $34 = Data_Enum.toEnum(boundedEnumMinute);
      var $35 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($36) {
          return $34((function (v) {
              return v - 1 | 0;
          })($35($36)));
      };
  })(), (function () {
      var $37 = Data_Enum.toEnum(boundedEnumMinute);
      var $38 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($39) {
          return $37((function (v) {
              return v + 1 | 0;
          })($38($39)));
      };
  })());
  var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
      return boundedHour;
  }, function () {
      return enumHour;
  }, 24, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 23) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [ n.constructor.name ]);
  });
  var enumHour = new Data_Enum.Enum(function () {
      return ordHour;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumHour);
      var $47 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumHour);
      var $50 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  exports["boundedEnumHour"] = boundedEnumHour;
  exports["boundedEnumMinute"] = boundedEnumMinute;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Milliseconds = function (x) {
      return x;
  };
  exports["Milliseconds"] = Milliseconds;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.DateTime.Utils"] = $PS["Data.DateTime.Utils"] || {};
  var exports = $PS["Data.DateTime.Utils"];
  var $foreign = $PS["Data.DateTime.Utils"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];                
  var toString = function (dt) {
      var time = Data_DateTime.time(dt);
      var date = Data_DateTime.date(dt);
      var addZero = function (x) {
          var $1 = Data_String_CodePoints.length(x) === 1;
          if ($1) {
              return "0" + x;
          };
          return x;
      };
      var toStr = function (dictBoundedEnum) {
          var $7 = Data_Show.show(Data_Show.showInt);
          var $8 = Data_Enum.fromEnum(dictBoundedEnum);
          return function ($9) {
              return addZero($7($8($9)));
          };
      };
      var day = toStr(Data_Date_Component.boundedEnumDay)(Data_Date.day(date));
      var hour = toStr(Data_Time_Component.boundedEnumHour)(Data_Time.hour(time));
      var minute = toStr(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(time));
      var month = toStr(Data_Date_Component.boundedEnumMonth)(Data_Date.month(date));
      var year = toStr(Data_Date_Component.boundedEnumYear)(Data_Date.year(date));
      return year + ("/" + (month + ("/" + (day + (" " + (hour + (":" + minute)))))));
  };
  var fromTimestampToElapsedTimeString = function (utcTimestamp) {
      var year = 365.0 * 3600.0 * 24.0;
      var seconds = $foreign.getDateTimeNow - utcTimestamp;
      var month = 30.0 * 3600.0 * 24.0;
      var day = 3600.0 * 24.0;
      var $2 = seconds > year;
      if ($2) {
          return Data_Show.show(Data_Show.showInt)(Data_Int.floor(seconds / year)) + "\u5e74\u524d";
      };
      var $3 = seconds > month;
      if ($3) {
          return Data_Show.show(Data_Show.showInt)(Data_Int.floor(seconds / month)) + "\u30f6\u6708\u524d";
      };
      var $4 = seconds > day;
      if ($4) {
          return Data_Show.show(Data_Show.showInt)(Data_Int.floor(seconds / day)) + "\u65e5\u524d";
      };
      var $5 = seconds > 3600.0;
      if ($5) {
          return Data_Show.show(Data_Show.showInt)(Data_Int.floor(seconds / 3600.0)) + "\u6642\u9593\u524d";
      };
      var $6 = seconds > 60.0;
      if ($6) {
          return Data_Show.show(Data_Show.showInt)(Data_Int.floor(seconds / 60.0)) + "\u5206\u524d";
      };
      return "\u3055\u3063\u304d";
  };
  var fromTimestampToDateTime = function (utcTimestamp) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds((utcTimestamp + 9.0 * 3600.0) * 1000.0)));
  };
  var fromTimestampToString = function (utcTimestamp) {
      return Data_Maybe.maybe("")(toString)(fromTimestampToDateTime(utcTimestamp));
  };
  exports["fromTimestampToString"] = fromTimestampToString;
  exports["fromTimestampToElapsedTimeString"] = fromTimestampToElapsedTimeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [ v.constructor.name ]);
  };
  var isEmpty = function (v) {
      if (v instanceof Leaf) {
          return true;
      };
      return false;
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  }; 
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $769 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($770) {
                                  return Data_Maybe.Just.create($769($770));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  exports["empty"] = empty;
  exports["isEmpty"] = isEmpty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["union"] = union;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map"] = $PS["Data.Map"] || {};
  var exports = $PS["Data.Map"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];                
  var keys = (function () {
      var $0 = Data_Functor["void"](Data_Map_Internal.functorMap);
      return function ($1) {
          return $0($1);
      };
  })();
  exports["keys"] = keys;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Maybe.Utils"] = $PS["Data.Maybe.Utils"] || {};
  var exports = $PS["Data.Maybe.Utils"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var fromEither = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return new Data_Maybe.Just(x);
  });
  var flatten = function (v) {
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(v.value0.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var allJust = function (array) {
      var v = Data_Array.uncons(array);
      if (v instanceof Data_Maybe.Just && v.value0.head instanceof Data_Maybe.Just) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.cons(v.value0.head.value0))(allJust(v.value0.tail));
      };
      if (v instanceof Data_Maybe.Just && v.value0.head instanceof Data_Maybe.Nothing) {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just([  ]);
  };
  exports["flatten"] = flatten;
  exports["allJust"] = allJust;
  exports["fromEither"] = fromEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map.Utils"] = $PS["Data.Map.Utils"] || {};
  var exports = $PS["Data.Map.Utils"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Foreign_Object = $PS["Foreign.Object"];                
  var mergeFromArray = function (getAId) {
      return function (getBId) {
          return function (as) {
              return function (bs) {
                  var map1 = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return Data_Tuple.Tuple.create(getAId(x))(new Data_Tuple.Tuple(new Data_Maybe.Just(x), Data_Maybe.Nothing.value));
                  })(as));
                  var fun = function (b) {
                      return function (v) {
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0.value0)(new Data_Maybe.Just(b)));
                          };
                          if (v instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Just.create(Data_Tuple.Tuple.create(Data_Maybe.Nothing.value)(new Data_Maybe.Just(b)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Utils (line 27, column 11 - line 29, column 45): " + [ v.constructor.name ]);
                      };
                  };
                  var add = function (m) {
                      return function (b) {
                          return Data_Map_Internal.alter(Data_Ord.ordString)(fun(b))(getBId(b))(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(add)(map1)(bs);
              };
          };
      };
  };
  var decodeToMap = function (json) {
      return Data_Maybe_Utils.fromEither(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (obj) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(obj)));
      }));
  };
  exports["mergeFromArray"] = mergeFromArray;
  exports["decodeToMap"] = decodeToMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semiring.Free"] = $PS["Data.Semiring.Free"] || {};
  var exports = $PS["Data.Semiring.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];                      
  var Free = function (x) {
      return x;
  };
  var semiringFree = new Data_Semiring.Semiring(function (v) {
      return function (v1) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(v)(v1);
      };
  }, function (v) {
      return function (v1) {
          return Control_Bind.bind(Data_List_Types.bindList)(v)(function (xs) {
              return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (ys) {
                  return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(ys));
              });
          });
      };
  }, Data_List.singleton(Data_List_Types.Nil.value), Data_List_Types.Nil.value);
  var newtypeFree = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Free);
  var free = function (a) {
      return Data_List.singleton(Data_List.singleton(a));
  };
  exports["free"] = free;
  exports["newtypeFree"] = newtypeFree;
  exports["semiringFree"] = semiringFree;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List = $PS["Data.List"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Unit = $PS["Data.Unit"];
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var toUnfoldable = function (dictUnfoldable) {
      var $63 = Data_List.toUnfoldable(dictUnfoldable);
      return function ($64) {
          return $63(toList($64));
      };
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  }; 
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
})(PS);
(function(exports) {
  "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                                                
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["noFlags"] = noFlags;
})(PS);
(function(exports) {
  "use strict";

  function codePointAtImpl (just, nothing, i, s) {
    var codePointArray = Array.from(s);
    var isWithinRange  = i >= 0 && i < codePointArray.length;

    return isWithinRange ? just(codePointArray[i].codePointAt(0)) : nothing;
  }

  function codePointAtPrimeImpl (just, nothing, i, s) {
    return i >= 0 && i < s.length ? just(s.codePointAt(i)) : nothing;
  }

  function endsWithImpl (searchString, s) {
    return s.endsWith(searchString);
  }

  function endsWithPrimeImpl (searchString, position, s) {
    return s.endsWith(searchString, position);
  }

  function escapeRegexImpl (str) {
    return str.replace(/[.*+?^${}()|[\]\-\\]/g, "\\$&");
  }

  function fromCharArrayImpl (array) {
    return array.join("");
  }

  function includesImpl (searchString, str) {
    return str.includes(searchString);
  }

  function includesPrimeImpl (needle, position, haystack) {
    // For negative `position` values, we search from the beginning of the
    // string. This is in accordance with the native
    // `String.prototype.include` function.
    var pos = Math.max(0, position);

    // Converting to arrays takes care of any surrogate code points
    var needleA    = Array.from(needle);
    var haystackA  = Array.from(haystack).slice(pos);
    var needleALen = needleA.length;

    var maxIndex = haystackA.length + 1 - needleALen;
    var found    = false;
    var i;

    // Naive implementation, at some point we should check whether Boyer-Moore
    // or Knuth-Morris-Pratt are worthwhile
    for (i = 0; i < maxIndex; i++) {
      if (needleA.every(function (e, j) { return e === haystackA[i+j]; })) {
        found = true;
        break;
      }
    }

    return found;
  }

  function lengthImpl (str) {
    return Array.from(str).length;
  }

  function linesImpl (str) {
    // See http://www.unicode.org/reports/tr18/#RL1.6
    return str.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
  }

  function normalizeImpl (str) {
    return str.normalize();
  }

  function normalizePrimeImpl (normalizationForm, str) {
    return str.normalize(normalizationForm);
  }

  function padEndPrimeImpl (targetLength, str) {
    return str.padEnd(targetLength);
  }

  function padStartPrimeImpl (targetLength, str) {
    return str.padStart(targetLength);
  }

  function repeatImpl (just, nothing, n, str) {
    var result;

    try {
      result = just(str.repeat(n));
    }
    catch (error) {
      result = nothing;
    }

    return result;
  }

  function startsWithImpl (searchString, s) {
    return s.startsWith(searchString);
  }

  function startsWithPrimeImpl (searchString, position, s) {
    return s.startsWith(searchString, position);
  }

  function stripCharsImpl (chars, s) {
    return s.replace(RegExp("[" + escapeRegexImpl(chars) + "]", "g"), "");
  }

  function stripDiacriticsImpl (str) {
    return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  }

  function toCharArrayImpl (str) {
    return Array.from(str);
  }

  function unsafeCodePointAtImpl (i, s) {
    var codePointArray = Array.from(s);
    var isWithinRange = i >= 0 && i < codePointArray.length;

    if (isWithinRange) {
      return codePointArray[i].codePointAt(0);
    }
    else {
      throw new Error("Data.String.Utils.unsafeCodePointAt: Invalid index");
    }
  }

  function unsafeCodePointAtPrimeImpl (i, s) {
    if (i >= 0 && i < s.length) {
      return s.codePointAt(i);
    }
    else {
      throw new Error("Data.String.Utils.unsafeCodePointAt': Invalid index");
    }
  }

  function unsafeRepeatImpl (n, str) {
    try {
      return str.repeat(n);
    }
    catch (error) {
      throw new Error("Data.String.Utils.unsafeRepeat: Invalid count");
    }
  }

  function wordsImpl (s) {
    // Split at every Unicode whitespace character (25 as of Unicode 12.1)
    return s.split(/[\u000a-\u000d\u0085\u2028\u2029\u0009\u0020\u00a0\u1680\u2000-\u200a\u202f\u205f\u3000]+/);
  }                                                      
  exports.includesImpl               = includesImpl;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Utils"] = $PS["Data.String.Utils"] || {};
  var exports = $PS["Data.String.Utils"];
  var $foreign = $PS["Data.String.Utils"];
  var includes = function (searchString) {
      return function (s) {
          return $foreign.includesImpl(searchString, s);
      };
  };
  exports["includes"] = includes;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Validation.Semiring"] = $PS["Data.Validation.Semiring"] || {};
  var exports = $PS["Data.Validation.Semiring"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Either = $PS["Data.Either"];
  var Data_Semiring = $PS["Data.Semiring"];                      
  var V = function (x) {
      return x;
  };
  var unV = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Data_Either.Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 48, column 1 - line 48, column 77): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var invalid = function ($71) {
      return V(Data_Either.Left.create($71));
  };
  var functorV = Data_Either.functorEither;    
  var applyV = function (dictSemiring) {
      return new Control_Apply.Apply(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(v.value0);
              };
              if (v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v1.value0);
              };
              if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 89, column 1 - line 93, column 54): " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var applicativeV = function (dictSemiring) {
      return new Control_Applicative.Applicative(function () {
          return applyV(dictSemiring);
      }, function ($80) {
          return V(Data_Either.Right.create($80));
      });
  };
  var altV = function (dictSemiring) {
      return new Control_Alt.Alt(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Left) {
                  return v1;
              };
              if (v instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 104, column 1 - line 107, column 36): " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  exports["unV"] = unV;
  exports["invalid"] = invalid;
  exports["applicativeV"] = applicativeV;
  exports["altV"] = altV;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  var monadAffState = function (dictMonadAff) {
      return new MonadAff(function () {
          return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
      }, (function () {
          var $28 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff.MonadEffect0()).Monad0());
          var $29 = liftAff(dictMonadAff);
          return function ($30) {
              return $28($29($30));
          };
      })());
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
  exports["monadAffState"] = monadAffState;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
})(PS);
(function(exports) {
  "use strict";

  exports.random = Math.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Random"] = $PS["Effect.Random"] || {};
  var exports = $PS["Effect.Random"];
  var $foreign = $PS["Effect.Random"];
  var Data_Int = $PS["Data.Int"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var n = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * n + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";                       
  exports.unsafeDecodeURIComponent = decodeURIComponent;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeDecodeURIComponent"] = $foreign.unsafeDecodeURIComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];                
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {};
  var exports = $PS["Halogen.Data.Slot"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var pop = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var lookup = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (val) {
                          return function (v) {
                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                          };
                      };
                  };
              };
          };
      };
  };
  var foreachSlot = function (dictApplicative) {
      return function (v) {
          return function (k) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
                  return k($37);
              })(v);
          };
      };
  };
  var empty = Data_Map_Internal.empty;
  exports["empty"] = empty;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["pop"] = pop;
  exports["foreachSlot"] = foreachSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var mapDriverState = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (lchs) {
                  return function __do() {
                      var selfRef = Effect_Ref["new"]({})();
                      var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var handlerRef = Effect_Ref["new"](handler)();
                      var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var fresh = Effect_Ref["new"](1)();
                      var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                      var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                      var ds = {
                          component: component,
                          state: component.initialState(input),
                          refs: Data_Map_Internal.empty,
                          children: Halogen_Data_Slot.empty,
                          childrenIn: childrenIn,
                          childrenOut: childrenOut,
                          selfRef: selfRef,
                          handlerRef: handlerRef,
                          pendingQueries: pendingQueries,
                          pendingOuts: pendingOuts,
                          pendingHandlers: pendingHandlers,
                          rendering: Data_Maybe.Nothing.value,
                          fresh: fresh,
                          subscriptions: subscriptions,
                          forks: forks,
                          lifecycleHandlers: lchs
                      };
                      Effect_Ref.write(ds)(selfRef)();
                      return mkDriverStateXRef(selfRef);
                  };
              };
          };
      };
  };
  exports["mapDriverState"] = mapDriverState;
  exports["unDriverStateX"] = unDriverStateX;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {};
  var exports = $PS["Halogen.Query.ChildQuery"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ChildQuery = (function () {
      function ChildQuery(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ChildQuery(value0, value1, value2);
              };
          };
      };
      return ChildQuery;
  })();
  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  exports["ChildQuery"] = ChildQuery;
  exports["mkChildQueryBox"] = mkChildQueryBox;
  exports["unChildQueryBox"] = unChildQueryBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.EventSource"] = $PS["Halogen.Query.EventSource"] || {};
  var exports = $PS["Halogen.Query.EventSource"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var EventSource = function (x) {
      return x;
  };
  var semigroupFinalizer = function (dictApply) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Control_Apply.applySecond(dictApply)(v)(v1);
          };
      });
  };              
  var monoidFinalizer = function (dictApplicative) {
      return new Data_Monoid.Monoid(function () {
          return semigroupFinalizer(dictApplicative.Apply0());
      }, Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
  };
  var hoistFinalizer = function (nat) {
      return function (v) {
          return nat(v);
      };
  };
  var hoistEmitter = function (nat) {
      return function (v) {
          return function ($37) {
              return nat(v($37));
          };
      };
  };
  var hoist = function (dictFunctor) {
      return function (nat) {
          return function (v) {
              return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                  return {
                      producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
                      finalizer: hoistFinalizer(nat)(e.finalizer)
                  };
              })(nat(v)));
          };
      };
  };
  var finalize = function (v) {
      return v;
  };
  var emit = function (v) {
      return function (a) {
          return v(new Data_Either.Left(a));
      };
  };
  var affEventSource = function (dictMonadAff) {
      return function (recv) {
          return EventSource(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (finalizeVar) {
                  var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bindFlipped(Effect_Aff.bindAff)(Data_Function.flip(Effect_Aff_AVar.put)(finalizeVar))(recv(Data_Function.flip(Effect_Aff_AVar.put)(inputVar))))))(function () {
                      return Control_Coroutine.producer((dictMonadAff.MonadEffect0()).Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take(inputVar)));
                  });
                  var finalizer = Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Effect_Aff_AVar.take(finalizeVar))))(function (v) {
                      if (v instanceof Data_Either.Left) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Unit.unit);
                      };
                      if (v instanceof Data_Either.Right) {
                          return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff_AVar.kill(Effect_Exception.error("finalized"))(finalizeVar))(function () {
                              return finalize(v.value0);
                          }));
                      };
                      throw new Error("Failed pattern match at Halogen.Query.EventSource (line 71, column 51 - line 75, column 21): " + [ v.constructor.name ]);
                  });
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                      producer: producer,
                      finalizer: finalizer
                  });
              });
          })));
      };
  };
  var effectEventSource = function (dictMonadAff) {
      var $38 = affEventSource(dictMonadAff);
      var $39 = Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(hoistEmitter(Effect_Aff.launchAff_))((function () {
          var $41 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
          var $42 = Data_Functor.map(Effect.functorEffect)(hoistFinalizer(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)));
          return function ($43) {
              return $41($42($43));
          };
      })());
      return function ($40) {
          return $38($39($40));
      };
  };
  exports["hoist"] = hoist;
  exports["affEventSource"] = affEventSource;
  exports["effectEventSource"] = effectEventSource;
  exports["emit"] = emit;
  exports["finalize"] = finalize;
  exports["monoidFinalizer"] = monoidFinalizer;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];                
  var SubscriptionId = function (x) {
      return x;
  };
  var ForkId = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Unsubscribe = (function () {
      function Unsubscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unsubscribe.create = function (value0) {
          return function (value1) {
              return new Unsubscribe(value0, value1);
          };
      };
      return Unsubscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0) {
          this.value0 = value0;
      };
      ChildQuery.create = function (value0) {
          return new ChildQuery(value0);
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var Kill = (function () {
      function Kill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Kill.create = function (value0) {
          return function (value1) {
              return new Kill(value0, value1);
          };
      };
      return Kill;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var HalogenAp = function (x) {
      return x;
  };
  var HalogenM = function (x) {
      return x;
  };
  var unsubscribe = function (sid) {
      return HalogenM(Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit)));
  };
  var subscribe = function (es) {
      return HalogenM(Control_Monad_Free.liftF(new Subscribe(function (v) {
          return es;
      }, Control_Category.identity(Control_Category.categoryFn))));
  };
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };
  var query = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (q) {
                          return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                              return function (k) {
                                  var $135 = Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k);
                                  var $136 = Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p);
                                  return function ($137) {
                                      return $135($136($137));
                                  };
                              };
                          }, q, Control_Category.identity(Control_Category.categoryFn))))));
                      };
                  };
              };
          };
      };
  };
  var ordSubscriptionId = Data_Ord.ordInt;
  var ordForkId = Data_Ord.ordInt;
  var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HalogenAp);
  var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($138) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create($138)));
      };
  });
  var monadHalogenM = Control_Monad_Free.freeMonad;
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($139) {
      return HalogenM(Control_Monad_Free.liftF(State.create($139)));
  });
  var monadEffectHalogenM = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadHalogenM;
      }, (function () {
          var $144 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($145) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($144($145))));
          };
      })());
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Effect_Aff_Class.MonadAff(function () {
          return monadEffectHalogenM(dictMonadAff.MonadEffect0());
      }, (function () {
          var $146 = Effect_Aff_Class.liftAff(dictMonadAff);
          return function ($147) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($146($147))));
          };
      })());
  };
  var hoist = function (dictFunctor) {
      return function (nat) {
          return function (v) {
              var go = function (v1) {
                  if (v1 instanceof State) {
                      return new State(v1.value0);
                  };
                  if (v1 instanceof Subscribe) {
                      return new Subscribe((function () {
                          var $152 = Halogen_Query_EventSource.hoist(dictFunctor)(nat);
                          return function ($153) {
                              return $152(v1.value0($153));
                          };
                      })(), v1.value1);
                  };
                  if (v1 instanceof Unsubscribe) {
                      return new Unsubscribe(v1.value0, v1.value1);
                  };
                  if (v1 instanceof Lift) {
                      return new Lift(nat(v1.value0));
                  };
                  if (v1 instanceof ChildQuery) {
                      return new ChildQuery(v1.value0);
                  };
                  if (v1 instanceof Raise) {
                      return new Raise(v1.value0, v1.value1);
                  };
                  if (v1 instanceof Par) {
                      return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
                  };
                  if (v1 instanceof Fork) {
                      return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                  };
                  if (v1 instanceof Kill) {
                      return new Kill(v1.value0, v1.value1);
                  };
                  if (v1 instanceof GetRef) {
                      return new GetRef(v1.value0, v1.value1);
                  };
                  throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 281, column 8 - line 291, column 29): " + [ v1.constructor.name ]);
              };
              return Control_Monad_Free.hoistFree(go)(v);
          };
      };
  };
  var getRef = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
  };
  var functorHalogenM = Control_Monad_Free.freeFunctor;
  var fork = function (hmu) {
      return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
  };                           
  var bindHalogenM = Control_Monad_Free.freeBind;           
  var applicativeHalogenM = Control_Monad_Free.freeApplicative;
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Unsubscribe"] = Unsubscribe;
  exports["Lift"] = Lift;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["Kill"] = Kill;
  exports["GetRef"] = GetRef;
  exports["raise"] = raise;
  exports["query"] = query;
  exports["SubscriptionId"] = SubscriptionId;
  exports["subscribe"] = subscribe;
  exports["unsubscribe"] = unsubscribe;
  exports["ForkId"] = ForkId;
  exports["fork"] = fork;
  exports["getRef"] = getRef;
  exports["hoist"] = hoist;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadTransHalogenM"] = monadTransHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
  exports["ordSubscriptionId"] = ordSubscriptionId;
  exports["ordForkId"] = ordForkId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {};
  var exports = $PS["Halogen.Query.HalogenQ"];           
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize(value0) {
          this.value0 = value0;
      };
      Finalize.create = function (value0) {
          return new Finalize(value0);
      };
      return Finalize;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var Action = (function () {
      function Action(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Action.create = function (value0) {
          return function (value1) {
              return new Action(value0, value1);
          };
      };
      return Action;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  exports["Initialize"] = Initialize;
  exports["Finalize"] = Finalize;
  exports["Receive"] = Receive;
  exports["Action"] = Action;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {};
  var exports = $PS["Halogen.Query.Input"];
  var Data_Functor = $PS["Data.Functor"];        
  var RefLabel = function (x) {
      return x;
  };
  var RefUpdate = (function () {
      function RefUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return new RefUpdate(value0, value1);
          };
      };
      return RefUpdate;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();        
  var functorInput = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof RefUpdate) {
              return new RefUpdate(m.value0, m.value1);
          };
          if (m instanceof Action) {
              return new Action(f(m.value0));
          };
          throw new Error("Failed pattern match at Halogen.Query.Input (line 19, column 1 - line 19, column 46): " + [ m.constructor.name ]);
      };
  });
  exports["RefLabel"] = RefLabel;
  exports["RefUpdate"] = RefUpdate;
  exports["Action"] = Action;
  exports["functorInput"] = functorInput;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var unsubscribe = function (sid) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v.subscriptions)))(function (subs) {
                  return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Halogen_Query_EventSource.finalize)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs));
              });
          });
      };
  };
  var queueOrRun = function (ref) {
      return function (au) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return au;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 195, column 33 - line 197, column 57): " + [ v.constructor.name ]);
          });
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                          });
                      });
                  });
              });
          });
      };
  };
  var fresh = function (f) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                      state: i + 1 | 0,
                      value: f(i)
                  };
              })(v.fresh));
          });
      };
  };
  var evalQ = function (render) {
      return function (ref) {
          return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
              });
          };
      };
  };
  var evalM = function (render) {
      return function (initRef) {
          return function (v) {
              var evalChildQuery = function (ref) {
                  return function (cqb) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
                              var evalChild = function (v3) {
                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          return evalQ(render)(ds.selfRef)(v2.value1);
                                      })(dsx);
                                  }));
                              };
                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                          })(cqb);
                      });
                  };
              };
              var go = function (ref) {
                  return function (v1) {
                      if (v1 instanceof Halogen_Query_HalogenM.State) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              var v3 = v1.value0(v2.state);
                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                      component: v2.component,
                                      state: v3.value1,
                                      refs: v2.refs,
                                      children: v2.children,
                                      childrenIn: v2.childrenIn,
                                      childrenOut: v2.childrenOut,
                                      selfRef: v2.selfRef,
                                      handlerRef: v2.handlerRef,
                                      pendingQueries: v2.pendingQueries,
                                      pendingOuts: v2.pendingOuts,
                                      pendingHandlers: v2.pendingHandlers,
                                      rendering: v2.rendering,
                                      fresh: v2.fresh,
                                      subscriptions: v2.subscriptions,
                                      forks: v2.forks,
                                      lifecycleHandlers: v2.lifecycleHandlers
                                  })(ref)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 85, column 7 - line 91, column 21): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {
                              var v2 = v1.value0(sid);
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v3) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(v2)(function (v4) {
                                      var done = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions)))(function (subs) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordSubscriptionId)(sid)))(v3.subscriptions)))(function () {
                                              return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(Halogen_Query_EventSource.finalize(v4.finalizer));
                                          });
                                      });
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (act) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions))))(function (subs) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(new Data_Maybe.Just(true)))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalF(render)(ref)(new Halogen_Query_Input.Action(act)))))(function () {
                                                  return consumer;
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(done)))(v3.subscriptions)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v4.producer)))(function () {
                                              return Halogen_Query_EventSource.finalize(done);
                                          });
                                      });
                                  })))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(unsubscribe(v1.value0)(ref))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {
                          return v1.value0;
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
                          return evalChildQuery(ref)(v1.value0);
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Par) {
                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp((function () {
                              var $85 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                              var $86 = evalM(render)(ref);
                              return function ($87) {
                                  return $85($86($87));
                              };
                          })())(v1.value0)));
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (doneRef) {
                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                          return Effect_Ref.write(true)(doneRef)();
                                      }))(evalM(render)(ref)(v1.value0))))(function (fiber) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {
                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                          });
                      };
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 82, column 12 - line 146, column 33): " + [ v1.constructor.name ]);
                  };
              };
              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
          };
      };
  };
  var evalF = function (render) {
      return function (ref) {
          return function (v) {
              if (v instanceof Halogen_Query_Input.RefUpdate) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
                      return {
                          component: st.component,
                          state: st.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                          children: st.children,
                          childrenIn: st.childrenIn,
                          childrenOut: st.childrenOut,
                          selfRef: st.selfRef,
                          handlerRef: st.handlerRef,
                          pendingQueries: st.pendingQueries,
                          pendingOuts: st.pendingOuts,
                          pendingHandlers: st.pendingHandlers,
                          rendering: st.rendering,
                          fresh: st.fresh,
                          subscriptions: st.subscriptions,
                          forks: st.forks,
                          lifecycleHandlers: st.lifecycleHandlers
                      };
                  })));
              };
              if (v instanceof Halogen_Query_Input.Action) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                      return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                  });
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 51, column 20 - line 57, column 62): " + [ v.constructor.name ]);
          };
      };
  };
  exports["evalF"] = evalF;
  exports["evalQ"] = evalQ;
  exports["evalM"] = evalM;
  exports["handleLifecycle"] = handleLifecycle;
  exports["queueOrRun"] = queueOrRun;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($58) {
          return f($58);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($60) {
                  return f(v.value0($60));
              }, function ($61) {
                  return g(v.value1($61));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["runGraft"] = runGraft;
  exports["bifunctorVDom"] = bifunctorVDom;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.hasAttribute = function (ns, attr, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr);
    } else {
      return el.hasAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["hasAttribute"] = $foreign.hasAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function(exports) {
  "use strict";

  exports.clientHeight = function (el) {
    return function () {
      return el.clientHeight;
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
  exports["clientHeight"] = $foreign.clientHeight;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                  build: state.build,
                  widget: res
              }, patchWidget, haltWidget));
          })(res);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, parent);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forInE(v.children, function (v1, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $56 = v === v1;
      if ($56) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var res = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (ix, v2) {
              var res = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var res = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (v2, ix, v3) {
              var res = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var res = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
              build: build,
              widget: res
          }, patchWidget, haltWidget));
      })(res);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var node = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: node,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (k, ix, v1) {
          var res = build(v1.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (ix, child) {
          var res = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.forE(ch1, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var mapThunk = function (k) {
      return function (v) {
          return new Thunk(v.value0, v.value1, function ($46) {
              return k(v.value2($46));
          }, v.value3);
      };
  };
  var hoist = mapThunk;
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $43 = unsafeEqThunk(state.thunk, t2);
          if ($43) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
              vdom: vdom,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                  thunk: t,
                  vdom: vdom
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
  exports["hoist"] = hoist;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ComponentSlot = (function () {
      function ComponentSlot(value0) {
          this.value0 = value0;
      };
      ComponentSlot.create = function (value0) {
          return new ComponentSlot(value0);
      };
      return ComponentSlot;
  })();
  var ThunkSlot = (function () {
      function ThunkSlot(value0) {
          this.value0 = value0;
      };
      ThunkSlot.create = function (value0) {
          return new ThunkSlot(value0);
      };
      return ThunkSlot;
  })();
  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkEval = function (args) {
      return function (v) {
          if (v instanceof Halogen_Query_HalogenQ.Initialize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Finalize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Receive) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Action) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Query) {
              return Data_Coyoneda.unCoyoneda(function (g) {
                  var $28 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                  return function ($29) {
                      return $28(args.handleQuery($29));
                  };
              })(v.value0);
          };
          throw new Error("Failed pattern match at Halogen.Component (line 172, column 15 - line 182, column 70): " + [ v.constructor.name ]);
      };
  };
  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var hoistSlot = function (dictBifunctor) {
      return function (dictFunctor) {
          return function (nat) {
              return function (v) {
                  if (v instanceof ComponentSlot) {
                      return unComponentSlot(function (slot) {
                          return ComponentSlot.create(mkComponentSlot({
                              get: slot.get,
                              pop: slot.pop,
                              set: slot.set,
                              component: hoist(dictBifunctor)(dictFunctor)(nat)(slot.component),
                              input: slot.input,
                              output: slot.output
                          }));
                      })(v.value0);
                  };
                  if (v instanceof ThunkSlot) {
                      return ThunkSlot.create(Halogen_VDom_Thunk.hoist(Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat)))(v.value0));
                  };
                  throw new Error("Failed pattern match at Halogen.Component (line 271, column 17 - line 276, column 53): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var hoist = function (dictBifunctor) {
      return function (dictFunctor) {
          return function (nat) {
              return unComponent(function (c) {
                  return mkComponent({
                      initialState: c.initialState,
                      render: (function () {
                          var $30 = Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat));
                          return function ($31) {
                              return $30(c.render($31));
                          };
                      })(),
                      "eval": (function () {
                          var $32 = Halogen_Query_HalogenM.hoist(dictFunctor)(nat);
                          return function ($33) {
                              return $32(c["eval"]($33));
                          };
                      })()
                  });
              });
          };
      };
  };
  var defaultEval = {
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var componentSlot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (comp) {
                          return function (input) {
                              return function (output) {
                                  return mkComponentSlot({
                                      get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                                      pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                                      set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                                      component: comp,
                                      input: new Halogen_Query_HalogenQ.Receive(input, Data_Unit.unit),
                                      output: output
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["hoist"] = hoist;
  exports["mkEval"] = mkEval;
  exports["defaultEval"] = defaultEval;
  exports["ComponentSlot"] = ComponentSlot;
  exports["ThunkSlot"] = ThunkSlot;
  exports["componentSlot"] = componentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];                
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var handlePending = function (ref) {
      return function __do() {
          var queue = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)((function () {
              var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
              return function ($29) {
                  return handleAff($28(Data_List.reverse($29)));
              };
          })())();
      };
  };
  var cleanupSubscriptionsAndForks = function (v) {
      return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
              var $30 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)((function () {
                  var $32 = Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);
                  return function ($33) {
                      return $32(Halogen_Query_EventSource.finalize($33));
                  };
              })());
              return function ($31) {
                  return handleAff($30($31));
              };
          })()))(Effect_Ref.read(v.subscriptions))();
          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
              var $34 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
              return function ($35) {
                  return handleAff($34($35));
              };
          })()))(Effect_Ref.read(v.forks))();
          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
      };
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                  var listenerId = Effect_Ref.read(fresh)();
                                  Effect_Ref.modify_(function (v) {
                                      return v + 1 | 0;
                                  })(fresh)();
                                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(listenerId)(inputVar))(ref)();
                                  return listenerId;
                              }))(function (listenerId) {
                                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(Data_Function["const"](new Data_Either.Right(Data_Unit.unit)))(Data_Either.Left.create))(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_AVar.take(inputVar))));
                                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(listenerId))(ref)))(function () {
                                          return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(inputVar);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (listeners) {
                          return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(listeners));
                      });
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return Halogen_Component.unComponent(function (c) {
                              return function __do() {
                                  var lchs$prime = newLifecycleHandlers();
                                  var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                  var pre = Effect_Ref.read(lchs)();
                                  Effect_Ref.write({
                                      initializers: Data_List_Types.Nil.value,
                                      finalizers: pre.finalizers
                                  })(lchs)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $36 = render(lchs);
                                      return function ($37) {
                                          return $36((function (v) {
                                              return v.selfRef;
                                          })($37));
                                      };
                                  })()))(Effect_Ref.read($$var))();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                  return $$var;
                              };
                          });
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (childrenInRef) {
                          return function (childrenOutRef) {
                              return Halogen_Component.unComponentSlot(function (slot) {
                                  return function __do() {
                                      var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                      var $$var = (function () {
                                          if (childrenIn instanceof Data_Maybe.Just) {
                                              Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                              var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                  return function __do() {
                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {
                                                          var $38 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                          return function ($39) {
                                                              return $38(slot.output($39));
                                                          };
                                                      })())();
                                                      return handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](slot.input)))();
                                                  };
                                              })(dsx)();
                                              return childrenIn.value0.value0;
                                          };
                                          if (childrenIn instanceof Data_Maybe.Nothing) {
                                              if (slot.input instanceof Halogen_Query_HalogenQ.Receive) {
                                                  return runComponent(lchs)((function () {
                                                      var $40 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                      return function ($41) {
                                                          return $40(slot.output($41));
                                                      };
                                                  })())(slot.input.value0)(slot.component)();
                                              };
                                              return Effect_Exception["throw"]("Halogen internal error: slot input was not a Receive query")();
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 236, column 14 - line 249, column 81): " + [ childrenIn.constructor.name ]);
                                      })();
                                      var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($42) {
                                          return Data_Maybe.isJust(slot.get($42));
                                      })(Effect_Ref.read(childrenOutRef))();
                                      Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                      Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {
                                          if (v instanceof Data_Maybe.Nothing) {
                                              return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                          };
                                          if (v instanceof Data_Maybe.Just) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 254, column 37 - line 256, column 50): " + [ v.constructor.name ]);
                                      }))();
                                  };
                              });
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                          var handler = (function () {
                              var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                              var $44 = Data_Functor["void"](Effect_Aff.functorAff);
                              var $45 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                              return function ($46) {
                                  return $43($44($45($46)));
                              };
                          })();
                          var childHandler = (function () {
                              var $47 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                              return function ($48) {
                                  return $47(handler(Halogen_Query_Input.Action.create($48)));
                              };
                          })();
                          var rendering = renderSpec.render(function ($49) {
                              return handleAff(handler($49));
                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var children = Effect_Ref.read(v.childrenOut)();
                          var childrenIn = Effect_Ref.read(v.childrenIn)();
                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {
                              return function __do() {
                                  var childDS = Effect_Ref.read(v1)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                  return finalize(lchs)(childDS)();
                              };
                          })();
                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
                              return {
                                  component: ds$prime.component,
                                  state: ds$prime.state,
                                  refs: ds$prime.refs,
                                  children: children,
                                  childrenIn: ds$prime.childrenIn,
                                  childrenOut: ds$prime.childrenOut,
                                  selfRef: ds$prime.selfRef,
                                  handlerRef: ds$prime.handlerRef,
                                  pendingQueries: ds$prime.pendingQueries,
                                  pendingOuts: ds$prime.pendingOuts,
                                  pendingHandlers: ds$prime.pendingHandlers,
                                  rendering: new Data_Maybe.Just(rendering),
                                  fresh: ds$prime.fresh,
                                  subscriptions: ds$prime.subscriptions,
                                  forks: ds$prime.forks,
                                  lifecycleHandlers: ds$prime.lifecycleHandlers
                              };
                          }))();
                          return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {
                              return function __do() {
                                  var handlers = Effect_Ref.read(pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
                                      var $50 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                      return function ($51) {
                                          return handleAff($50(Data_List.reverse($51)));
                                      };
                                  })())(handlers)();
                                  var mmore = Effect_Ref.read(pendingHandlers)();
                                  var $24 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                  if ($24) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptionsAndForks(st)();
                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                          Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: handlers.initializers,
                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                              };
                          })(lchs)();
                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
                              return function __do() {
                                  var dsx = Effect_Ref.read(v)();
                                  return finalize(lchs)(dsx)();
                              };
                          })();
                      };
                  });
              };
              var evalDriver = function (disposed) {
                  return function (ref) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
                              if (v) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              };
                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                          });
                      };
                  };
              };
              var dispose = function (disposed) {
                  return function (lchs) {
                      return function (dsx) {
                          return function (subsRef) {
                              return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                  var v = Effect_Ref.read(disposed)();
                                  if (v) {
                                      return Data_Unit.unit;
                                  };
                                  Effect_Ref.write(true)(disposed)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
                                      var $52 = Effect_Aff_AVar.kill(Effect_Exception.error("disposed"));
                                      return function ($53) {
                                          return Effect_Aff.launchAff_($52($53));
                                      };
                                  })()))(Effect_Ref.read(subsRef))();
                                  finalize(lchs)(dsx)();
                                  return Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $54 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(renderSpec.dispose);
                                      return function ($55) {
                                          return $54((function (v1) {
                                              return v1.rendering;
                                          })($55));
                                      };
                                  })())(dsx)();
                              });
                          };
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (fresh) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (disposed) {
                          return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                              var listeners = Effect_Ref["new"](Data_Map_Internal.empty)();
                              var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(rootHandler(listeners))(i)(component))();
                              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)({
                                      query: evalDriver(disposed)(st.selfRef),
                                      subscribe: subscribe(fresh)(listeners),
                                      dispose: dispose(disposed)(lchs)(dsx)(listeners)
                                  });
                              })(dsx)();
                          });
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $4 = $foreign["_querySelector"](qs);
      return function ($5) {
          return $3($4($5));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  var blur = "blur";
  exports["blur"] = blur;
  exports["change"] = change;
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS);
(function(exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = (function () {
      var $0 = Data_Functor.map(Effect.functorEffect)((function () {
          var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
          };
      })());
      return function ($1) {
          return $0($foreign["_readyState"]($1));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  exports.focus = function (elt) {
    return function () {
      return elt.focus();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;       
  var toElement = Unsafe_Coerce.unsafeCoerce;
  var fromElement = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["toElement"] = toElement;
  exports["toNode"] = toNode;
  exports["focus"] = $foreign.focus;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };

  exports.history = function(window) {
    return function() {
      return window.history;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
  exports["history"] = $foreign.history;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)((function () {
          var $2 = Web_DOM_ParentNode.querySelector(query);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument.toParentNode($3));
          };
      })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (body) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
      });
  });
  exports["awaitBody"] = awaitBody;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);
      if (v) {
          return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
      };
      var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v1 === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return v;
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $56 = v11.value2 === v2.value2;
                      if ($56) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $65 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($65) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var ref = Effect_Ref["new"](v2.value1)();
                      var listener = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var f$prime = Effect_Ref.read(ref)();
                              return mbEmit(f$prime(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var events = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, events);
              var onThat = applyProp(events);
              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: props
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var events = Halogen_VDom_Util.newMutMap();
              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: ps1$prime
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var DOM_HTML_Indexed_InputAcceptType = $PS["DOM.HTML.Indexed.InputAcceptType"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  };
  var widget = function ($30) {
      return HTML(Halogen_VDom_Types.Widget.create($30));
  };
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($31) {
      return HTML(Halogen_VDom_Types.Text.create($31));
  };                                                      
  var ref = function (f) {
      return Halogen_VDom_DOM_Prop.Ref.create(function ($32) {
          return f((function (v) {
              if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Halogen.HTML.Core (line 104, column 21 - line 106, column 23): " + [ v.constructor.name ]);
          })($32));
      });
  };
  var prop = function (dictIsProp) {
      return function (v) {
          var $33 = Halogen_VDom_DOM_Prop.Property.create(v);
          var $34 = toPropValue(dictIsProp);
          return function ($35) {
              return $33($34($35));
          };
      };
  };           
  var newtypeHTML = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HTML);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var isPropInputType = new IsProp(function ($49) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($49));
  });
  var isPropInputAcceptType = new IsProp(function ($50) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputAcceptType.renderInputAcceptType($50));
  });
  var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, children);
              };
          };
      };
  };
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(g))))(f)(v);
          };
      };
  });                                                                            
  var attr = function (ns) {
      return function (v) {
          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
      };
  };
  exports["widget"] = widget;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["ref"] = ref;
  exports["ClassName"] = ClassName;
  exports["newtypeHTML"] = newtypeHTML;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["isPropString"] = isPropString;
  exports["isPropInt"] = isPropInt;
  exports["isPropBoolean"] = isPropBoolean;
  exports["isPropInputType"] = isPropInputType;
  exports["isPropInputAcceptType"] = isPropInputAcceptType;
  exports["newtypeClassName"] = newtypeClassName;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];        
  var slot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return function (outputQuery) {
                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(outputQuery)));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["slot"] = slot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var footer = element("footer");
  var header = element("header");
  var i = element("i");
  var img = function (props) {
      return element("img")(props)([  ]);
  };
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var label_ = label([  ]);  
  var li = element("li");  
  var nav = element("nav");
  var span = element("span");
  var table = element("table");
  var table_ = table([  ]);
  var tbody = element("tbody");
  var tbody_ = tbody([  ]);
  var td = element("td");
  var textarea = function (es) {
      return element("textarea")(es)([  ]);
  };                       
  var th = element("th");
  var thead = element("thead");
  var tr = element("tr");
  var ul = element("ul");
  var dt = element("dt");
  var dl = element("dl");
  var div = element("div");
  var div_ = div([  ]);
  var dd = element("dd");
  var button = element("button");
  var br = function (props) {
      return element("br")(props)([  ]);
  };
  var br_ = br([  ]);    
  var a = element("a");
  exports["a"] = a;
  exports["br_"] = br_;
  exports["button"] = button;
  exports["dd"] = dd;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["dl"] = dl;
  exports["dt"] = dt;
  exports["footer"] = footer;
  exports["header"] = header;
  exports["i"] = i;
  exports["img"] = img;
  exports["input"] = input;
  exports["label_"] = label_;
  exports["li"] = li;
  exports["nav"] = nav;
  exports["span"] = span;
  exports["table_"] = table_;
  exports["tbody"] = tbody;
  exports["tbody_"] = tbody_;
  exports["td"] = td;
  exports["textarea"] = textarea;
  exports["th"] = th;
  exports["thead"] = thead;
  exports["tr"] = tr;
  exports["ul"] = ul;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Clipboard.ClipboardEvent.EventTypes"] = $PS["Web.Clipboard.ClipboardEvent.EventTypes"] || {};
  var exports = $PS["Web.Clipboard.ClipboardEvent.EventTypes"];
  var paste = "paste";
  exports["paste"] = paste;
})(PS);
(function(exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var currentTarget = function ($8) {
      return Data_Nullable.toMaybe($foreign["_currentTarget"]($8));
  };
  exports["currentTarget"] = currentTarget;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.FocusEvent.EventTypes"] = $PS["Web.UIEvent.FocusEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var focus = "focus";
  exports["focus"] = focus;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent.EventTypes"] = $PS["Web.UIEvent.KeyboardEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var keyup = "keyup";
  var keydown = "keydown";
  exports["keydown"] = keydown;
  exports["keyup"] = keyup;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseleave = "mouseleave";
  var mouseenter = "mouseenter";
  var dblclick = "dblclick";
  var click = "click";
  exports["click"] = click;
  exports["dblclick"] = dblclick;
  exports["mouseenter"] = mouseenter;
  exports["mouseleave"] = mouseleave;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Clipboard_ClipboardEvent_EventTypes = $PS["Web.Clipboard.ClipboardEvent.EventTypes"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_UIEvent_FocusEvent_EventTypes = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var Web_UIEvent_KeyboardEvent_EventTypes = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var handler = function (et) {
      var $1 = Halogen_HTML_Core.handler(et);
      var $2 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create));
      return function ($3) {
          return $1($2($3));
      };
  };                             
  var onChange = handler(Web_HTML_Event_EventTypes.change);
  var onClick = (function () {
      var $4 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
      return function ($5) {
          return $4(mouseHandler($5));
      };
  })();
  var onDoubleClick = (function () {
      var $6 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);
      return function ($7) {
          return $6(mouseHandler($7));
      };
  })();                                                      
  var onKeyDown = (function () {
      var $12 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);
      return function ($13) {
          return $12(keyHandler($13));
      };
  })();
  var onKeyUp = (function () {
      var $14 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);
      return function ($15) {
          return $14(keyHandler($15));
      };
  })();
  var onMouseEnter = (function () {
      var $18 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);
      return function ($19) {
          return $18(mouseHandler($19));
      };
  })();
  var onMouseLeave = (function () {
      var $20 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);
      return function ($21) {
          return $20(mouseHandler($21));
      };
  })();
  var focusHandler = Unsafe_Coerce.unsafeCoerce;
  var onBlur = (function () {
      var $44 = handler(Web_HTML_Event_EventTypes.blur);
      return function ($45) {
          return $44(focusHandler($45));
      };
  })();
  var onFocus = (function () {
      var $46 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);
      return function ($47) {
          return $46(focusHandler($47));
      };
  })();
  var clipboardHandler = Unsafe_Coerce.unsafeCoerce;
  var onPaste = (function () {
      var $72 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);
      return function ($73) {
          return $72(clipboardHandler($73));
      };
  })();
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  var go = function (a) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                  };
                  return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                  }));
              };
          };
      };
  };
  var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);              
  var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["onChange"] = onChange;
  exports["onPaste"] = onPaste;
  exports["onClick"] = onClick;
  exports["onDoubleClick"] = onDoubleClick;
  exports["onMouseEnter"] = onMouseEnter;
  exports["onMouseLeave"] = onMouseLeave;
  exports["onKeyDown"] = onKeyDown;
  exports["onKeyUp"] = onKeyUp;
  exports["onBlur"] = onBlur;
  exports["onFocus"] = onFocus;
  exports["onValueChange"] = onValueChange;
  exports["onValueInput"] = onValueInput;
  exports["onChecked"] = onChecked;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var ref = (function () {
      var go = function (p) {
          return function (mel) {
              return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
          };
      };
      return function ($11) {
          return Halogen_HTML_Core.ref(go($11));
      };
  })();
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                                     
  var spellcheck = prop(Halogen_HTML_Core.isPropBoolean)("spellcheck");
  var src = prop(Halogen_HTML_Core.isPropString)("src");     
  var tabIndex = prop(Halogen_HTML_Core.isPropInt)("tabIndex");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.isPropString)("value");  
  var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
  var href = prop(Halogen_HTML_Core.isPropString)("href");        
  var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");
  var colSpan = prop(Halogen_HTML_Core.isPropInt)("colSpan");
  var class_ = (function () {
      var $18 = prop(Halogen_HTML_Core.isPropString)("className");
      var $19 = Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName);
      return function ($20) {
          return $18($19($20));
      };
  })();
  var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  var accept = prop(Halogen_HTML_Core.isPropInputAcceptType)("accept");
  exports["attr"] = attr;
  exports["ref"] = ref;
  exports["class_"] = class_;
  exports["colSpan"] = colSpan;
  exports["href"] = href;
  exports["src"] = src;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["disabled"] = disabled;
  exports["spellcheck"] = spellcheck;
  exports["checked"] = checked;
  exports["placeholder"] = placeholder;
  exports["accept"] = accept;
  exports["tabIndex"] = tabIndex;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var tell = function (act) {
      return act(Data_Unit.unit);
  };
  var request = function (req) {
      return req(Control_Category.identity(Control_Category.categoryFn));
  };
  var getHTMLElementRef = (function () {
      var $1 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
          return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
      });
      return function ($2) {
          return $1(Halogen_Query_HalogenM.getRef($2));
      };
  })();
  exports["tell"] = tell;
  exports["request"] = request;
  exports["getHTMLElementRef"] = getHTMLElementRef;
})(PS);
(function(exports) {
  "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.setNodeValue = function (value) {
    return function (node) {
      return function () {
        node.nodeValue = value;
        return {};
      };
    };
  };

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var parentNode = (function () {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($4) {
          return $3($foreign["_parentNode"]($4));
      };
  })();
  var nextSibling = (function () {
      var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($15) {
          return $14($foreign["_nextSibling"]($15));
      };
  })();
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["setNodeValue"] = $foreign.setNodeValue;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var npn = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(npn)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = function (st) {
                  if (st instanceof Data_Maybe.Just) {
                      return Halogen_VDom_Machine.halt(st.value0);
                  };
                  return Data_Unit.unit;
              };
              var buildWidget = function (spec) {
                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeHTML))(spec);
                  var renderComponentSlot = function (cs) {
                      var renderChild = Effect_Ref.read(renderChildRef)();
                      var rsx = renderChild(cs)();
                      var node = getNode(rsx);
                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                  };
                  var render = function (slot) {
                      if (slot instanceof Halogen_Component.ComponentSlot) {
                          return renderComponentSlot(slot.value0);
                      };
                      if (slot instanceof Halogen_Component.ThunkSlot) {
                          var step = buildThunk(slot.value0);
                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [ slot.constructor.name ]);
                  };
                  var patch = function (st, slot) {
                      if (st instanceof Data_Maybe.Just) {
                          if (slot instanceof Halogen_Component.ComponentSlot) {
                              Halogen_VDom_Machine.halt(st.value0);
                              return renderComponentSlot(slot.value0);
                          };
                          if (slot instanceof Halogen_Component.ThunkSlot) {
                              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [ slot.constructor.name ]);
                      };
                      return render(slot);
                  };
                  return render;
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var renderChildRef = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(renderChildRef)(document);
                                  var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(machine);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: machine,
                                      node: node,
                                      renderChildRef: renderChildRef
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                  var newNode = Halogen_VDom_Machine.extract(machine$prime);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                                  return {
                                      machine: machine$prime,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild,
              dispose: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {
                  return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  
  const Data_Maybe = PS["Data.Maybe"]; 
  const E = PS["Incentknow.Data.Entities"] || {};
  PS["Incentknow.Data.Entities"] = E;
  const endpoint = "http://34.146.76.189:8081";

  exports.apiEndpoint = endpoint;

  async function requestApi(method, args) {
      console.log({ method: method, body: args });
      const session = localStorage.getItem("session");
      const headers = {};
      if (session) {
          headers['Session'] = session;
      }
      let body = null;
      if (method.startsWith("upload")) {
          if (Array.isArray(args)) {
              args = args[0];
          }
          body = new FormData();
          const json = {};
          Object.keys(args).forEach(key => { 
              if (key != 'blob') {
                  json[key] = args[key];
              }
          });
          console.log("args.blob");
          console.log(args.blob);
          body.append('blob', args.blob);
          body.append('json', JSON.stringify(json));
      } else {
          body = JSON.stringify(args);
          headers['Content-Type'] = 'application/json';
      }
      const response = await fetch(endpoint + "/" + method, {
          method: 'POST',
          body,
          headers: headers,
          mode: 'cors'
      });
      return await response.json();
  }

  const psObjectLiteral = x => x;
  const psInt = x => x;

  function jsContentGenerator(obj) {
                  if(E.ContentGeneratorNone && obj instanceof E.ContentGeneratorNone) {
                      return "none";
                  }
            
                  if(E.ContentGeneratorReactor && obj instanceof E.ContentGeneratorReactor) {
                      return "reactor";
                  }
            
                  if(E.ContentGeneratorCrawler && obj instanceof E.ContentGeneratorCrawler) {
                      return "crawler";
                  }
              }

  function psContentGenerator(str) {switch(str){
  case "none":
  return (E.ContentGeneratorNone || { value: null }).value;
  case "reactor":
  return (E.ContentGeneratorReactor || { value: null }).value;
  case "crawler":
  return (E.ContentGeneratorCrawler || { value: null }).value;
  }}

  const jsContainerSk = x => x;


  const psContainerSk = x => x;


  const jsContainerId = x => x;


  const psContainerId = x => x;


  const jsContentSk = x => x;


  const psContentSk = x => x;


  const jsContentId = x => x;


  const psContentId = x => x;


  const jsContentCommitSk = x => x;


  const psContentCommitSk = x => x;


  const jsContentCommitId = x => x;


  const psContentCommitId = x => x;


  function jsContentDraftState(obj) {
                  if(E.ContentDraftStateEditing && obj instanceof E.ContentDraftStateEditing) {
                      return "editing";
                  }
            
                  if(E.ContentDraftStateCanceled && obj instanceof E.ContentDraftStateCanceled) {
                      return "canceled";
                  }
            
                  if(E.ContentDraftStateCommitted && obj instanceof E.ContentDraftStateCommitted) {
                      return "committed";
                  }
              }

  function psContentDraftState(str) {switch(str){
  case "editing":
  return (E.ContentDraftStateEditing || { value: null }).value;
  case "canceled":
  return (E.ContentDraftStateCanceled || { value: null }).value;
  case "committed":
  return (E.ContentDraftStateCommitted || { value: null }).value;
  }}

  const jsContentDraftSk = x => x;


  const psContentDraftSk = x => x;


  const jsContentDraftId = x => x;


  const psContentDraftId = x => x;


  function jsFormatUsage(obj) {
                  if(E.Internal && obj instanceof E.Internal) {
                      return "internal";
                  }
            
                  if(E.External && obj instanceof E.External) {
                      return "external";
                  }
              }

  function psFormatUsage(str) {switch(str){
  case "internal":
  return (E.Internal || { value: null }).value;
  case "external":
  return (E.External || { value: null }).value;
  }}

  const jsFormatSk = x => x;


  const psFormatSk = x => x;


  const jsFormatId = x => x;


  const psFormatId = x => x;


  const jsFormatDisplayId = x => x;


  const psFormatDisplayId = x => x;


  const jsSemanticId = x => x;


  const psSemanticId = x => x;


  const jsMetaPropertySk = x => x;


  const psMetaPropertySk = x => x;


  const jsMetaPropertyId = x => x;


  const psMetaPropertyId = x => x;


  function jsMetaPropertyType(obj) {
                  if(E.ValueRelatively && obj instanceof E.ValueRelatively) {
                      return "value_relatively";
                  }
            
                  if(E.MutualExclutively && obj instanceof E.MutualExclutively) {
                      return "mutual_exclutively";
                  }
            
                  if(E.SeriesDependency && obj instanceof E.SeriesDependency) {
                      return "series_dependency";
                  }
              }

  function psMetaPropertyType(str) {switch(str){
  case "value_relatively":
  return (E.ValueRelatively || { value: null }).value;
  case "mutual_exclutively":
  return (E.MutualExclutively || { value: null }).value;
  case "series_dependency":
  return (E.SeriesDependency || { value: null }).value;
  }}

  function jsTypeName(obj) {
                  if(E.TypeNameInt && obj instanceof E.TypeNameInt) {
                      return "integer";
                  }
            
                  if(E.TypeNameBool && obj instanceof E.TypeNameBool) {
                      return "boolean";
                  }
            
                  if(E.TypeNameString && obj instanceof E.TypeNameString) {
                      return "string";
                  }
            
                  if(E.TypeNameContent && obj instanceof E.TypeNameContent) {
                      return "content";
                  }
            
                  if(E.TypeNameUrl && obj instanceof E.TypeNameUrl) {
                      return "url";
                  }
            
                  if(E.TypeNameObject && obj instanceof E.TypeNameObject) {
                      return "object";
                  }
            
                  if(E.TypeNameText && obj instanceof E.TypeNameText) {
                      return "text";
                  }
            
                  if(E.TypeNameArray && obj instanceof E.TypeNameArray) {
                      return "array";
                  }
            
                  if(E.TypeNameEnum && obj instanceof E.TypeNameEnum) {
                      return "enumerator";
                  }
            
                  if(E.TypeNameDocument && obj instanceof E.TypeNameDocument) {
                      return "document";
                  }
            
                  if(E.TypeNameImage && obj instanceof E.TypeNameImage) {
                      return "image";
                  }
            
                  if(E.TypeNameEntity && obj instanceof E.TypeNameEntity) {
                      return "entity";
                  }
              }

  function psTypeName(str) {switch(str){
  case "integer":
  return (E.TypeNameInt || { value: null }).value;
  case "boolean":
  return (E.TypeNameBool || { value: null }).value;
  case "string":
  return (E.TypeNameString || { value: null }).value;
  case "content":
  return (E.TypeNameContent || { value: null }).value;
  case "url":
  return (E.TypeNameUrl || { value: null }).value;
  case "object":
  return (E.TypeNameObject || { value: null }).value;
  case "text":
  return (E.TypeNameText || { value: null }).value;
  case "array":
  return (E.TypeNameArray || { value: null }).value;
  case "enumerator":
  return (E.TypeNameEnum || { value: null }).value;
  case "document":
  return (E.TypeNameDocument || { value: null }).value;
  case "image":
  return (E.TypeNameImage || { value: null }).value;
  case "entity":
  return (E.TypeNameEntity || { value: null }).value;
  }}

  function jsLanguage(obj) {
                  if(E.Python && obj instanceof E.Python) {
                      return "python";
                  }
            
                  if(E.Javascript && obj instanceof E.Javascript) {
                      return "javascript";
                  }
              }

  function psLanguage(str) {switch(str){
  case "python":
  return (E.Python || { value: null }).value;
  case "javascript":
  return (E.Javascript || { value: null }).value;
  }}

  const jsPropertySk = x => x;


  const psPropertySk = x => x;


  const jsPropertyId = x => x;


  const psPropertyId = x => x;


  const jsStructureSk = x => x;


  const psStructureSk = x => x;


  const jsStructureId = x => x;


  const psStructureId = x => x;


  function jsMaterialType(obj) {
                  if(E.MaterialTypePlaintext && obj instanceof E.MaterialTypePlaintext) {
                      return "plaintext";
                  }
            
                  if(E.MaterialTypeDocument && obj instanceof E.MaterialTypeDocument) {
                      return "document";
                  }
              }

  function psMaterialType(str) {switch(str){
  case "plaintext":
  return (E.MaterialTypePlaintext || { value: null }).value;
  case "document":
  return (E.MaterialTypeDocument || { value: null }).value;
  }}

  const jsMaterialSk = x => x;


  const psMaterialSk = x => x;


  const jsMaterialId = x => x;


  const psMaterialId = x => x;


  const jsMaterialCommitSk = x => x;


  const psMaterialCommitSk = x => x;


  const jsMaterialCommitId = x => x;


  const psMaterialCommitId = x => x;


  function jsMaterialChangeType(obj) {
                  if(E.Initial && obj instanceof E.Initial) {
                      return "initial";
                  }
            
                  if(E.Write && obj instanceof E.Write) {
                      return "write";
                  }
            
                  if(E.Remove && obj instanceof E.Remove) {
                      return "remove";
                  }
              }

  function psMaterialChangeType(str) {switch(str){
  case "initial":
  return (E.Initial || { value: null }).value;
  case "write":
  return (E.Write || { value: null }).value;
  case "remove":
  return (E.Remove || { value: null }).value;
  }}

  function jsMaterialType2(obj) {
                  if(E.MaterialType2Plaintext && obj instanceof E.MaterialType2Plaintext) {
                      return "plaintext";
                  }
            
                  if(E.MaterialType2Document && obj instanceof E.MaterialType2Document) {
                      return "document";
                  }
              }

  function psMaterialType2(str) {switch(str){
  case "plaintext":
  return (E.MaterialType2Plaintext || { value: null }).value;
  case "document":
  return (E.MaterialType2Document || { value: null }).value;
  }}

  const jsMaterialDraftSk = x => x;


  const psMaterialDraftSk = x => x;


  const jsMaterialDraftId = x => x;


  const psMaterialDraftId = x => x;


  function jsMaterialEditingState(obj) {
                  if(E.MaterialEditingStateEditing && obj instanceof E.MaterialEditingStateEditing) {
                      return "editing";
                  }
            
                  if(E.MaterialEditingStateCommitted && obj instanceof E.MaterialEditingStateCommitted) {
                      return "committed";
                  }
            
                  if(E.MaterialEditingStateCanceld && obj instanceof E.MaterialEditingStateCanceld) {
                      return "canceled";
                  }
              }

  function psMaterialEditingState(str) {switch(str){
  case "editing":
  return (E.MaterialEditingStateEditing || { value: null }).value;
  case "committed":
  return (E.MaterialEditingStateCommitted || { value: null }).value;
  case "canceled":
  return (E.MaterialEditingStateCanceld || { value: null }).value;
  }}

  const jsMaterialEditingSk = x => x;


  const psMaterialEditingSk = x => x;


  const jsMaterialEditingId = x => x;


  const psMaterialEditingId = x => x;


  const jsMaterialSnapshotSk = x => x;


  const psMaterialSnapshotSk = x => x;


  const jsMaterialSnapshotId = x => x;


  const psMaterialSnapshotId = x => x;


  function jsActivityType(obj) {
                  if(E.ActivityTypeContentCreated && obj instanceof E.ActivityTypeContentCreated) {
                      return "content_created";
                  }
            
                  if(E.ActivityTypeContentUpdated && obj instanceof E.ActivityTypeContentUpdated) {
                      return "content_updated";
                  }
            
                  if(E.ActivityTypeContentCommented && obj instanceof E.ActivityTypeContentCommented) {
                      return "content_commented";
                  }
              }

  function psActivityType(str) {switch(str){
  case "content_created":
  return (E.ActivityTypeContentCreated || { value: null }).value;
  case "content_updated":
  return (E.ActivityTypeContentUpdated || { value: null }).value;
  case "content_commented":
  return (E.ActivityTypeContentCommented || { value: null }).value;
  }}

  const jsActivitySk = x => x;


  const psActivitySk = x => x;


  const jsActivityId = x => x;


  const psActivityId = x => x;


  const jsCommentSk = x => x;


  const psCommentSk = x => x;


  const jsCommentId = x => x;


  const psCommentId = x => x;


  function jsCommentState(obj) {
                  if(E.CommentStateNormal && obj instanceof E.CommentStateNormal) {
                      return "normal";
                  }
            
                  if(E.CommentStateDeleted && obj instanceof E.CommentStateDeleted) {
                      return "deleted";
                  }
              }

  function psCommentState(str) {switch(str){
  case "normal":
  return (E.CommentStateNormal || { value: null }).value;
  case "deleted":
  return (E.CommentStateDeleted || { value: null }).value;
  }}

  const jsCommentLikeSk = x => x;


  const psCommentLikeSk = x => x;


  const jsContentLikeSk = x => x;


  const psContentLikeSk = x => x;


  function jsNotificationType(obj) {
                  if(E.NotificationTypeContentCommented && obj instanceof E.NotificationTypeContentCommented) {
                      return "content_commented";
                  }
            
                  if(E.NotificationTypeCommentReplied && obj instanceof E.NotificationTypeCommentReplied) {
                      return "comment_replied";
                  }
              }

  function psNotificationType(str) {switch(str){
  case "content_commented":
  return (E.NotificationTypeContentCommented || { value: null }).value;
  case "comment_replied":
  return (E.NotificationTypeCommentReplied || { value: null }).value;
  }}

  const jsNotificationSk = x => x;


  const psNotificationSk = x => x;


  const jsNotificationId = x => x;


  const psNotificationId = x => x;


  function jsReactorState(obj) {
                  if(E.Invaild && obj instanceof E.Invaild) {
                      return "invaild";
                  }
              }

  function psReactorState(str) {switch(str){
  case "invaild":
  return (E.Invaild || { value: null }).value;
  }}

  const jsReactorSk = x => x;


  const psReactorSk = x => x;


  const jsReactorId = x => x;


  const psReactorId = x => x;


  function jsMembershipMethod(obj) {
                  if(E.MembershipMethodNone && obj instanceof E.MembershipMethodNone) {
                      return "none";
                  }
            
                  if(E.MembershipMethodApp && obj instanceof E.MembershipMethodApp) {
                      return "app";
                  }
              }

  function psMembershipMethod(str) {switch(str){
  case "none":
  return (E.MembershipMethodNone || { value: null }).value;
  case "app":
  return (E.MembershipMethodApp || { value: null }).value;
  }}

  function jsSpaceAuthority(obj) {
                  if(E.SpaceAuthorityNone && obj instanceof E.SpaceAuthorityNone) {
                      return "none";
                  }
            
                  if(E.SpaceAuthorityVisible && obj instanceof E.SpaceAuthorityVisible) {
                      return "visible";
                  }
            
                  if(E.SpaceAuthorityReadable && obj instanceof E.SpaceAuthorityReadable) {
                      return "readable";
                  }
            
                  if(E.SpaceAuthorityWritable && obj instanceof E.SpaceAuthorityWritable) {
                      return "writable";
                  }
              }

  function psSpaceAuthority(str) {switch(str){
  case "none":
  return (E.SpaceAuthorityNone || { value: null }).value;
  case "visible":
  return (E.SpaceAuthorityVisible || { value: null }).value;
  case "readable":
  return (E.SpaceAuthorityReadable || { value: null }).value;
  case "writable":
  return (E.SpaceAuthorityWritable || { value: null }).value;
  }}

  const jsSpaceSk = x => x;


  const psSpaceSk = x => x;


  const jsSpaceId = x => x;


  const psSpaceId = x => x;


  const jsSpaceDisplayId = x => x;


  const psSpaceDisplayId = x => x;


  const jsSpaceFollowSk = x => x;


  const psSpaceFollowSk = x => x;


  function jsMemberType(obj) {
                  if(E.MemberTypeNormal && obj instanceof E.MemberTypeNormal) {
                      return "normal";
                  }
            
                  if(E.MemberTypeOwner && obj instanceof E.MemberTypeOwner) {
                      return "owner";
                  }
              }

  function psMemberType(str) {switch(str){
  case "normal":
  return (E.MemberTypeNormal || { value: null }).value;
  case "owner":
  return (E.MemberTypeOwner || { value: null }).value;
  }}

  const jsSpaceMemberSk = x => x;


  const psSpaceMemberSk = x => x;


  const jsSpaceMembershipApplicationSk = x => x;


  const psSpaceMembershipApplicationSk = x => x;


  const jsUserSk = x => x;


  const psUserSk = x => x;


  const jsUserId = x => x;


  const psUserId = x => x;


  const jsUserDisplayId = x => x;


  const psUserDisplayId = x => x;


  function jsRelatedContainer(obj){obj.containerId = obj.containerId ? jsContainerId(obj.containerId) : null;
  obj.space = obj.space ? jsRelatedSpace(obj.space) : null;
  obj.format = obj.format ? jsRelatedFormat(obj.format) : null;




                          if (obj.generator instanceof Data_Maybe.Just) {
                              obj.generator = obj.generator.value0;
                              obj.generator = obj.generator ? jsContentGenerator(obj.generator) : null;
                          } else {
                              obj.generator = null;
                          }
                      return obj;}                                                                             

  function psRelatedContainer(obj){obj.containerId = obj.containerId ? psContainerId(obj.containerId) : null;
  obj.space = obj.space ? psRelatedSpace(obj.space) : null;
  obj.format = obj.format ? psRelatedFormat(obj.format) : null;




                      if (obj.generator) {
                          obj.generator = obj.generator ? psContentGenerator(obj.generator) : null;
                          obj.generator = new Data_Maybe.Just(obj.generator);
                      } else {
                          obj.generator = Data_Maybe.Nothing.value;
                      }
                  return obj;}                                                                             

  function jsAdditionalContainerInfo(obj){

                          if (obj.latestUpdatedAt instanceof Data_Maybe.Just) {
                              obj.latestUpdatedAt = obj.latestUpdatedAt.value0;
                              obj.latestUpdatedAt = obj.latestUpdatedAt ? jsDate(obj.latestUpdatedAt) : null;
                          } else {
                              obj.latestUpdatedAt = null;
                          }
                      return obj;}                                                                                           

  function psAdditionalContainerInfo(obj){

                      if (obj.latestUpdatedAt) {
                          obj.latestUpdatedAt = obj.latestUpdatedAt ? psDate(obj.latestUpdatedAt) : null;
                          obj.latestUpdatedAt = new Data_Maybe.Just(obj.latestUpdatedAt);
                      } else {
                          obj.latestUpdatedAt = Data_Maybe.Nothing.value;
                      }
                  return obj;}                                                                                           

  function jsFocusedContainer(obj){obj.containerId = obj.containerId ? jsContainerId(obj.containerId) : null;
  obj.space = obj.space ? jsRelatedSpace(obj.space) : null;
  obj.format = obj.format ? jsRelatedFormat(obj.format) : null;



                          if (obj.generator instanceof Data_Maybe.Just) {
                              obj.generator = obj.generator.value0;
                              obj.generator = obj.generator ? jsContentGenerator(obj.generator) : null;
                          } else {
                              obj.generator = null;
                          }
                    

                          if (obj.reactor instanceof Data_Maybe.Just) {
                              obj.reactor = obj.reactor.value0;
                              obj.reactor = obj.reactor ? jsIntactReactor(obj.reactor) : null;
                          } else {
                              obj.reactor = null;
                          }
                    


                          if (obj.latestUpdatedAt instanceof Data_Maybe.Just) {
                              obj.latestUpdatedAt = obj.latestUpdatedAt.value0;
                            
                          } else {
                              obj.latestUpdatedAt = null;
                          }
                      return obj;}                                                                             

  function psFocusedContainer(obj){obj.containerId = obj.containerId ? psContainerId(obj.containerId) : null;
  obj.space = obj.space ? psRelatedSpace(obj.space) : null;
  obj.format = obj.format ? psRelatedFormat(obj.format) : null;



                      if (obj.generator) {
                          obj.generator = obj.generator ? psContentGenerator(obj.generator) : null;
                          obj.generator = new Data_Maybe.Just(obj.generator);
                      } else {
                          obj.generator = Data_Maybe.Nothing.value;
                      }
                

                      if (obj.reactor) {
                          obj.reactor = obj.reactor ? psIntactReactor(obj.reactor) : null;
                          obj.reactor = new Data_Maybe.Just(obj.reactor);
                      } else {
                          obj.reactor = Data_Maybe.Nothing.value;
                      }
                


                      if (obj.latestUpdatedAt) {
                        
                          obj.latestUpdatedAt = new Data_Maybe.Just(obj.latestUpdatedAt);
                      } else {
                          obj.latestUpdatedAt = Data_Maybe.Nothing.value;
                      }
                  return obj;}                                                                             

  function jsAuthority(obj) {
                  if(E.AuthorityNone && obj instanceof E.AuthorityNone) {
                      return "none";
                  }
            
                  if(E.AuthorityReadable && obj instanceof E.AuthorityReadable) {
                      return "readable";
                  }
            
                  if(E.AuthorityWritable && obj instanceof E.AuthorityWritable) {
                      return "writable";
                  }
              }

  function psAuthority(str) {switch(str){
  case "none":
  return (E.AuthorityNone || { value: null }).value;
  case "readable":
  return (E.AuthorityReadable || { value: null }).value;
  case "writable":
  return (E.AuthorityWritable || { value: null }).value;
  }}

  function jsRelatedContent(obj){obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;


  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;
  obj.updaterUser = obj.updaterUser ? jsRelatedUser(obj.updaterUser) : null;



  obj.format = obj.format ? jsFocusedFormat(obj.format) : null;

  obj.authority = obj.authority ? jsAuthority(obj.authority) : null;return obj;}                                                                         

  function psRelatedContent(obj){obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;


  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;
  obj.updaterUser = obj.updaterUser ? psRelatedUser(obj.updaterUser) : null;



  obj.format = obj.format ? psFocusedFormat(obj.format) : null;

  obj.authority = obj.authority ? psAuthority(obj.authority) : null;return obj;}exports.fromJsonToRelatedContent = x => psRelatedContent(_.cloneDeep(x));

  function jsFocusedContent(obj){obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;


  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;
  obj.updaterUser = obj.updaterUser ? jsRelatedUser(obj.updaterUser) : null;



  obj.format = obj.format ? jsFocusedFormat(obj.format) : null;
  obj.authority = obj.authority ? jsAuthority(obj.authority) : null;
  return obj;}                                                                         

  function psFocusedContent(obj){obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;


  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;
  obj.updaterUser = obj.updaterUser ? psRelatedUser(obj.updaterUser) : null;



  obj.format = obj.format ? psFocusedFormat(obj.format) : null;
  obj.authority = obj.authority ? psAuthority(obj.authority) : null;
  return obj;}                                                                         

  function jsContentRelation(obj){
                              obj.contents = obj.contents ? obj.contents.map(x => {
                                  x = x ? jsRelatedContent(x) : null;
                                  return x;
                              }) : null;
                        
  obj.relation = obj.relation ? jsRelation(obj.relation) : null;return obj;}                                                                           

  function psContentRelation(obj){
                          obj.contents = obj.contents ? obj.contents.map(x => {
                              x = x ? psRelatedContent(x) : null;
                              return x;
                          }) : null;
                    
  obj.relation = obj.relation ? psRelation(obj.relation) : null;return obj;}                                                                           

  function jsSearchedContent(obj){obj.content = obj.content ? jsRelatedContent(obj.content) : null;

                              obj.highlights = obj.highlights ? obj.highlights.map(x => {
                                
                                  return x;
                              }) : null;
                        
  return obj;}                                                                           

  function psSearchedContent(obj){obj.content = obj.content ? psRelatedContent(obj.content) : null;

                          obj.highlights = obj.highlights ? obj.highlights.map(x => {
                            
                              return x;
                          }) : null;
                    
  return obj;}                                                                           

  function jsIntactContentPage(obj){obj.content = obj.content ? jsFocusedContent(obj.content) : null;

                          if (obj.draft instanceof Data_Maybe.Just) {
                              obj.draft = obj.draft.value0;
                              obj.draft = obj.draft ? jsRelatedContentDraft(obj.draft) : null;
                          } else {
                              obj.draft = null;
                          }
                    

                              obj.comments = obj.comments ? obj.comments.map(x => {
                                  x = x ? jsFocusedTreeComment(x) : null;
                                  return x;
                              }) : null;
                        

                              obj.relations = obj.relations ? obj.relations.map(x => {
                                  x = x ? jsContentRelation(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                                               

  function psIntactContentPage(obj){obj.content = obj.content ? psFocusedContent(obj.content) : null;

                      if (obj.draft) {
                          obj.draft = obj.draft ? psRelatedContentDraft(obj.draft) : null;
                          obj.draft = new Data_Maybe.Just(obj.draft);
                      } else {
                          obj.draft = Data_Maybe.Nothing.value;
                      }
                

                          obj.comments = obj.comments ? obj.comments.map(x => {
                              x = x ? psFocusedTreeComment(x) : null;
                              return x;
                          }) : null;
                    

                          obj.relations = obj.relations ? obj.relations.map(x => {
                              x = x ? psContentRelation(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                                               

  function jsRelatedContentCommit(obj){obj.commitId = obj.commitId ? jsContentCommitId(obj.commitId) : null;

  obj.committerUser = obj.committerUser ? jsRelatedUser(obj.committerUser) : null;
  obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;return obj;}                                                                                     

  function psRelatedContentCommit(obj){obj.commitId = obj.commitId ? psContentCommitId(obj.commitId) : null;

  obj.committerUser = obj.committerUser ? psRelatedUser(obj.committerUser) : null;
  obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;return obj;}                                                                                     

  function jsFocusedContentCommit(obj){obj.commitId = obj.commitId ? jsContentCommitId(obj.commitId) : null;

  obj.committerUser = obj.committerUser ? jsRelatedUser(obj.committerUser) : null;
  obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;return obj;}                                                                                     

  function psFocusedContentCommit(obj){obj.commitId = obj.commitId ? psContentCommitId(obj.commitId) : null;

  obj.committerUser = obj.committerUser ? psRelatedUser(obj.committerUser) : null;
  obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;return obj;}                                                                                     

  function jsRelatedContentDraft(obj){obj.draftId = obj.draftId ? jsContentDraftId(obj.draftId) : null;




                          if (obj.contentId instanceof Data_Maybe.Just) {
                              obj.contentId = obj.contentId.value0;
                              obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;
                          } else {
                              obj.contentId = null;
                          }
                    
  obj.format = obj.format ? jsFocusedFormat(obj.format) : null;return obj;}                                                                                   

  function psRelatedContentDraft(obj){obj.draftId = obj.draftId ? psContentDraftId(obj.draftId) : null;




                      if (obj.contentId) {
                          obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;
                          obj.contentId = new Data_Maybe.Just(obj.contentId);
                      } else {
                          obj.contentId = Data_Maybe.Nothing.value;
                      }
                
  obj.format = obj.format ? psFocusedFormat(obj.format) : null;return obj;}                                                                                   

  function jsFocusedContentDraft(obj){obj.draftId = obj.draftId ? jsContentDraftId(obj.draftId) : null;




                          if (obj.contentId instanceof Data_Maybe.Just) {
                              obj.contentId = obj.contentId.value0;
                              obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;
                          } else {
                              obj.contentId = null;
                          }
                    
  obj.format = obj.format ? jsFocusedFormat(obj.format) : null;return obj;}                                                                                   

  function psFocusedContentDraft(obj){obj.draftId = obj.draftId ? psContentDraftId(obj.draftId) : null;




                      if (obj.contentId) {
                          obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;
                          obj.contentId = new Data_Maybe.Just(obj.contentId);
                      } else {
                          obj.contentId = Data_Maybe.Nothing.value;
                      }
                
  obj.format = obj.format ? psFocusedFormat(obj.format) : null;return obj;}                                                                                   

  function jsRelatedFormat(obj){obj.formatId = obj.formatId ? jsFormatId(obj.formatId) : null;
  obj.displayId = obj.displayId ? jsFormatDisplayId(obj.displayId) : null;



                          if (obj.icon instanceof Data_Maybe.Just) {
                              obj.icon = obj.icon.value0;
                            
                          } else {
                              obj.icon = null;
                          }
                    
  obj.space = obj.space ? jsRelatedSpace(obj.space) : null;
  obj.usage = obj.usage ? jsFormatUsage(obj.usage) : null;

                          if (obj.semanticId instanceof Data_Maybe.Just) {
                              obj.semanticId = obj.semanticId.value0;
                            
                          } else {
                              obj.semanticId = null;
                          }
                    
  obj.currentStructureId = obj.currentStructureId ? jsStructureId(obj.currentStructureId) : null;return obj;}                                                                       

  function psRelatedFormat(obj){obj.formatId = obj.formatId ? psFormatId(obj.formatId) : null;
  obj.displayId = obj.displayId ? psFormatDisplayId(obj.displayId) : null;



                      if (obj.icon) {
                        
                          obj.icon = new Data_Maybe.Just(obj.icon);
                      } else {
                          obj.icon = Data_Maybe.Nothing.value;
                      }
                
  obj.space = obj.space ? psRelatedSpace(obj.space) : null;
  obj.usage = obj.usage ? psFormatUsage(obj.usage) : null;

                      if (obj.semanticId) {
                        
                          obj.semanticId = new Data_Maybe.Just(obj.semanticId);
                      } else {
                          obj.semanticId = Data_Maybe.Nothing.value;
                      }
                
  obj.currentStructureId = obj.currentStructureId ? psStructureId(obj.currentStructureId) : null;return obj;}                                                                       

  function jsRelation(obj){obj.property = obj.property ? jsPropertyInfo(obj.property) : null;

  obj.formatId = obj.formatId ? jsFormatId(obj.formatId) : null;return obj;}                                                             

  function psRelation(obj){obj.property = obj.property ? psPropertyInfo(obj.property) : null;

  obj.formatId = obj.formatId ? psFormatId(obj.formatId) : null;return obj;}                                                             

  function jsFocusedFormat(obj){obj.formatId = obj.formatId ? jsFormatId(obj.formatId) : null;
  obj.displayId = obj.displayId ? jsFormatDisplayId(obj.displayId) : null;



                          if (obj.icon instanceof Data_Maybe.Just) {
                              obj.icon = obj.icon.value0;
                            
                          } else {
                              obj.icon = null;
                          }
                    
  obj.space = obj.space ? jsRelatedSpace(obj.space) : null;
  obj.usage = obj.usage ? jsFormatUsage(obj.usage) : null;

  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? jsRelatedUser(obj.updaterUser) : null;
  obj.currentStructure = obj.currentStructure ? jsFocusedStructure(obj.currentStructure) : null;

                          if (obj.semanticId instanceof Data_Maybe.Just) {
                              obj.semanticId = obj.semanticId.value0;
                            
                          } else {
                              obj.semanticId = null;
                          }
                      return obj;}                                                                       

  function psFocusedFormat(obj){obj.formatId = obj.formatId ? psFormatId(obj.formatId) : null;
  obj.displayId = obj.displayId ? psFormatDisplayId(obj.displayId) : null;



                      if (obj.icon) {
                        
                          obj.icon = new Data_Maybe.Just(obj.icon);
                      } else {
                          obj.icon = Data_Maybe.Nothing.value;
                      }
                
  obj.space = obj.space ? psRelatedSpace(obj.space) : null;
  obj.usage = obj.usage ? psFormatUsage(obj.usage) : null;

  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? psRelatedUser(obj.updaterUser) : null;
  obj.currentStructure = obj.currentStructure ? psFocusedStructure(obj.currentStructure) : null;

                      if (obj.semanticId) {
                        
                          obj.semanticId = new Data_Maybe.Just(obj.semanticId);
                      } else {
                          obj.semanticId = Data_Maybe.Nothing.value;
                      }
                  return obj;}                                                                       

  function jsIntactMetaProperty(obj){obj.id = obj.id ? jsMetaPropertyId(obj.id) : null;
  obj.type = obj.type ? jsMetaPropertyType(obj.type) : null;return obj;}                                                                                 

  function psIntactMetaProperty(obj){obj.id = obj.id ? psMetaPropertyId(obj.id) : null;
  obj.type = obj.type ? psMetaPropertyType(obj.type) : null;return obj;}                                                                                 

  function jsPropertyInfo(obj){

                          if (obj.fieldName instanceof Data_Maybe.Just) {
                              obj.fieldName = obj.fieldName.value0;
                            
                          } else {
                              obj.fieldName = null;
                          }
                    
  obj.id = obj.id ? jsPropertyId(obj.id) : null;


                          if (obj.semantic instanceof Data_Maybe.Just) {
                              obj.semantic = obj.semantic.value0;
                            
                          } else {
                              obj.semantic = null;
                          }
                    

                          if (obj.icon instanceof Data_Maybe.Just) {
                              obj.icon = obj.icon.value0;
                            
                          } else {
                              obj.icon = null;
                          }
                    
  obj.type = obj.type ? jsType(obj.type) : null;

                              obj.metaProperties = obj.metaProperties ? obj.metaProperties.map(x => {
                                  x = x ? jsIntactMetaProperty(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                                     

  function psPropertyInfo(obj){

                      if (obj.fieldName) {
                        
                          obj.fieldName = new Data_Maybe.Just(obj.fieldName);
                      } else {
                          obj.fieldName = Data_Maybe.Nothing.value;
                      }
                
  obj.id = obj.id ? psPropertyId(obj.id) : null;


                      if (obj.semantic) {
                        
                          obj.semantic = new Data_Maybe.Just(obj.semantic);
                      } else {
                          obj.semantic = Data_Maybe.Nothing.value;
                      }
                

                      if (obj.icon) {
                        
                          obj.icon = new Data_Maybe.Just(obj.icon);
                      } else {
                          obj.icon = Data_Maybe.Nothing.value;
                      }
                
  obj.type = obj.type ? psType(obj.type) : null;

                          obj.metaProperties = obj.metaProperties ? obj.metaProperties.map(x => {
                              x = x ? psIntactMetaProperty(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                                     

  function jsEnumerator(obj){


                          if (obj.fieldName instanceof Data_Maybe.Just) {
                              obj.fieldName = obj.fieldName.value0;
                            
                          } else {
                              obj.fieldName = null;
                          }
                      return obj;}                                                                 

  function psEnumerator(obj){


                      if (obj.fieldName) {
                        
                          obj.fieldName = new Data_Maybe.Just(obj.fieldName);
                      } else {
                          obj.fieldName = Data_Maybe.Nothing.value;
                      }
                  return obj;}                                                                 

  function jsType(obj) {
                  if(E.IntType && obj instanceof E.IntType) {
                    
                      return {
                          name: "integer",
                        
                      };
                  }
            
                  if(E.BoolType && obj instanceof E.BoolType) {
                    
                      return {
                          name: "boolean",
                        
                      };
                  }
            
                  if(E.StringType && obj instanceof E.StringType) {
                    
                      return {
                          name: "string",
                        
                      };
                  }
            
                  if(E.ContentType && obj instanceof E.ContentType) {
                      obj.value0 = obj.value0 ? jsFocusedFormat(obj.value0) : null;
                      return {
                          name: "content",
                          format: obj.value0
                      };
                  }
            
                  if(E.UrlType && obj instanceof E.UrlType) {
                    
                      return {
                          name: "url",
                        
                      };
                  }
            
                  if(E.ObjectType && obj instanceof E.ObjectType) {
                    
                              obj.value0 = obj.value0 ? obj.value0.map(x => {
                                  x = x ? jsPropertyInfo(x) : null;
                                  return x;
                              }) : null;
                        
                      return {
                          name: "object",
                          properties: obj.value0
                      };
                  }
            
                  if(E.TextType && obj instanceof E.TextType) {
                    
                      return {
                          name: "text",
                        
                      };
                  }
            
                  if(E.ArrayType && obj instanceof E.ArrayType) {
                      obj.value0 = obj.value0 ? jsType(obj.value0) : null;
                      return {
                          name: "array",
                          subType: obj.value0
                      };
                  }
            
                  if(E.EnumType && obj instanceof E.EnumType) {
                    
                              obj.value0 = obj.value0 ? obj.value0.map(x => {
                                  x = x ? jsEnumerator(x) : null;
                                  return x;
                              }) : null;
                        
                      return {
                          name: "enumerator",
                          enumerators: obj.value0
                      };
                  }
            
                  if(E.DocumentType && obj instanceof E.DocumentType) {
                    
                      return {
                          name: "document",
                        
                      };
                  }
            
                  if(E.ImageType && obj instanceof E.ImageType) {
                    
                      return {
                          name: "image",
                        
                      };
                  }
            
                  if(E.EntityType && obj instanceof E.EntityType) {
                      obj.value0 = obj.value0 ? jsFocusedFormat(obj.value0) : null;
                      return {
                          name: "entity",
                          format: obj.value0
                      };
                  }
              }

  function psType(obj) {switch(obj.name){case "integer":
  return new E.IntType();
  case "boolean":
  return new E.BoolType();
  case "string":
  return new E.StringType();
  case "content":
  obj.format = obj.format ? psFocusedFormat(obj.format) : null;return new E.ContentType(obj.format);
  case "url":
  return new E.UrlType();
  case "object":

                          obj.properties = obj.properties ? obj.properties.map(x => {
                              x = x ? psPropertyInfo(x) : null;
                              return x;
                          }) : null;
                      return new E.ObjectType(obj.properties);
  case "text":
  return new E.TextType();
  case "array":
  obj.subType = obj.subType ? psType(obj.subType) : null;return new E.ArrayType(obj.subType);
  case "enumerator":

                          obj.enumerators = obj.enumerators ? obj.enumerators.map(x => {
                              x = x ? psEnumerator(x) : null;
                              return x;
                          }) : null;
                      return new E.EnumType(obj.enumerators);
  case "document":
  return new E.DocumentType();
  case "image":
  return new E.ImageType();
  case "entity":
  obj.format = obj.format ? psFocusedFormat(obj.format) : null;return new E.EntityType(obj.format);
  }}

  function jsRelatedStructure(obj){obj.formatId = obj.formatId ? jsFormatId(obj.formatId) : null;
  obj.structureId = obj.structureId ? jsStructureId(obj.structureId) : null;


                          if (obj.title instanceof Data_Maybe.Just) {
                              obj.title = obj.title.value0;
                            
                          } else {
                              obj.title = null;
                          }
                    
  return obj;}                                                                             

  function psRelatedStructure(obj){obj.formatId = obj.formatId ? psFormatId(obj.formatId) : null;
  obj.structureId = obj.structureId ? psStructureId(obj.structureId) : null;


                      if (obj.title) {
                        
                          obj.title = new Data_Maybe.Just(obj.title);
                      } else {
                          obj.title = Data_Maybe.Nothing.value;
                      }
                
  return obj;}                                                                             

  function jsFocusedStructure(obj){obj.structureId = obj.structureId ? jsStructureId(obj.structureId) : null;


                          if (obj.title instanceof Data_Maybe.Just) {
                              obj.title = obj.title.value0;
                            
                          } else {
                              obj.title = null;
                          }
                    

                              obj.properties = obj.properties ? obj.properties.map(x => {
                                  x = x ? jsPropertyInfo(x) : null;
                                  return x;
                              }) : null;
                        
  return obj;}                                                                             

  function psFocusedStructure(obj){obj.structureId = obj.structureId ? psStructureId(obj.structureId) : null;


                      if (obj.title) {
                        
                          obj.title = new Data_Maybe.Just(obj.title);
                      } else {
                          obj.title = Data_Maybe.Nothing.value;
                      }
                

                          obj.properties = obj.properties ? obj.properties.map(x => {
                              x = x ? psPropertyInfo(x) : null;
                              return x;
                          }) : null;
                    
  return obj;}                                                                             

  const jsDocumentBlockId = x => x;


  const psDocumentBlockId = x => x;


  function jsBlockType(obj) {
                  if(E.Paragraph && obj instanceof E.Paragraph) {
                      return "paragraph";
                  }
            
                  if(E.Header && obj instanceof E.Header) {
                      return "header";
                  }
              }

  function psBlockType(str) {switch(str){
  case "paragraph":
  return (E.Paragraph || { value: null }).value;
  case "header":
  return (E.Header || { value: null }).value;
  }}

  function jsDocumentBlock(obj){obj.id = obj.id ? jsDocumentBlockId(obj.id) : null;
  obj.data = obj.data ? jsBlockData(obj.data) : null;return obj;}                                                                       

  function psDocumentBlock(obj){obj.id = obj.id ? psDocumentBlockId(obj.id) : null;
  obj.data = obj.data ? psBlockData(obj.data) : null;return obj;}                                                                       

  function jsBlockData(obj) {
                  if(E.ParagraphBlockData && obj instanceof E.ParagraphBlockData) {
                    
                      return {
                          type: "paragraph",
                          text: obj.value0
                      };
                  }
            
                  if(E.HeaderBlockData && obj instanceof E.HeaderBlockData) {
                      ;
                      return {
                          type: "header",
                          level: obj.value0,text: obj.value1
                      };
                  }
              }

  function psBlockData(obj) {switch(obj.type){case "paragraph":
  return new E.ParagraphBlockData(obj.text);
  case "header":
  ;return new E.HeaderBlockData(obj.level,obj.text);
  }}

  function jsDocument(obj){
                              obj.blocks = obj.blocks ? obj.blocks.map(x => {
                                  x = x ? jsDocumentBlock(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                             

  function psDocument(obj){
                          obj.blocks = obj.blocks ? obj.blocks.map(x => {
                              x = x ? psDocumentBlock(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                             

  function jsRelatedMaterial(obj){obj.materialId = obj.materialId ? jsMaterialId(obj.materialId) : null;

                          if (obj.contentId instanceof Data_Maybe.Just) {
                              obj.contentId = obj.contentId.value0;
                              obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;
                          } else {
                              obj.contentId = null;
                          }
                    

  obj.materialType = obj.materialType ? jsMaterialType(obj.materialType) : null;

  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? jsRelatedUser(obj.updaterUser) : null;return obj;}                                                                           

  function psRelatedMaterial(obj){obj.materialId = obj.materialId ? psMaterialId(obj.materialId) : null;

                      if (obj.contentId) {
                          obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;
                          obj.contentId = new Data_Maybe.Just(obj.contentId);
                      } else {
                          obj.contentId = Data_Maybe.Nothing.value;
                      }
                

  obj.materialType = obj.materialType ? psMaterialType(obj.materialType) : null;

  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? psRelatedUser(obj.updaterUser) : null;return obj;}exports.fromJsonToRelatedMaterial = x => psRelatedMaterial(_.cloneDeep(x));

  function jsMaterialData(obj) {
                  if(E.PlaintextMaterialData && obj instanceof E.PlaintextMaterialData) {
                    
                      return {
                          type: "plaintext",
                          text: obj.value0
                      };
                  }
            
                  if(E.DocumentMaterialData && obj instanceof E.DocumentMaterialData) {
                      obj.value0 = obj.value0 ? jsDocument(obj.value0) : null;
                      return {
                          type: "document",
                          document: obj.value0
                      };
                  }
              }

  function psMaterialData(obj) {switch(obj.type){case "plaintext":
  return new E.PlaintextMaterialData(obj.text);
  case "document":
  obj.document = obj.document ? psDocument(obj.document) : null;return new E.DocumentMaterialData(obj.document);
  }}

  function jsFocusedMaterial(obj){obj.materialId = obj.materialId ? jsMaterialId(obj.materialId) : null;

                          if (obj.contentId instanceof Data_Maybe.Just) {
                              obj.contentId = obj.contentId.value0;
                              obj.contentId = obj.contentId ? jsContentId(obj.contentId) : null;
                          } else {
                              obj.contentId = null;
                          }
                    

  obj.materialType = obj.materialType ? jsMaterialType(obj.materialType) : null;

  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? jsRelatedUser(obj.updaterUser) : null;
  obj.data = obj.data ? jsMaterialData(obj.data) : null;

                          if (obj.draft instanceof Data_Maybe.Just) {
                              obj.draft = obj.draft.value0;
                              obj.draft = obj.draft ? jsRelatedMaterialDraft(obj.draft) : null;
                          } else {
                              obj.draft = null;
                          }
                      return obj;}                                                                           

  function psFocusedMaterial(obj){obj.materialId = obj.materialId ? psMaterialId(obj.materialId) : null;

                      if (obj.contentId) {
                          obj.contentId = obj.contentId ? psContentId(obj.contentId) : null;
                          obj.contentId = new Data_Maybe.Just(obj.contentId);
                      } else {
                          obj.contentId = Data_Maybe.Nothing.value;
                      }
                

  obj.materialType = obj.materialType ? psMaterialType(obj.materialType) : null;

  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;

  obj.updaterUser = obj.updaterUser ? psRelatedUser(obj.updaterUser) : null;
  obj.data = obj.data ? psMaterialData(obj.data) : null;

                      if (obj.draft) {
                          obj.draft = obj.draft ? psRelatedMaterialDraft(obj.draft) : null;
                          obj.draft = new Data_Maybe.Just(obj.draft);
                      } else {
                          obj.draft = Data_Maybe.Nothing.value;
                      }
                  return obj;}exports.fromJsonToFocusedMaterial = x => psFocusedMaterial(_.cloneDeep(x));

  function jsRelatedMaterialCommit(obj){obj.commitId = obj.commitId ? jsMaterialCommitId(obj.commitId) : null;



                          if (obj.basedCommitId instanceof Data_Maybe.Just) {
                              obj.basedCommitId = obj.basedCommitId.value0;
                              obj.basedCommitId = obj.basedCommitId ? jsMaterialCommitId(obj.basedCommitId) : null;
                          } else {
                              obj.basedCommitId = null;
                          }
                    
  obj.committerUser = obj.committerUser ? jsRelatedUser(obj.committerUser) : null;return obj;}                                                                                       

  function psRelatedMaterialCommit(obj){obj.commitId = obj.commitId ? psMaterialCommitId(obj.commitId) : null;



                      if (obj.basedCommitId) {
                          obj.basedCommitId = obj.basedCommitId ? psMaterialCommitId(obj.basedCommitId) : null;
                          obj.basedCommitId = new Data_Maybe.Just(obj.basedCommitId);
                      } else {
                          obj.basedCommitId = Data_Maybe.Nothing.value;
                      }
                
  obj.committerUser = obj.committerUser ? psRelatedUser(obj.committerUser) : null;return obj;}                                                                                       

  function jsFocusedMaterialCommit(obj){obj.commitId = obj.commitId ? jsMaterialCommitId(obj.commitId) : null;


  return obj;}                                                                                       

  function psFocusedMaterialCommit(obj){obj.commitId = obj.commitId ? psMaterialCommitId(obj.commitId) : null;


  return obj;}                                                                                       

  function jsRelatedMaterialDraft(obj){obj.draftId = obj.draftId ? jsMaterialDraftId(obj.draftId) : null;



  return obj;}                                                                                     

  function psRelatedMaterialDraft(obj){obj.draftId = obj.draftId ? psMaterialDraftId(obj.draftId) : null;



  return obj;}                                                                                     

  function jsFocusedMaterialDraft(obj){obj.draftId = obj.draftId ? jsMaterialDraftId(obj.draftId) : null;




                          if (obj.material instanceof Data_Maybe.Just) {
                              obj.material = obj.material.value0;
                              obj.material = obj.material ? jsRelatedMaterial(obj.material) : null;
                          } else {
                              obj.material = null;
                          }
                    

                          if (obj.basedCommitId instanceof Data_Maybe.Just) {
                              obj.basedCommitId = obj.basedCommitId.value0;
                              obj.basedCommitId = obj.basedCommitId ? jsMaterialCommitId(obj.basedCommitId) : null;
                          } else {
                              obj.basedCommitId = null;
                          }
                    
  obj.data = obj.data ? jsMaterialData(obj.data) : null;
  return obj;}                                                                                     

  function psFocusedMaterialDraft(obj){obj.draftId = obj.draftId ? psMaterialDraftId(obj.draftId) : null;




                      if (obj.material) {
                          obj.material = obj.material ? psRelatedMaterial(obj.material) : null;
                          obj.material = new Data_Maybe.Just(obj.material);
                      } else {
                          obj.material = Data_Maybe.Nothing.value;
                      }
                

                      if (obj.basedCommitId) {
                          obj.basedCommitId = obj.basedCommitId ? psMaterialCommitId(obj.basedCommitId) : null;
                          obj.basedCommitId = new Data_Maybe.Just(obj.basedCommitId);
                      } else {
                          obj.basedCommitId = Data_Maybe.Nothing.value;
                      }
                
  obj.data = obj.data ? psMaterialData(obj.data) : null;
  return obj;}exports.fromJsonToFocusedMaterialDraft = x => psFocusedMaterialDraft(_.cloneDeep(x));

  function jsMaterialDraftUpdation(obj){obj.draftId = obj.draftId ? jsMaterialDraftId(obj.draftId) : null;
  obj.data = obj.data ? jsMaterialData(obj.data) : null;return obj;}                                                                                       

  function psMaterialDraftUpdation(obj){obj.draftId = obj.draftId ? psMaterialDraftId(obj.draftId) : null;
  obj.data = obj.data ? psMaterialData(obj.data) : null;return obj;}                                                                                       

  function jsIntactMaterialEditing(obj){obj.materialEditingId = obj.materialEditingId ? jsMaterialEditingId(obj.materialEditingId) : null;

  return obj;}                                                                                       

  function psIntactMaterialEditing(obj){obj.materialEditingId = obj.materialEditingId ? psMaterialEditingId(obj.materialEditingId) : null;

  return obj;}                                                                                       

  function jsRelatedMaterialSnapshot(obj){

  return obj;}                                                                                           

  function psRelatedMaterialSnapshot(obj){

  return obj;}                                                                                           

  function jsFocusedMaterialSnapshot(obj){obj.data = obj.data ? jsMaterialData(obj.data) : null;


  return obj;}                                                                                           

  function psFocusedMaterialSnapshot(obj){obj.data = obj.data ? psMaterialData(obj.data) : null;


  return obj;}                                                                                           

  function jsActivityAction(obj) {
                  if(E.ContentCreatedActivityAction && obj instanceof E.ContentCreatedActivityAction) {
                      obj.value0 = obj.value0 ? jsRelatedContent(obj.value0) : null;
                      return {
                          type: "content_created",
                          content: obj.value0
                      };
                  }
            
                  if(E.ContentUpdatedActivityAction && obj instanceof E.ContentUpdatedActivityAction) {
                      obj.value0 = obj.value0 ? jsRelatedContent(obj.value0) : null;
                      return {
                          type: "content_updated",
                          content: obj.value0
                      };
                  }
            
                  if(E.ContentCommentedActivityAction && obj instanceof E.ContentCommentedActivityAction) {
                      obj.value0 = obj.value0 ? jsRelatedContent(obj.value0) : null;;obj.value1 = obj.value1 ? jsRelatedComment(obj.value1) : null;
                      return {
                          type: "content_commented",
                          content: obj.value0,comment: obj.value1
                      };
                  }
              }

  function psActivityAction(obj) {switch(obj.type){case "content_created":
  obj.content = obj.content ? psRelatedContent(obj.content) : null;return new E.ContentCreatedActivityAction(obj.content);
  case "content_updated":
  obj.content = obj.content ? psRelatedContent(obj.content) : null;return new E.ContentUpdatedActivityAction(obj.content);
  case "content_commented":
  obj.content = obj.content ? psRelatedContent(obj.content) : null;;obj.comment = obj.comment ? psRelatedComment(obj.comment) : null;return new E.ContentCommentedActivityAction(obj.content,obj.comment);
  }}

  function jsIntactActivityBySpace(obj){obj.activityId = obj.activityId ? jsActivityId(obj.activityId) : null;
  obj.action = obj.action ? jsActivityAction(obj.action) : null;
  obj.actorUser = obj.actorUser ? jsRelatedUser(obj.actorUser) : null;
  return obj;}                                                                                       

  function psIntactActivityBySpace(obj){obj.activityId = obj.activityId ? psActivityId(obj.activityId) : null;
  obj.action = obj.action ? psActivityAction(obj.action) : null;
  obj.actorUser = obj.actorUser ? psRelatedUser(obj.actorUser) : null;
  return obj;}                                                                                       

  function jsIntactActivityByUser(obj){obj.activityId = obj.activityId ? jsActivityId(obj.activityId) : null;
  obj.action = obj.action ? jsActivityAction(obj.action) : null;
  obj.space = obj.space ? jsRelatedSpace(obj.space) : null;
  return obj;}                                                                                     

  function psIntactActivityByUser(obj){obj.activityId = obj.activityId ? psActivityId(obj.activityId) : null;
  obj.action = obj.action ? psActivityAction(obj.action) : null;
  obj.space = obj.space ? psRelatedSpace(obj.space) : null;
  return obj;}                                                                                     

  function jsRelatedComment(obj){obj.commentId = obj.commentId ? jsCommentId(obj.commentId) : null;
  obj.user = obj.user ? jsRelatedUser(obj.user) : null;


  return obj;}                                                                         

  function psRelatedComment(obj){obj.commentId = obj.commentId ? psCommentId(obj.commentId) : null;
  obj.user = obj.user ? psRelatedUser(obj.user) : null;


  return obj;}                                                                         

  function jsFocusedComment(obj){obj.commentId = obj.commentId ? jsCommentId(obj.commentId) : null;
  obj.user = obj.user ? jsRelatedUser(obj.user) : null;



  return obj;}                                                                         

  function psFocusedComment(obj){obj.commentId = obj.commentId ? psCommentId(obj.commentId) : null;
  obj.user = obj.user ? psRelatedUser(obj.user) : null;



  return obj;}                                                                         

  function jsFocusedTreeComment(obj){obj.commentId = obj.commentId ? jsCommentId(obj.commentId) : null;
  obj.user = obj.user ? jsRelatedUser(obj.user) : null;





                              obj.replies = obj.replies ? obj.replies.map(x => {
                                  x = x ? jsFocusedComment(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                                                 

  function psFocusedTreeComment(obj){obj.commentId = obj.commentId ? psCommentId(obj.commentId) : null;
  obj.user = obj.user ? psRelatedUser(obj.user) : null;





                          obj.replies = obj.replies ? obj.replies.map(x => {
                              x = x ? psFocusedComment(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                                                 

  function jsNotificationAction(obj) {
                  if(E.ContentCommentedNotificationAction && obj instanceof E.ContentCommentedNotificationAction) {
                      obj.value0 = obj.value0 ? jsRelatedContent(obj.value0) : null;;obj.value1 = obj.value1 ? jsRelatedComment(obj.value1) : null;
                      return {
                          type: "content_commented",
                          content: obj.value0,comment: obj.value1
                      };
                  }
            
                  if(E.CommentRepliedNotificationAction && obj instanceof E.CommentRepliedNotificationAction) {
                      obj.value0 = obj.value0 ? jsRelatedContent(obj.value0) : null;;obj.value1 = obj.value1 ? jsRelatedComment(obj.value1) : null;
                      return {
                          type: "comment_replied",
                          content: obj.value0,comment: obj.value1
                      };
                  }
              }

  function psNotificationAction(obj) {switch(obj.type){case "content_commented":
  obj.content = obj.content ? psRelatedContent(obj.content) : null;;obj.comment = obj.comment ? psRelatedComment(obj.comment) : null;return new E.ContentCommentedNotificationAction(obj.content,obj.comment);
  case "comment_replied":
  obj.content = obj.content ? psRelatedContent(obj.content) : null;;obj.comment = obj.comment ? psRelatedComment(obj.comment) : null;return new E.CommentRepliedNotificationAction(obj.content,obj.comment);
  }}

  function jsIntactNotification(obj){obj.notificationId = obj.notificationId ? jsNotificationId(obj.notificationId) : null;
  obj.action = obj.action ? jsNotificationAction(obj.action) : null;
  obj.notifiedFromUser = obj.notifiedFromUser ? jsRelatedUser(obj.notifiedFromUser) : null;

  return obj;}                                                                                 

  function psIntactNotification(obj){obj.notificationId = obj.notificationId ? psNotificationId(obj.notificationId) : null;
  obj.action = obj.action ? psNotificationAction(obj.action) : null;
  obj.notifiedFromUser = obj.notifiedFromUser ? psRelatedUser(obj.notifiedFromUser) : null;

  return obj;}                                                                                 

  function jsIntactReactor(obj){obj.reactorId = obj.reactorId ? jsReactorId(obj.reactorId) : null;
  obj.container = obj.container ? jsRelatedContainer(obj.container) : null;
  obj.state = obj.state ? jsReactorState(obj.state) : null;

                          if (obj.definitionId instanceof Data_Maybe.Just) {
                              obj.definitionId = obj.definitionId.value0;
                              obj.definitionId = obj.definitionId ? jsContentId(obj.definitionId) : null;
                          } else {
                              obj.definitionId = null;
                          }
                    

  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;return obj;}                                                                       

  function psIntactReactor(obj){obj.reactorId = obj.reactorId ? psReactorId(obj.reactorId) : null;
  obj.container = obj.container ? psRelatedContainer(obj.container) : null;
  obj.state = obj.state ? psReactorState(obj.state) : null;

                      if (obj.definitionId) {
                          obj.definitionId = obj.definitionId ? psContentId(obj.definitionId) : null;
                          obj.definitionId = new Data_Maybe.Just(obj.definitionId);
                      } else {
                          obj.definitionId = Data_Maybe.Nothing.value;
                      }
                

  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;return obj;}                                                                       

  function jsAdditionalSpaceInfo(obj){

  return obj;}                                                                                   

  function psAdditionalSpaceInfo(obj){

  return obj;}                                                                                   

  function jsRelatedSpace(obj){obj.spaceId = obj.spaceId ? jsSpaceId(obj.spaceId) : null;
  obj.displayId = obj.displayId ? jsSpaceDisplayId(obj.displayId) : null;




                          if (obj.headerImage instanceof Data_Maybe.Just) {
                              obj.headerImage = obj.headerImage.value0;
                            
                          } else {
                              obj.headerImage = null;
                          }
                    

  obj.membershipMethod = obj.membershipMethod ? jsMembershipMethod(obj.membershipMethod) : null;
  obj.defaultAuthority = obj.defaultAuthority ? jsSpaceAuthority(obj.defaultAuthority) : null;return obj;}                                                                     

  function psRelatedSpace(obj){obj.spaceId = obj.spaceId ? psSpaceId(obj.spaceId) : null;
  obj.displayId = obj.displayId ? psSpaceDisplayId(obj.displayId) : null;




                      if (obj.headerImage) {
                        
                          obj.headerImage = new Data_Maybe.Just(obj.headerImage);
                      } else {
                          obj.headerImage = Data_Maybe.Nothing.value;
                      }
                

  obj.membershipMethod = obj.membershipMethod ? psMembershipMethod(obj.membershipMethod) : null;
  obj.defaultAuthority = obj.defaultAuthority ? psSpaceAuthority(obj.defaultAuthority) : null;return obj;}                                                                     

  function jsFocusedSpace(obj){obj.spaceId = obj.spaceId ? jsSpaceId(obj.spaceId) : null;
  obj.displayId = obj.displayId ? jsSpaceDisplayId(obj.displayId) : null;


  obj.creatorUser = obj.creatorUser ? jsRelatedUser(obj.creatorUser) : null;


                          if (obj.headerImage instanceof Data_Maybe.Just) {
                              obj.headerImage = obj.headerImage.value0;
                            
                          } else {
                              obj.headerImage = null;
                          }
                    

  obj.membershipMethod = obj.membershipMethod ? jsMembershipMethod(obj.membershipMethod) : null;
  obj.defaultAuthority = obj.defaultAuthority ? jsSpaceAuthority(obj.defaultAuthority) : null;





                              obj.containers = obj.containers ? obj.containers.map(x => {
                                  x = x ? jsRelatedContainer(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                                     

  function psFocusedSpace(obj){obj.spaceId = obj.spaceId ? psSpaceId(obj.spaceId) : null;
  obj.displayId = obj.displayId ? psSpaceDisplayId(obj.displayId) : null;


  obj.creatorUser = obj.creatorUser ? psRelatedUser(obj.creatorUser) : null;


                      if (obj.headerImage) {
                        
                          obj.headerImage = new Data_Maybe.Just(obj.headerImage);
                      } else {
                          obj.headerImage = Data_Maybe.Nothing.value;
                      }
                

  obj.membershipMethod = obj.membershipMethod ? psMembershipMethod(obj.membershipMethod) : null;
  obj.defaultAuthority = obj.defaultAuthority ? psSpaceAuthority(obj.defaultAuthority) : null;





                          obj.containers = obj.containers ? obj.containers.map(x => {
                              x = x ? psRelatedContainer(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                                     

  function jsIntactSpageHomePage(obj){
                              obj.activities = obj.activities ? obj.activities.map(x => {
                                  x = x ? jsIntactActivityBySpace(x) : null;
                                  return x;
                              }) : null;
                        

                              obj.topics = obj.topics ? obj.topics.map(x => {
                                  x = x ? jsFocusedContent(x) : null;
                                  return x;
                              }) : null;
                        

                              obj.members = obj.members ? obj.members.map(x => {
                                  x = x ? jsIntactSpaceMember(x) : null;
                                  return x;
                              }) : null;
                          return obj;}                                                                                   

  function psIntactSpageHomePage(obj){
                          obj.activities = obj.activities ? obj.activities.map(x => {
                              x = x ? psIntactActivityBySpace(x) : null;
                              return x;
                          }) : null;
                    

                          obj.topics = obj.topics ? obj.topics.map(x => {
                              x = x ? psFocusedContent(x) : null;
                              return x;
                          }) : null;
                    

                          obj.members = obj.members ? obj.members.map(x => {
                              x = x ? psIntactSpaceMember(x) : null;
                              return x;
                          }) : null;
                      return obj;}                                                                                   

  function jsIntactSpaceMember(obj){obj.user = obj.user ? jsRelatedUser(obj.user) : null;

  obj.type = obj.type ? jsMemberType(obj.type) : null;return obj;}                                                                               

  function psIntactSpaceMember(obj){obj.user = obj.user ? psRelatedUser(obj.user) : null;

  obj.type = obj.type ? psMemberType(obj.type) : null;return obj;}                                                                               

  function jsIntactSpaceMembershipApplication(obj){obj.user = obj.user ? jsRelatedUser(obj.user) : null;
  return obj;}                                                                                                             

  function psIntactSpaceMembershipApplication(obj){obj.user = obj.user ? psRelatedUser(obj.user) : null;
  return obj;}                                                                                                             

  function jsIntactAccount(obj){obj.userId = obj.userId ? jsUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? jsUserDisplayId(obj.displayId) : null;


                          if (obj.iconImage instanceof Data_Maybe.Just) {
                              obj.iconImage = obj.iconImage.value0;
                            
                          } else {
                              obj.iconImage = null;
                          }
                    

  return obj;}                                                                       

  function psIntactAccount(obj){obj.userId = obj.userId ? psUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? psUserDisplayId(obj.displayId) : null;


                      if (obj.iconImage) {
                        
                          obj.iconImage = new Data_Maybe.Just(obj.iconImage);
                      } else {
                          obj.iconImage = Data_Maybe.Nothing.value;
                      }
                

  return obj;}                                                                       

  function jsRelatedUser(obj){obj.userId = obj.userId ? jsUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? jsUserDisplayId(obj.displayId) : null;


                          if (obj.iconImage instanceof Data_Maybe.Just) {
                              obj.iconImage = obj.iconImage.value0;
                            
                          } else {
                              obj.iconImage = null;
                          }
                    
  return obj;}                                                                   

  function psRelatedUser(obj){obj.userId = obj.userId ? psUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? psUserDisplayId(obj.displayId) : null;


                      if (obj.iconImage) {
                        
                          obj.iconImage = new Data_Maybe.Just(obj.iconImage);
                      } else {
                          obj.iconImage = Data_Maybe.Nothing.value;
                      }
                
  return obj;}                                                                   

  function jsFocusedUser(obj){obj.userId = obj.userId ? jsUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? jsUserDisplayId(obj.displayId) : null;


                          if (obj.iconImage instanceof Data_Maybe.Just) {
                              obj.iconImage = obj.iconImage.value0;
                            
                          } else {
                              obj.iconImage = null;
                          }
                    
  return obj;}                                                                   

  function psFocusedUser(obj){obj.userId = obj.userId ? psUserId(obj.userId) : null;
  obj.displayId = obj.displayId ? psUserDisplayId(obj.displayId) : null;


                      if (obj.iconImage) {
                        
                          obj.iconImage = new Data_Maybe.Just(obj.iconImage);
                      } else {
                          obj.iconImage = Data_Maybe.Nothing.value;
                      }
                
  return obj;}                                                                   

  function jsAuthInfo(obj){
  obj.userId = obj.userId ? jsUserId(obj.userId) : null;return obj;}                                                             

  function psAuthInfo(obj){
  obj.userId = obj.userId ? psUserId(obj.userId) : null;return obj;}                                                             

  exports.__getContainers = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("getContainers", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psFocusedContainer(x) : null;
                              return x;
                          }) : null;
                    
                  return result;};})();

  function jsMaterialCompositionType(obj) {
                  if(E.Creation && obj instanceof E.Creation) {
                      return "creation";
                  }
            
                  if(E.Move && obj instanceof E.Move) {
                      return "move";
                  }
              }

  function psMaterialCompositionType(str) {switch(str){
  case "creation":
  return (E.Creation || { value: null }).value;
  case "move":
  return (E.Move || { value: null }).value;
  }}

  function jsMaterialComposition(obj) {
                  if(E.CreationMaterialComposition && obj instanceof E.CreationMaterialComposition) {
                      ;
                      return {
                          type: "creation",
                          propertyId: obj.value0,data: obj.value1
                      };
                  }
            
                  if(E.MoveMaterialComposition && obj instanceof E.MoveMaterialComposition) {
                      obj.value0 = obj.value0 ? jsMaterialId(obj.value0) : null;
                      return {
                          type: "move",
                          materialId: obj.value0
                      };
                  }
              }

  function psMaterialComposition(obj) {switch(obj.type){case "creation":
  ;return new E.CreationMaterialComposition(obj.propertyId,obj.data);
  case "move":
  obj.materialId = obj.materialId ? psMaterialId(obj.materialId) : null;return new E.MoveMaterialComposition(obj.materialId);
  }}

  exports.__startContentEditing = (() => {return (contentId) => {return async function (basedCommitId) {
                  let argObject = { contentId,basedCommitId };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentId = argObject.contentId ? jsContentId(argObject.contentId) : null;
                          if (argObject.basedCommitId instanceof Data_Maybe.Just) {
                              argObject.basedCommitId = argObject.basedCommitId.value0;
                              argObject.basedCommitId = argObject.basedCommitId ? jsContentCommitId(argObject.basedCommitId) : null;
                          } else {
                              argObject.basedCommitId = null;
                          }
                    
                  argObject = [ argObject.contentId,argObject.basedCommitId ];
                  let result = await requestApi("startContentEditing", argObject);
                  result = result ? psContentDraftId(result) : null;
                  return result;}};})();

  exports.__createNewContentDraft = (() => {return (structureId) => {return (spaceId) => {return async function (data) {
                  let argObject = { structureId,spaceId,data };
                  argObject = _.cloneDeep(argObject);
                  argObject.structureId = argObject.structureId ? jsStructureId(argObject.structureId) : null;
                          if (argObject.spaceId instanceof Data_Maybe.Just) {
                              argObject.spaceId = argObject.spaceId.value0;
                              argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                          } else {
                              argObject.spaceId = null;
                          }
                    
                  argObject = [ argObject.structureId,argObject.spaceId,argObject.data ];
                  let result = await requestApi("createNewContentDraft", argObject);
                  result = result ? psContentDraftId(result) : null;
                  return result;}}};})();

  exports.__editContentDraft = (() => {return (contentDraftId) => {return (data) => {return async function (materialUpdations) {
                  let argObject = { contentDraftId,data,materialUpdations };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentDraftId = argObject.contentDraftId ? jsContentDraftId(argObject.contentDraftId) : null;
                              argObject.materialUpdations = argObject.materialUpdations ? argObject.materialUpdations.map(x => {
                                  x = x ? jsMaterialDraftUpdation(x) : null;
                                  return x;
                              }) : null;
                        
                  argObject = [ argObject.contentDraftId,argObject.data,argObject.materialUpdations ];
                  let result = await requestApi("editContentDraft", argObject);
                
                  return result;}}};})();

  exports.__commitContent = (() => {return (contentDraftId) => {return (data) => {return async function (materialUpdations) {
                  let argObject = { contentDraftId,data,materialUpdations };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentDraftId = argObject.contentDraftId ? jsContentDraftId(argObject.contentDraftId) : null;
                              argObject.materialUpdations = argObject.materialUpdations ? argObject.materialUpdations.map(x => {
                                  x = x ? jsMaterialDraftUpdation(x) : null;
                                  return x;
                              }) : null;
                        
                  argObject = [ argObject.contentDraftId,argObject.data,argObject.materialUpdations ];
                  let result = await requestApi("commitContent", argObject);
                  result = result ? psContentId(result) : null;
                  return result;}}};})();

  exports.__getContentPage = (() => {return async function (contentId) {
                  let argObject = { contentId };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentId = argObject.contentId ? jsContentId(argObject.contentId) : null;
                  argObject = [ argObject.contentId ];
                  let result = await requestApi("getContentPage", argObject);
                  result = result ? psIntactContentPage(result) : null;
                  return result;};})();

  exports.__getRelatedContent = (() => {return async function (contentId) {
                  let argObject = { contentId };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentId = argObject.contentId ? jsContentId(argObject.contentId) : null;
                  argObject = [ argObject.contentId ];
                  let result = await requestApi("getRelatedContent", argObject);
                  result = result ? psRelatedContent(result) : null;
                  return result;};})();

  exports.__getContents = (() => {return (spaceId) => {return async function (formatId) {
                  let argObject = { spaceId,formatId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                  argObject = [ argObject.spaceId,argObject.formatId ];
                  let result = await requestApi("getContents", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psRelatedContent(x) : null;
                              return x;
                          }) : null;
                    
                  return result;}};})();

  exports.__getContentsByDisplayId = (() => {return (spaceId) => {return async function (formatId) {
                  let argObject = { spaceId,formatId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceDisplayId(argObject.spaceId) : null;argObject.formatId = argObject.formatId ? jsFormatDisplayId(argObject.formatId) : null;
                  argObject = [ argObject.spaceId,argObject.formatId ];
                  let result = await requestApi("getContentsByDisplayId", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psRelatedContent(x) : null;
                              return x;
                          }) : null;
                    
                  return result;}};})();

  exports.__getFocusedContentsByDisplayId = (() => {return (spaceId) => {return async function (formatId) {
                  let argObject = { spaceId,formatId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceDisplayId(argObject.spaceId) : null;argObject.formatId = argObject.formatId ? jsFormatDisplayId(argObject.formatId) : null;
                  argObject = [ argObject.spaceId,argObject.formatId ];
                  let result = await requestApi("getFocusedContentsByDisplayId", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psFocusedContent(x) : null;
                              return x;
                          }) : null;
                    
                  return result;}};})();


                  exports.__getMyContentDrafts = (() => { return async function () { 
                      let result = await requestApi("getMyContentDrafts", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psRelatedContentDraft(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();
            

  exports.__getContentDraft = (() => {return async function (draftId) {
                  let argObject = { draftId };
                  argObject = _.cloneDeep(argObject);
                  argObject.draftId = argObject.draftId ? jsContentDraftId(argObject.draftId) : null;
                  argObject = [ argObject.draftId ];
                  let result = await requestApi("getContentDraft", argObject);
                  result = result ? psFocusedContentDraft(result) : null;
                  return result;};})();

  exports.__cancelContentDraft = (() => {return async function (draftId) {
                  let argObject = { draftId };
                  argObject = _.cloneDeep(argObject);
                  argObject.draftId = argObject.draftId ? jsContentDraftId(argObject.draftId) : null;
                  argObject = [ argObject.draftId ];
                  let result = await requestApi("cancelContentDraft", argObject);
                
                  return result;};})();

  exports.__getSearchedAllContents = (() => {return async function (text) {
                  let argObject = { text };
                  argObject = _.cloneDeep(argObject);
                
                  argObject = [ argObject.text ];
                  let result = await requestApi("getSearchedAllContents", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psSearchedContent(x) : null;
                              return x;
                          }) : null;
                    
                  return result;};})();

  exports.__getSearchedContentsInContainer = (() => {return (spaceId) => {return (formatId) => {return async function (text) {
                  let argObject = { spaceId,formatId,text };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceDisplayId(argObject.spaceId) : null;argObject.formatId = argObject.formatId ? jsFormatDisplayId(argObject.formatId) : null;
                  argObject = [ argObject.spaceId,argObject.formatId,argObject.text ];
                  let result = await requestApi("getSearchedContentsInContainer", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psSearchedContent(x) : null;
                              return x;
                          }) : null;
                    
                  return result;}}};})();


                  exports.__createFormat = (() => {return async function (argObject) {
                      argObject = _.cloneDeep(argObject);
                      argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;argObject.usage = argObject.usage ? jsFormatUsage(argObject.usage) : null;
                              argObject.properties = argObject.properties ? argObject.properties.map(x => {
                                  x = x ? jsPropertyInfo(x) : null;
                                  return x;
                              }) : null;
                        
                      let args = [ argObject.spaceId,argObject.displayName,argObject.description,argObject.usage,argObject.properties ];
                      let result = await requestApi("createFormat", args);
                      result = result ? psFormatDisplayId(result) : null;
                      return result;
                  } })();
            

  exports.__getFormat = (() => {return async function (formatDisplayId) {
                  let argObject = { formatDisplayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatDisplayId = argObject.formatDisplayId ? jsFormatDisplayId(argObject.formatDisplayId) : null;
                  argObject = [ argObject.formatDisplayId ];
                  let result = await requestApi("getFormat", argObject);
                  result = result ? psFocusedFormat(result) : null;
                  return result;};})();

  exports.__getRelatedFormat = (() => {return async function (formatId) {
                  let argObject = { formatId };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                  argObject = [ argObject.formatId ];
                  let result = await requestApi("getRelatedFormat", argObject);
                  result = result ? psRelatedFormat(result) : null;
                  return result;};})();

  exports.__getFocusedFormatByStructure = (() => {return async function (structureId) {
                  let argObject = { structureId };
                  argObject = _.cloneDeep(argObject);
                  argObject.structureId = argObject.structureId ? jsStructureId(argObject.structureId) : null;
                  argObject = [ argObject.structureId ];
                  let result = await requestApi("getFocusedFormatByStructure", argObject);
                  result = result ? psFocusedFormat(result) : null;
                  return result;};})();

  exports.__getRelatedStructure = (() => {return async function (structureId) {
                  let argObject = { structureId };
                  argObject = _.cloneDeep(argObject);
                  argObject.structureId = argObject.structureId ? jsStructureId(argObject.structureId) : null;
                  argObject = [ argObject.structureId ];
                  let result = await requestApi("getRelatedStructure", argObject);
                  result = result ? psRelatedStructure(result) : null;
                  return result;};})();

  exports.__getFormats = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("getFormats", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psRelatedFormat(x) : null;
                              return x;
                          }) : null;
                    
                  return result;};})();

  exports.__getStructures = (() => {return async function (formatId) {
                  let argObject = { formatId };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                  argObject = [ argObject.formatId ];
                  let result = await requestApi("getStructures", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psRelatedStructure(x) : null;
                              return x;
                          }) : null;
                    
                  return result;};})();

  exports.__updateFormatStructure = (() => {return (formatId) => {return async function (properties) {
                  let argObject = { formatId,properties };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                              argObject.properties = argObject.properties ? argObject.properties.map(x => {
                                  x = x ? jsPropertyInfo(x) : null;
                                  return x;
                              }) : null;
                        
                  argObject = [ argObject.formatId,argObject.properties ];
                  let result = await requestApi("updateFormatStructure", argObject);
                
                  return result;}};})();

  exports.__setFormatDisplayName = (() => {return (formatId) => {return async function (displayName) {
                  let argObject = { formatId,displayName };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                  argObject = [ argObject.formatId,argObject.displayName ];
                  let result = await requestApi("setFormatDisplayName", argObject);
                
                  return result;}};})();

  exports.__setFormatDisplayId = (() => {return (formatId) => {return async function (displayId) {
                  let argObject = { formatId,displayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;argObject.displayId = argObject.displayId ? jsFormatDisplayId(argObject.displayId) : null;
                  argObject = [ argObject.formatId,argObject.displayId ];
                  let result = await requestApi("setFormatDisplayId", argObject);
                
                  return result;}};})();

  exports.__setFormatIcon = (() => {return (formatId) => {return async function (icon) {
                  let argObject = { formatId,icon };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatId = argObject.formatId ? jsFormatId(argObject.formatId) : null;
                          if (argObject.icon instanceof Data_Maybe.Just) {
                              argObject.icon = argObject.icon.value0;
                            
                          } else {
                              argObject.icon = null;
                          }
                    
                  argObject = [ argObject.formatId,argObject.icon ];
                  let result = await requestApi("setFormatIcon", argObject);
                
                  return result;}};})();

  exports.__getAvailableFormatDisplayId = (() => {return async function (formatDisplayId) {
                  let argObject = { formatDisplayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.formatDisplayId = argObject.formatDisplayId ? jsFormatDisplayId(argObject.formatDisplayId) : null;
                  argObject = [ argObject.formatDisplayId ];
                  let result = await requestApi("getAvailableFormatDisplayId", argObject);
                
                  return result;};})();

  exports.__startMaterialEditing = (() => {return (materialId) => {return async function (basedCommitId) {
                  let argObject = { materialId,basedCommitId };
                  argObject = _.cloneDeep(argObject);
                  argObject.materialId = argObject.materialId ? jsMaterialId(argObject.materialId) : null;
                          if (argObject.basedCommitId instanceof Data_Maybe.Just) {
                              argObject.basedCommitId = argObject.basedCommitId.value0;
                              argObject.basedCommitId = argObject.basedCommitId ? jsMaterialCommitId(argObject.basedCommitId) : null;
                          } else {
                              argObject.basedCommitId = null;
                          }
                    
                  argObject = [ argObject.materialId,argObject.basedCommitId ];
                  let result = await requestApi("startMaterialEditing", argObject);
                  result = result ? psRelatedMaterialDraft(result) : null;
                  return result;}};})();

  exports.__createNewMaterialDraft = (() => {return (spaceId) => {return async function (materialData) {
                  let argObject = { spaceId,materialData };
                  argObject = _.cloneDeep(argObject);
                
                          if (argObject.spaceId instanceof Data_Maybe.Just) {
                              argObject.spaceId = argObject.spaceId.value0;
                              argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                          } else {
                              argObject.spaceId = null;
                          }
                      argObject.materialData = argObject.materialData ? jsMaterialData(argObject.materialData) : null;
                  argObject = [ argObject.spaceId,argObject.materialData ];
                  let result = await requestApi("createNewMaterialDraft", argObject);
                  result = result ? psRelatedMaterialDraft(result) : null;
                  return result;}};})();

  exports.__editMaterialDraft = (() => {return (materialDraftId) => {return async function (materialData) {
                  let argObject = { materialDraftId,materialData };
                  argObject = _.cloneDeep(argObject);
                  argObject.materialDraftId = argObject.materialDraftId ? jsMaterialDraftId(argObject.materialDraftId) : null;argObject.materialData = argObject.materialData ? jsMaterialData(argObject.materialData) : null;
                  argObject = [ argObject.materialDraftId,argObject.materialData ];
                  let result = await requestApi("editMaterialDraft", argObject);
                
                  return result;}};})();

  exports.__commitMaterial = (() => {return (materialDraftId) => {return async function (materialData) {
                  let argObject = { materialDraftId,materialData };
                  argObject = _.cloneDeep(argObject);
                  argObject.materialDraftId = argObject.materialDraftId ? jsMaterialDraftId(argObject.materialDraftId) : null;argObject.materialData = argObject.materialData ? jsMaterialData(argObject.materialData) : null;
                  argObject = [ argObject.materialDraftId,argObject.materialData ];
                  let result = await requestApi("commitMaterial", argObject);
                
                  return result;}};})();


                  exports.__getMyMaterialDrafts = (() => { return async function () { 
                      let result = await requestApi("getMyMaterialDrafts", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psRelatedMaterialDraft(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();
            

  exports.__getMaterialDraft = (() => {return async function (draftId) {
                  let argObject = { draftId };
                  argObject = _.cloneDeep(argObject);
                  argObject.draftId = argObject.draftId ? jsMaterialDraftId(argObject.draftId) : null;
                  argObject = [ argObject.draftId ];
                  let result = await requestApi("getMaterialDraft", argObject);
                  result = result ? psFocusedMaterialDraft(result) : null;
                  return result;};})();

  exports.__cancelMaterialDraft = (() => {return async function (draftId) {
                  let argObject = { draftId };
                  argObject = _.cloneDeep(argObject);
                  argObject.draftId = argObject.draftId ? jsMaterialDraftId(argObject.draftId) : null;
                  argObject = [ argObject.draftId ];
                  let result = await requestApi("cancelMaterialDraft", argObject);
                
                  return result;};})();

  exports.__commentContent = (() => {return (contentId) => {return async function (text) {
                  let argObject = { contentId,text };
                  argObject = _.cloneDeep(argObject);
                  argObject.contentId = argObject.contentId ? jsContentId(argObject.contentId) : null;
                  argObject = [ argObject.contentId,argObject.text ];
                  let result = await requestApi("commentContent", argObject);
                  result = result ? psFocusedTreeComment(result) : null;
                  return result;}};})();

  exports.__replyToComment = (() => {return (commentId) => {return async function (text) {
                  let argObject = { commentId,text };
                  argObject = _.cloneDeep(argObject);
                  argObject.commentId = argObject.commentId ? jsCommentId(argObject.commentId) : null;
                  argObject = [ argObject.commentId,argObject.text ];
                  let result = await requestApi("replyToComment", argObject);
                  result = result ? psFocusedComment(result) : null;
                  return result;}};})();


                  exports.__getNotifications = (() => { return async function () { 
                      let result = await requestApi("getNotifications", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psIntactNotification(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();               


                  exports.__getNotReadNotificationCount = (() => { return async function () { 
                      let result = await requestApi("getNotReadNotificationCount", []);
                    
                      return result;
                  }})();
            


                  exports.__readAllNotifications = (() => { return async function () { 
                      let result = await requestApi("readAllNotifications", []);
                    
                      return result;
                  }})();
            


                  exports.__createSpace = (() => {return async function (argObject) {
                      argObject = _.cloneDeep(argObject);
                    
                      let args = [ argObject.displayId,argObject.displayName,argObject.description ];
                      let result = await requestApi("createSpace", args);
                      result = result ? psSpaceDisplayId(result) : null;
                      return result;
                  } })();
            

  exports.__getSpace = (() => {return async function (spaceDisplayId) {
                  let argObject = { spaceDisplayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceDisplayId = argObject.spaceDisplayId ? jsSpaceDisplayId(argObject.spaceDisplayId) : null;
                  argObject = [ argObject.spaceDisplayId ];
                  let result = await requestApi("getSpace", argObject);
                  result = result ? psFocusedSpace(result) : null;
                  return result;};})();

  exports.__getRelatedSpace = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("getRelatedSpace", argObject);
                  result = result ? psRelatedSpace(result) : null;
                  return result;};})();

  exports.__getSpaceMembers = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("getSpaceMembers", argObject);
                
                          result = result ? result.map(x => {
                              x = x ? psIntactSpaceMember(x) : null;
                              return x;
                          }) : null;
                    
                  return result;};})();

  exports.__getAvailableSpaceDisplayId = (() => {return async function (spaceDisplayId) {
                  let argObject = { spaceDisplayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceDisplayId = argObject.spaceDisplayId ? jsSpaceDisplayId(argObject.spaceDisplayId) : null;
                  argObject = [ argObject.spaceDisplayId ];
                  let result = await requestApi("getAvailableSpaceDisplayId", argObject);
                
                  return result;};})();


                  exports.__getCandidateSpaces = (() => { return async function () { 
                      let result = await requestApi("getCandidateSpaces", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psRelatedSpace(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();
            


                  exports.__getMySpaces = (() => { return async function () { 
                      let result = await requestApi("getMySpaces", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psRelatedSpace(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();
            


                  exports.__getPublishedSpaces = (() => { return async function () { 
                      let result = await requestApi("getPublishedSpaces", []);
                    
                          result = result ? result.map(x => {
                              x = x ? psRelatedSpace(x) : null;
                              return x;
                          }) : null;
                    
                      return result;
                  }})();
            

  exports.__applySpaceMembership = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("applySpaceMembership", argObject);
                
                  return result;};})();

  exports.__setSpaceMembershipMethod = (() => {return (spaceId) => {return async function (membershipMethod) {
                  let argObject = { spaceId,membershipMethod };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;argObject.membershipMethod = argObject.membershipMethod ? jsMembershipMethod(argObject.membershipMethod) : null;
                  argObject = [ argObject.spaceId,argObject.membershipMethod ];
                  let result = await requestApi("setSpaceMembershipMethod", argObject);
                
                  return result;}};})();

  exports.__setSpaceDisplayName = (() => {return (spaceId) => {return async function (displayName) {
                  let argObject = { spaceId,displayName };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId,argObject.displayName ];
                  let result = await requestApi("setSpaceDisplayName", argObject);
                
                  return result;}};})();

  exports.__setSpaceDescription = (() => {return (spaceId) => {return async function (description) {
                  let argObject = { spaceId,description };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId,argObject.description ];
                  let result = await requestApi("setSpaceDescription", argObject);
                
                  return result;}};})();

  exports.__uploadSpaceHeaderImage = (() => {return async function (args) {
                  let argObject = { args };
                  argObject = _.cloneDeep(argObject);
                  argObject.args.spaceId = argObject.args.spaceId ? jsSpaceId(argObject.args.spaceId) : null;
                  argObject = [ argObject.args ];
                  let result = await requestApi("uploadSpaceHeaderImage", argObject);
                
                  return result;};})();

  exports.__setSpaceDisplayId = (() => {return (spaceId) => {return async function (displayId) {
                  let argObject = { spaceId,displayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;argObject.displayId = argObject.displayId ? jsSpaceDisplayId(argObject.displayId) : null;
                  argObject = [ argObject.spaceId,argObject.displayId ];
                  let result = await requestApi("setSpaceDisplayId", argObject);
                
                  return result;}};})();

  exports.__setSpacePublished = (() => {return (spaceId) => {return async function (published) {
                  let argObject = { spaceId,published };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId,argObject.published ];
                  let result = await requestApi("setSpacePublished", argObject);
                
                  return result;}};})();

  exports.__setSpaceDefaultAuthority = (() => {return (spaceId) => {return async function (defaultAuthority) {
                  let argObject = { spaceId,defaultAuthority };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;argObject.defaultAuthority = argObject.defaultAuthority ? jsSpaceAuthority(argObject.defaultAuthority) : null;
                  argObject = [ argObject.spaceId,argObject.defaultAuthority ];
                  let result = await requestApi("setSpaceDefaultAuthority", argObject);
                
                  return result;}};})();

  exports.__getSpaceHomePage = (() => {return async function (spaceId) {
                  let argObject = { spaceId };
                  argObject = _.cloneDeep(argObject);
                  argObject.spaceId = argObject.spaceId ? jsSpaceId(argObject.spaceId) : null;
                  argObject = [ argObject.spaceId ];
                  let result = await requestApi("getSpaceHomePage", argObject);
                  result = result ? psIntactSpageHomePage(result) : null;
                  return result;};})();


                  exports.__createUser = (() => {return async function (argObject) {
                      argObject = _.cloneDeep(argObject);
                    
                      let args = [ argObject.email,argObject.displayName,argObject.password ];
                      let result = await requestApi("createUser", args);
                      result = result ? psUserId(result) : null;
                      return result;
                  } })();
            


                  exports.__getMyAccount = (() => { return async function () { 
                      let result = await requestApi("getMyAccount", []);
                      result = result ? psIntactAccount(result) : null;
                      return result;
                  }})();
            

  exports.__getUser = (() => {return async function (displayId) {
                  let argObject = { displayId };
                  argObject = _.cloneDeep(argObject);
                  argObject.displayId = argObject.displayId ? jsUserDisplayId(argObject.displayId) : null;
                  argObject = [ argObject.displayId ];
                  let result = await requestApi("getUser", argObject);
                  result = result ? psFocusedUser(result) : null;
                  return result;};})();


                  exports.__authenticate = (() => {return async function (argObject) {
                      argObject = _.cloneDeep(argObject);
                    
                      let args = [ argObject.email,argObject.password ];
                      let result = await requestApi("authenticate", args);
                      result = result ? psAuthInfo(result) : null;
                      return result;
                  } })();
            

  exports.__activateAccount = (() => {return async function (token) {
                  let argObject = { token };
                  argObject = _.cloneDeep(argObject);
                
                  argObject = [ argObject.token ];
                  let result = await requestApi("activateAccount", argObject);
                  result = result ? psAuthInfo(result) : null;
                  return result;};})();


                  exports.__setMyPassword = (() => {return async function (argObject) {
                      argObject = _.cloneDeep(argObject);
                    
                      let args = [ argObject.oldPassword,argObject.newPassword ];
                      let result = await requestApi("setMyPassword", args);
                    
                      return result;
                  } })();
            

  exports.__setMyDisplayName = (() => {return async function (displayName) {
                  let argObject = { displayName };
                  argObject = _.cloneDeep(argObject);
                
                  argObject = [ argObject.displayName ];
                  let result = await requestApi("setMyDisplayName", argObject);
                
                  return result;};})();

  exports.__setMyEmail = (() => {return async function (email) {
                  let argObject = { email };
                  argObject = _.cloneDeep(argObject);
                
                  argObject = [ argObject.email ];
                  let result = await requestApi("setMyEmail", argObject);
                
                  return result;};})();

  exports.__uploadMyIcon = (() => {return async function (args) {
                  let argObject = { args };
                  argObject = _.cloneDeep(argObject);
                
                  argObject = [ argObject.args ];
                  let result = await requestApi("uploadMyIcon", argObject);
                
                  return result;};})();
})(PS["Incentknow.API"] = PS["Incentknow.API"] || {});
(function(exports) {
  

  exports.showError = obj => {
      console.log("showError");
      console.log(obj);
      if(obj.error) {
          return obj.error;
      }
      return "";
  };

  exports.makeQueryCallback = name => {
      console.log(`makeQueryCallback:${name}`);
      return fetch => {
          return callback => { 
              return () => {
                  async function get() { 
                      const result = await fetch;
                      callback({ result, from: "server" })();
                  }
                  get();
              };
          };
      };
  };

  // foreign import toCallbackApi :: forall a. (Option -> Promise a) -> (Response a -> Effect Unit) -> Effect Unit
  /*
exports.toCallbackApi = fetch => {
    return callback => { 
        return () => {
            async function get(source) {
                try {
                    const res = await fetch({ source });
                    callback({ data: res, error: null, source })();
                } catch(e) {
                    callback({ data: null, error: e, source })();
                }
            };
            Promise.all[get("cache"), get("server")];
        };
    };
};
*/  
  exports.mapPromise = f => {
      return promise => {
          return promise.then(x => f(x));
      };
  };
})(PS["Incentknow.API.Execution"] = PS["Incentknow.API.Execution"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Equality"] = $PS["Type.Equality"] || {};
  var exports = $PS["Type.Equality"];
  var TypeEquals = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  };
  var refl = new TypeEquals(function (a) {
      return a;
  }, function (a) {
      return a;
  });
  var from = function (dict) {
      return dict.from;
  };
  exports["to"] = to;
  exports["from"] = from;
  exports["refl"] = refl;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.MouseEvent"] = $PS["Web.UIEvent.MouseEvent"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];  
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.AppM"] = $PS["Incentknow.AppM"] || {};
  var exports = $PS["Incentknow.AppM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Type_Equality = $PS["Type.Equality"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];                
  var $$Error = (function () {
      function $$Error(value0) {
          this.value0 = value0;
      };
      $$Error.create = function (value0) {
          return new $$Error(value0);
      };
      return $$Error;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var NavigateG = (function () {
      function NavigateG(value0) {
          this.value0 = value0;
      };
      NavigateG.create = function (value0) {
          return new NavigateG(value0);
      };
      return NavigateG;
  })();
  var PushStateG = (function () {
      function PushStateG(value0) {
          this.value0 = value0;
      };
      PushStateG.create = function (value0) {
          return new PushStateG(value0);
      };
      return PushStateG;
  })();
  var StartLoadingG = (function () {
      function StartLoadingG() {

      };
      StartLoadingG.value = new StartLoadingG();
      return StartLoadingG;
  })();
  var StopLoadingG = (function () {
      function StopLoadingG() {

      };
      StopLoadingG.value = new StopLoadingG();
      return StopLoadingG;
  })();
  var MessageG = (function () {
      function MessageG(value0) {
          this.value0 = value0;
      };
      MessageG.create = function (value0) {
          return new MessageG(value0);
      };
      return MessageG;
  })();
  var ResetMesssageG = (function () {
      function ResetMesssageG() {

      };
      ResetMesssageG.value = new ResetMesssageG();
      return ResetMesssageG;
  })();
  var AppM = function (x) {
      return x;
  };
  var Behaviour = function (MonadEffect0, getAccount, getPushStateInterface, message, navigate, pushState, resetMessage, setAccount, startLoading, stopLoading, takeGlobalMessage) {
      this.MonadEffect0 = MonadEffect0;
      this.getAccount = getAccount;
      this.getPushStateInterface = getPushStateInterface;
      this.message = message;
      this.navigate = navigate;
      this.pushState = pushState;
      this.resetMessage = resetMessage;
      this.setAccount = setAccount;
      this.startLoading = startLoading;
      this.stopLoading = stopLoading;
      this.takeGlobalMessage = takeGlobalMessage;
  };
  var takeGlobalMessage = function (dict) {
      return dict.takeGlobalMessage;
  };
  var stopLoading = function (dict) {
      return dict.stopLoading;
  };
  var startLoading = function (dict) {
      return dict.startLoading;
  };
  var setAccount = function (dict) {
      return dict.setAccount;
  };
  var runAppM = function (env) {
      return function (v) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_State_Trans.runStateT(v)(env))(function (v1) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value0);
          });
      };
  };
  var resetMessage = function (dict) {
      return dict.resetMessage;
  };
  var pushState = function (dict) {
      return dict.pushState;
  };
  var navigate = function (dict) {
      return dict.navigate;
  };
  var navigateRoute = function (dictBehaviour) {
      return function (event) {
          return function (route) {
              return Control_Bind.discard(Control_Bind.discardUnit)(((dictBehaviour.MonadEffect0()).Monad0()).Bind1())(Effect_Class.liftEffect(dictBehaviour.MonadEffect0())(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(event))))(function () {
                  return navigate(dictBehaviour)(route);
              });
          };
      };
  };
  var monadEffectAppM = Control_Monad_State_Trans.monadEffectState(Effect_Aff.monadEffectAff);
  var monadAppM = Control_Monad_State_Trans.monadStateT(Effect_Aff.monadAff);
  var monadStateAppM = function (dictTypeEquals) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadAppM;
      }, function (f) {
          return AppM(Control_Monad_State_Trans.StateT(function (env) {
              var v = f(Type_Equality.from(dictTypeEquals)(env));
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Tuple.Tuple.create(v.value0)(Type_Equality.to(dictTypeEquals)(v.value1)));
          }));
      });
  };
  var monadAffAppM = Effect_Aff_Class.monadAffState(Effect_Aff_Class.monadAffAff);
  var message = function (dict) {
      return dict.message;
  };
  var getPushStateInterface = function (dict) {
      return dict.getPushStateInterface;
  };
  var getAccount = function (dict) {
      return dict.getAccount;
  };                                                                               
  var bindAppM = Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff);
  var behaviourHalogenM = function (dictBehaviour) {
      return new Behaviour(function () {
          return Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0());
      }, Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(getAccount(dictBehaviour)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(getPushStateInterface(dictBehaviour)), (function () {
          var $28 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0());
          var $29 = message(dictBehaviour);
          return function ($30) {
              return $28($29($30));
          };
      })(), (function () {
          var $31 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0());
          var $32 = navigate(dictBehaviour);
          return function ($33) {
              return $31($32($33));
          };
      })(), (function () {
          var $34 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0());
          var $35 = pushState(dictBehaviour);
          return function ($36) {
              return $34($35($36));
          };
      })(), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(resetMessage(dictBehaviour)), (function () {
          var $37 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0());
          var $38 = setAccount(dictBehaviour);
          return function ($39) {
              return $37($38($39));
          };
      })(), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(startLoading(dictBehaviour)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(stopLoading(dictBehaviour)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictBehaviour.MonadEffect0()).Monad0())(takeGlobalMessage(dictBehaviour)));
  };                                                                         
  var applicativeAppM = Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff);
  var behaviourAppM = new Behaviour(function () {
      return monadEffectAppM;
  }, Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.account;
  }), Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.pushStateInterface;
  }), function (msg) {
      return Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
          return v.globalMessage;
      }))(function (globalMessage) {
          return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(new MessageG(msg))(globalMessage));
      });
  }, function (route) {
      return Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
          return v.globalMessage;
      }))(function (globalMessage) {
          return Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(ResetMesssageG.value)(globalMessage)))(function () {
              return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(new NavigateG(route))(globalMessage));
          });
      });
  }, function (route) {
      return Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
          return v.globalMessage;
      }))(function (globalMessage) {
          return Control_Bind.discard(Control_Bind.discardUnit)(bindAppM)(Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(ResetMesssageG.value)(globalMessage)))(function () {
              return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(new PushStateG(route))(globalMessage));
          });
      });
  }, Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.globalMessage;
  }))(function (globalMessage) {
      return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(ResetMesssageG.value)(globalMessage));
  }), function (x) {
      return Control_Monad_State_Class.modify_(monadStateAppM(Type_Equality.refl))(function (v) {
          var $25 = {};
          for (var $26 in v) {
              if ({}.hasOwnProperty.call(v, $26)) {
                  $25[$26] = v[$26];
              };
          };
          $25.account = x;
          return $25;
      });
  }, Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.globalMessage;
  }))(function (globalMessage) {
      return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(StartLoadingG.value)(globalMessage));
  }), Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.globalMessage;
  }))(function (globalMessage) {
      return Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.put(StopLoadingG.value)(globalMessage));
  }), Control_Bind.bind(bindAppM)(Control_Monad_State_Class.gets(monadStateAppM(Type_Equality.refl))(function (v) {
      return v.globalMessage;
  }))(function (globalMessage) {
      return Control_Bind.bind(bindAppM)(Effect_Aff_Class.liftAff(monadAffAppM)(Effect_Aff_AVar.take(globalMessage)))(function (query) {
          return Control_Applicative.pure(applicativeAppM)(query);
      });
  }));
  exports["getAccount"] = getAccount;
  exports["getPushStateInterface"] = getPushStateInterface;
  exports["message"] = message;
  exports["navigate"] = navigate;
  exports["pushState"] = pushState;
  exports["resetMessage"] = resetMessage;
  exports["takeGlobalMessage"] = takeGlobalMessage;
  exports["Error"] = $$Error;
  exports["Success"] = Success;
  exports["NavigateG"] = NavigateG;
  exports["PushStateG"] = PushStateG;
  exports["StartLoadingG"] = StartLoadingG;
  exports["StopLoadingG"] = StopLoadingG;
  exports["MessageG"] = MessageG;
  exports["ResetMesssageG"] = ResetMesssageG;
  exports["runAppM"] = runAppM;
  exports["navigateRoute"] = navigateRoute;
  exports["monadAffAppM"] = monadAffAppM;
  exports["behaviourHalogenM"] = behaviourHalogenM;
  exports["behaviourAppM"] = behaviourAppM;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  // module Test.Unit.Console

  var hasStderr;
  try { hasStderr = !!process.stderr; } catch (e) { hasStderr = false; }

  exports.consoleLog = function consoleLog(s) {
    return function() {
      console.log(s);
    };
  };
  exports.consoleError = function consoleError(s) {
    return function() {
      console.error(s);
    };
  };
})(PS["Test.Unit.Console"] = PS["Test.Unit.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Test.Unit.Console"] = $PS["Test.Unit.Console"] || {};
  var exports = $PS["Test.Unit.Console"];
  var $foreign = $PS["Test.Unit.Console"];
  exports["consoleLog"] = $foreign.consoleLog;
  exports["consoleError"] = $foreign.consoleError;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.API.Execution"] = $PS["Incentknow.API.Execution"] || {};
  var exports = $PS["Incentknow.API.Execution"];
  var $foreign = $PS["Incentknow.API.Execution"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Promise = $PS["Control.Promise"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];                
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var LoadingForServer = (function () {
      function LoadingForServer() {

      };
      LoadingForServer.value = new LoadingForServer();
      return LoadingForServer;
  })();
  var Holding = (function () {
      function Holding(value0) {
          this.value0 = value0;
      };
      Holding.create = function (value0) {
          return new Holding(value0);
      };
      return Holding;
  })();
  var Missing = (function () {
      function Missing(value0) {
          this.value0 = value0;
      };
      Missing.create = function (value0) {
          return new Missing(value0);
      };
      return Missing;
  })();
  var QueryAPI = (function () {
      function QueryAPI(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      QueryAPI.create = function (value0) {
          return function (value1) {
              return new QueryAPI(value0, value1);
          };
      };
      return QueryAPI;
  })();
  var FromCache = (function () {
      function FromCache(value0) {
          this.value0 = value0;
      };
      FromCache.create = function (value0) {
          return new FromCache(value0);
      };
      return FromCache;
  })();
  var FromServer = (function () {
      function FromServer(value0) {
          this.value0 = value0;
      };
      FromServer.create = function (value0) {
          return new FromServer(value0);
      };
      return FromServer;
  })();
  var FailedCache = (function () {
      function FailedCache(value0) {
          this.value0 = value0;
      };
      FailedCache.create = function (value0) {
          return new FailedCache(value0);
      };
      return FailedCache;
  })();
  var FailedServer = (function () {
      function FailedServer(value0) {
          this.value0 = value0;
      };
      FailedServer.create = function (value0) {
          return new FailedServer(value0);
      };
      return FailedServer;
  })();
  var CommandAPI = (function () {
      function CommandAPI(value0) {
          this.value0 = value0;
      };
      CommandAPI.create = function (value0) {
          return new CommandAPI(value0);
      };
      return CommandAPI;
  })();
  var zip = function (a) {
      return function (b) {
          if (a instanceof Holding && b instanceof Holding) {
              return Holding.create(new Data_Tuple.Tuple(a.value0, b.value0));
          };
          if (a instanceof Missing) {
              return new Missing(a.value0);
          };
          if (b instanceof Missing) {
              return new Missing(b.value0);
          };
          if (a instanceof LoadingForServer) {
              return LoadingForServer.value;
          };
          if (b instanceof LoadingForServer) {
              return LoadingForServer.value;
          };
          return Loading.value;
      };
  };
  var toMaybe = function (v) {
      if (v instanceof Loading) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof LoadingForServer) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Holding) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Missing) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Incentknow.API.Execution (line 121, column 11 - line 125, column 23): " + [ v.constructor.name ]);
  };
  var toFetch = function (v) {
      if (v.from === "server") {
          return new FromServer(v.result);
      };
      if (v.from === "sache") {
          return new FromCache(v.result);
      };
      return new FailedServer("");
  };
  var mapQueryAPI = new Data_Functor.Functor(function (f) {
      return function (v) {
          return QueryAPI.create(v.value0)($foreign.mapPromise(f)(v.value1));
      };
  });
  var mapCallback = function (f) {
      return function (callback) {
          return function (fun) {
              return callback(function ($71) {
                  return fun(f($71));
              });
          };
      };
  };
  var toQueryCallback = function (v) {
      return mapCallback(toFetch)($foreign.makeQueryCallback(v.value0)(v.value1));
  };
  var functorRemote = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Loading) {
              return Loading.value;
          };
          if (v instanceof LoadingForServer) {
              return LoadingForServer.value;
          };
          if (v instanceof Holding) {
              return Holding.create(f(v.value0));
          };
          if (v instanceof Missing) {
              return new Missing(v.value0);
          };
          throw new Error("Failed pattern match at Incentknow.API.Execution (line 112, column 11 - line 116, column 31): " + [ v.constructor.name ]);
      };
  });
  var forRemote = function (dictBehaviour) {
      return function (fetch) {
          return function (fun) {
              if (fetch instanceof FromCache) {
                  return fun(new Holding(fetch.value0));
              };
              if (fetch instanceof FromServer) {
                  return fun(new Holding(fetch.value0));
              };
              if (fetch instanceof FailedCache) {
                  return fun(LoadingForServer.value);
              };
              if (fetch instanceof FailedServer) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(((dictBehaviour.MonadEffect0()).Monad0()).Bind1())(fun(new Missing(fetch.value0)))(function () {
                      return Effect_Class.liftEffect(dictBehaviour.MonadEffect0())(Test_Unit_Console.consoleError("forRemomee:" + fetch.value0));
                  });
              };
              throw new Error("Failed pattern match at Incentknow.API.Execution (line 129, column 3 - line 135, column 59): " + [ fetch.constructor.name ]);
          };
      };
  };
  var forItem = function (dictBehaviour) {
      return function (fetch) {
          return function (fun) {
              return forRemote(dictBehaviour)(fetch)(function (remote) {
                  return Data_Foldable.for_(((dictBehaviour.MonadEffect0()).Monad0()).Applicative0())(Data_Foldable.foldableMaybe)(toMaybe(remote))(function (item) {
                      return fun(item);
                  });
              });
          };
      };
  };
  var callbackAPI = function (dictMonadAff) {
      return function (action) {
          return function (onChange) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(Halogen_Query_EventSource.effectEventSource(dictMonadAff)(function (emitter) {
                  return function __do() {
                      var unsubscrive = onChange(function (item) {
                          return Halogen_Query_EventSource.emit(emitter)(action(item));
                      })();
                      return Data_Monoid.mempty(Data_Monoid.monoidFn(Effect.monoidEffect(Halogen_Query_EventSource.monoidFinalizer(Effect.applicativeEffect))))(unsubscrive)();
                  };
              })))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              });
          };
      };
  };
  var callbackQuery = function (dictMonadAff) {
      return function (action) {
          return function (query) {
              return callbackAPI(dictMonadAff)(action)(toQueryCallback(query));
          };
      };
  };
  var callAPI = (function () {
      var $72 = Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffAff);
      var $73 = Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(function ($75) {
          return Data_Either.Left.create($foreign.showError($75));
      })(Data_Either.Right.create));
      return function ($74) {
          return $72($73(Effect_Aff.attempt(Control_Promise.toAff($74))));
      };
  })();
  var callCommand = function (v) {
      return callAPI(v.value0);
  };
  var callQuery = function (v) {
      return callAPI(v.value1);
  };
  var executeAPI = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (promise) {
              return Control_Bind.bind(((dictBehaviour.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(callAPI(promise)))(function (result) {
                  if (result instanceof Data_Either.Right) {
                      return Control_Applicative.pure(((dictBehaviour.MonadEffect0()).Monad0()).Applicative0())(new Data_Maybe.Just(result.value0));
                  };
                  if (result instanceof Data_Either.Left) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(((dictBehaviour.MonadEffect0()).Monad0()).Bind1())(Incentknow_AppM.message(dictBehaviour)(new Incentknow_AppM["Error"](result.value0)))(function () {
                          return Control_Applicative.pure(((dictBehaviour.MonadEffect0()).Monad0()).Applicative0())(Data_Maybe.Nothing.value);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.API.Execution (line 157, column 3 - line 161, column 19): " + [ result.constructor.name ]);
              });
          };
      };
  };
  var executeCommand = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              return executeAPI(dictBehaviour)(dictMonadAff)(v.value0);
          };
      };
  };
  var __runAPI = function (name) {
      return function (api) {
          return api;
      };
  };
  var __queryAPI = function (name) {
      return function (api) {
          return new QueryAPI(name, __runAPI(name)(api));
      };
  };
  var __commandAPI = function (name) {
      return function (api) {
          return new CommandAPI(__runAPI(name)(api));
      };
  };
  exports["__queryAPI"] = __queryAPI;
  exports["__commandAPI"] = __commandAPI;
  exports["Loading"] = Loading;
  exports["LoadingForServer"] = LoadingForServer;
  exports["Holding"] = Holding;
  exports["Missing"] = Missing;
  exports["zip"] = zip;
  exports["toQueryCallback"] = toQueryCallback;
  exports["callQuery"] = callQuery;
  exports["callCommand"] = callCommand;
  exports["toMaybe"] = toMaybe;
  exports["forRemote"] = forRemote;
  exports["forItem"] = forItem;
  exports["callbackQuery"] = callbackQuery;
  exports["executeCommand"] = executeCommand;
  exports["executeAPI"] = executeAPI;
  exports["callbackAPI"] = callbackAPI;
  exports["mapQueryAPI"] = mapQueryAPI;
  exports["functorRemote"] = functorRemote;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.API"] = $PS["Incentknow.API"] || {};
  var exports = $PS["Incentknow.API"];
  var $foreign = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];                
  var uploadSpaceHeaderImage = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("uploadSpaceHeaderImage")($foreign["__uploadSpaceHeaderImage"](x0));
  };
  var uploadMyIcon = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("uploadMyIcon")($foreign["__uploadMyIcon"](x0));
  };
  var updateFormatStructure = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("updateFormatStructure")($foreign["__updateFormatStructure"](x0)(x1));
      };
  };
  var startMaterialEditing = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("startMaterialEditing")($foreign["__startMaterialEditing"](x0)(x1));
      };
  };
  var startContentEditing = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("startContentEditing")($foreign["__startContentEditing"](x0)(x1));
      };
  };
  var setSpacePublished = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpacePublished")($foreign["__setSpacePublished"](x0)(x1));
      };
  };
  var setSpaceMembershipMethod = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpaceMembershipMethod")($foreign["__setSpaceMembershipMethod"](x0)(x1));
      };
  };
  var setSpaceDisplayName = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpaceDisplayName")($foreign["__setSpaceDisplayName"](x0)(x1));
      };
  };
  var setSpaceDisplayId = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpaceDisplayId")($foreign["__setSpaceDisplayId"](x0)(x1));
      };
  };
  var setSpaceDescription = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpaceDescription")($foreign["__setSpaceDescription"](x0)(x1));
      };
  };
  var setSpaceDefaultAuthority = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setSpaceDefaultAuthority")($foreign["__setSpaceDefaultAuthority"](x0)(x1));
      };
  };
  var setMyPassword = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("setMyPassword")($foreign["__setMyPassword"](x0));
  };
  var setMyEmail = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("setMyEmail")($foreign["__setMyEmail"](x0));
  };
  var setMyDisplayName = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("setMyDisplayName")($foreign["__setMyDisplayName"](x0));
  };
  var setFormatIcon = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setFormatIcon")($foreign["__setFormatIcon"](x0)(x1));
      };
  };
  var setFormatDisplayName = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setFormatDisplayName")($foreign["__setFormatDisplayName"](x0)(x1));
      };
  };
  var setFormatDisplayId = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("setFormatDisplayId")($foreign["__setFormatDisplayId"](x0)(x1));
      };
  };
  var replyToComment = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("replyToComment")($foreign["__replyToComment"](x0)(x1));
      };
  };
  var readAllNotifications = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("readAllNotifications")($foreign["__readAllNotifications"](x0));
  };
  var getUser = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getUser")($foreign["__getUser"](x0));
  };
  var getStructures = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getStructures")($foreign["__getStructures"](x0));
  };
  var getSpaceMembers = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getSpaceMembers")($foreign["__getSpaceMembers"](x0));
  };
  var getSpaceHomePage = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getSpaceHomePage")($foreign["__getSpaceHomePage"](x0));
  };
  var getSpace = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getSpace")($foreign["__getSpace"](x0));
  };
  var getSearchedContentsInContainer = function (x0) {
      return function (x1) {
          return function (x2) {
              return Incentknow_API_Execution["__queryAPI"]("getSearchedContentsInContainer")($foreign["__getSearchedContentsInContainer"](x0)(x1)(x2));
          };
      };
  };
  var getSearchedAllContents = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getSearchedAllContents")($foreign["__getSearchedAllContents"](x0));
  };
  var getRelatedStructure = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getRelatedStructure")($foreign["__getRelatedStructure"](x0));
  };
  var getRelatedSpace = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getRelatedSpace")($foreign["__getRelatedSpace"](x0));
  };
  var getRelatedFormat = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getRelatedFormat")($foreign["__getRelatedFormat"](x0));
  };
  var getRelatedContent = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getRelatedContent")($foreign["__getRelatedContent"](x0));
  };
  var getPublishedSpaces = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getPublishedSpaces")($foreign["__getPublishedSpaces"](x0));
  };
  var getNotifications = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getNotifications")($foreign["__getNotifications"](x0));
  };
  var getNotReadNotificationCount = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getNotReadNotificationCount")($foreign["__getNotReadNotificationCount"](x0));
  };
  var getMySpaces = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getMySpaces")($foreign["__getMySpaces"](x0));
  };
  var getMyMaterialDrafts = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getMyMaterialDrafts")($foreign["__getMyMaterialDrafts"](x0));
  };
  var getMyContentDrafts = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getMyContentDrafts")($foreign["__getMyContentDrafts"](x0));
  };
  var getMyAccount = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getMyAccount")($foreign["__getMyAccount"](x0));
  };
  var getMaterialDraft = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getMaterialDraft")($foreign["__getMaterialDraft"](x0));
  };
  var getFormats = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getFormats")($foreign["__getFormats"](x0));
  };
  var getFormat = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getFormat")($foreign["__getFormat"](x0));
  };
  var getFocusedFormatByStructure = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getFocusedFormatByStructure")($foreign["__getFocusedFormatByStructure"](x0));
  };
  var getFocusedContentsByDisplayId = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__queryAPI"]("getFocusedContentsByDisplayId")($foreign["__getFocusedContentsByDisplayId"](x0)(x1));
      };
  };
  var getContentsByDisplayId = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__queryAPI"]("getContentsByDisplayId")($foreign["__getContentsByDisplayId"](x0)(x1));
      };
  };
  var getContents = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__queryAPI"]("getContents")($foreign["__getContents"](x0)(x1));
      };
  };
  var getContentPage = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getContentPage")($foreign["__getContentPage"](x0));
  };
  var getContentDraft = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getContentDraft")($foreign["__getContentDraft"](x0));
  };
  var getContainers = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getContainers")($foreign["__getContainers"](x0));
  };
  var getCandidateSpaces = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getCandidateSpaces")($foreign["__getCandidateSpaces"](x0));
  };
  var getAvailableSpaceDisplayId = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getAvailableSpaceDisplayId")($foreign["__getAvailableSpaceDisplayId"](x0));
  };
  var getAvailableFormatDisplayId = function (x0) {
      return Incentknow_API_Execution["__queryAPI"]("getAvailableFormatDisplayId")($foreign["__getAvailableFormatDisplayId"](x0));
  };
  var editMaterialDraft = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("editMaterialDraft")($foreign["__editMaterialDraft"](x0)(x1));
      };
  };
  var editContentDraft = function (x0) {
      return function (x1) {
          return function (x2) {
              return Incentknow_API_Execution["__commandAPI"]("editContentDraft")($foreign["__editContentDraft"](x0)(x1)(x2));
          };
      };
  };
  var createUser = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("createUser")($foreign["__createUser"](x0));
  };
  var createSpace = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("createSpace")($foreign["__createSpace"](x0));
  };
  var createNewMaterialDraft = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("createNewMaterialDraft")($foreign["__createNewMaterialDraft"](x0)(x1));
      };
  };
  var createNewContentDraft = function (x0) {
      return function (x1) {
          return function (x2) {
              return Incentknow_API_Execution["__commandAPI"]("createNewContentDraft")($foreign["__createNewContentDraft"](x0)(x1)(x2));
          };
      };
  };
  var createFormat = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("createFormat")($foreign["__createFormat"](x0));
  };
  var commitMaterial = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("commitMaterial")($foreign["__commitMaterial"](x0)(x1));
      };
  };
  var commitContent = function (x0) {
      return function (x1) {
          return function (x2) {
              return Incentknow_API_Execution["__commandAPI"]("commitContent")($foreign["__commitContent"](x0)(x1)(x2));
          };
      };
  };
  var commentContent = function (x0) {
      return function (x1) {
          return Incentknow_API_Execution["__commandAPI"]("commentContent")($foreign["__commentContent"](x0)(x1));
      };
  };
  var cancelMaterialDraft = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("cancelMaterialDraft")($foreign["__cancelMaterialDraft"](x0));
  };
  var cancelContentDraft = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("cancelContentDraft")($foreign["__cancelContentDraft"](x0));
  };
  var authenticate = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("authenticate")($foreign["__authenticate"](x0));
  };
  var applySpaceMembership = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("applySpaceMembership")($foreign["__applySpaceMembership"](x0));
  };
  var activateAccount = function (x0) {
      return Incentknow_API_Execution["__commandAPI"]("activateAccount")($foreign["__activateAccount"](x0));
  };
  exports["getContainers"] = getContainers;
  exports["startContentEditing"] = startContentEditing;
  exports["createNewContentDraft"] = createNewContentDraft;
  exports["editContentDraft"] = editContentDraft;
  exports["commitContent"] = commitContent;
  exports["getContentPage"] = getContentPage;
  exports["getRelatedContent"] = getRelatedContent;
  exports["getContents"] = getContents;
  exports["getContentsByDisplayId"] = getContentsByDisplayId;
  exports["getFocusedContentsByDisplayId"] = getFocusedContentsByDisplayId;
  exports["getMyContentDrafts"] = getMyContentDrafts;
  exports["getContentDraft"] = getContentDraft;
  exports["cancelContentDraft"] = cancelContentDraft;
  exports["getSearchedAllContents"] = getSearchedAllContents;
  exports["getSearchedContentsInContainer"] = getSearchedContentsInContainer;
  exports["createFormat"] = createFormat;
  exports["getFormat"] = getFormat;
  exports["getRelatedFormat"] = getRelatedFormat;
  exports["getFocusedFormatByStructure"] = getFocusedFormatByStructure;
  exports["getRelatedStructure"] = getRelatedStructure;
  exports["getFormats"] = getFormats;
  exports["getStructures"] = getStructures;
  exports["updateFormatStructure"] = updateFormatStructure;
  exports["setFormatDisplayName"] = setFormatDisplayName;
  exports["setFormatDisplayId"] = setFormatDisplayId;
  exports["setFormatIcon"] = setFormatIcon;
  exports["getAvailableFormatDisplayId"] = getAvailableFormatDisplayId;
  exports["startMaterialEditing"] = startMaterialEditing;
  exports["createNewMaterialDraft"] = createNewMaterialDraft;
  exports["editMaterialDraft"] = editMaterialDraft;
  exports["commitMaterial"] = commitMaterial;
  exports["getMyMaterialDrafts"] = getMyMaterialDrafts;
  exports["getMaterialDraft"] = getMaterialDraft;
  exports["cancelMaterialDraft"] = cancelMaterialDraft;
  exports["commentContent"] = commentContent;
  exports["replyToComment"] = replyToComment;
  exports["getNotifications"] = getNotifications;
  exports["getNotReadNotificationCount"] = getNotReadNotificationCount;
  exports["readAllNotifications"] = readAllNotifications;
  exports["createSpace"] = createSpace;
  exports["getSpace"] = getSpace;
  exports["getRelatedSpace"] = getRelatedSpace;
  exports["getSpaceMembers"] = getSpaceMembers;
  exports["getAvailableSpaceDisplayId"] = getAvailableSpaceDisplayId;
  exports["getCandidateSpaces"] = getCandidateSpaces;
  exports["getMySpaces"] = getMySpaces;
  exports["getPublishedSpaces"] = getPublishedSpaces;
  exports["applySpaceMembership"] = applySpaceMembership;
  exports["setSpaceMembershipMethod"] = setSpaceMembershipMethod;
  exports["setSpaceDisplayName"] = setSpaceDisplayName;
  exports["setSpaceDescription"] = setSpaceDescription;
  exports["uploadSpaceHeaderImage"] = uploadSpaceHeaderImage;
  exports["setSpaceDisplayId"] = setSpaceDisplayId;
  exports["setSpacePublished"] = setSpacePublished;
  exports["setSpaceDefaultAuthority"] = setSpaceDefaultAuthority;
  exports["getSpaceHomePage"] = getSpaceHomePage;
  exports["createUser"] = createUser;
  exports["getMyAccount"] = getMyAccount;
  exports["getUser"] = getUser;
  exports["authenticate"] = authenticate;
  exports["activateAccount"] = activateAccount;
  exports["setMyPassword"] = setMyPassword;
  exports["setMyDisplayName"] = setMyDisplayName;
  exports["setMyEmail"] = setMyEmail;
  exports["uploadMyIcon"] = uploadMyIcon;
  exports["apiEndpoint"] = $foreign.apiEndpoint;
  exports["fromJsonToRelatedContent"] = $foreign.fromJsonToRelatedContent;
  exports["fromJsonToRelatedMaterial"] = $foreign.fromJsonToRelatedMaterial;
  exports["fromJsonToFocusedMaterial"] = $foreign.fromJsonToFocusedMaterial;
  exports["fromJsonToFocusedMaterialDraft"] = $foreign.fromJsonToFocusedMaterialDraft;
})(PS);
(function(exports) {
  

  exports.storeSession = async authenticate => {
      const { session, userId } = await authenticate;
      localStorage.setItem("session", session);
      localStorage.setItem("userId", userId);
      return {};
  };

  exports._getMyUserId = () => {
      return localStorage.getItem("userId");
  };

  exports.logout = () => {
      localStorage.removeItem("session");
      localStorage.removeItem("userId");
  }

  exports.reloadPage = () => {
      location.reload(true);
  }

  exports.loadPage = url => {
      return () => {
          window.location.href = url;
      }
  }
})(PS["Incentknow.API.Session"] = PS["Incentknow.API.Session"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.API.Session"] = $PS["Incentknow.API.Session"] || {};
  var exports = $PS["Incentknow.API.Session"];
  var $foreign = $PS["Incentknow.API.Session"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var Incentknow_API = $PS["Incentknow.API"];                
  var getPromise = function (v) {
      return v.value0;
  };
  var login = function (args) {
      return $foreign.storeSession(getPromise(Incentknow_API.authenticate(args)));
  };
  var getMyUserId = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_getMyUserId"]);
  var activate = function (token) {
      return $foreign.storeSession(getPromise(Incentknow_API.activateAccount(token)));
  };
  exports["getMyUserId"] = getMyUserId;
  exports["login"] = login;
  exports["activate"] = activate;
  exports["logout"] = $foreign.logout;
  exports["reloadPage"] = $foreign.reloadPage;
  exports["loadPage"] = $foreign.loadPage;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.API.Static"] = $PS["Incentknow.API.Static"] || {};
  var exports = $PS["Incentknow.API.Static"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Incentknow_API = $PS["Incentknow.API"];                
  var getIconUrl = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Incentknow_API.apiEndpoint + ("/uploaded/" + (v.value0 + ".jpg"));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Incentknow_API.apiEndpoint + "/default_icon.jpg";
      };
      throw new Error("Failed pattern match at Incentknow.API.Static (line 9, column 14 - line 11, column 48): " + [ v.constructor.name ]);
  };
  var getHeaderImageUrl = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Incentknow_API.apiEndpoint + ("/uploaded/" + (v.value0 + ".jpg"));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Incentknow_API.apiEndpoint + "/default_header.jpg";
      };
      throw new Error("Failed pattern match at Incentknow.API.Static (line 19, column 21 - line 21, column 50): " + [ v.constructor.name ]);
  };
  var getFullsizeIconUrl = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Incentknow_API.apiEndpoint + ("/uploaded/" + (v.value0 + ".full.jpg"));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Incentknow_API.apiEndpoint + "/default_icon.full.jpg";
      };
      throw new Error("Failed pattern match at Incentknow.API.Static (line 14, column 22 - line 16, column 53): " + [ v.constructor.name ]);
  };
  var getFullsizeHeaderImageUrl = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return Incentknow_API.apiEndpoint + ("/uploaded/" + (v.value0 + ".full.jpg"));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Incentknow_API.apiEndpoint + "/default_header.full.jpg";
      };
      throw new Error("Failed pattern match at Incentknow.API.Static (line 24, column 29 - line 26, column 55): " + [ v.constructor.name ]);
  };
  exports["getIconUrl"] = getIconUrl;
  exports["getFullsizeIconUrl"] = getFullsizeIconUrl;
  exports["getHeaderImageUrl"] = getHeaderImageUrl;
  exports["getFullsizeHeaderImageUrl"] = getFullsizeHeaderImageUrl;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.Ids"] = $PS["Incentknow.Data.Ids"] || {};
  var exports = $PS["Incentknow.Data.Ids"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var UserDisplayId = function (x) {
      return x;
  };
  var StructureId = function (x) {
      return x;
  };
  var SpaceId = function (x) {
      return x;
  };
  var SpaceDisplayId = function (x) {
      return x;
  };
  var SemanticId = function (x) {
      return x;
  };
  var PropertyId = function (x) {
      return x;
  };
  var MaterialId = function (x) {
      return x;
  };
  var MaterialDraftId = function (x) {
      return x;
  };
  var FormatId = function (x) {
      return x;
  };
  var FormatDisplayId = function (x) {
      return x;
  };
  var DocumentBlockId = function (x) {
      return x;
  };
  var ContentId = function (x) {
      return x;
  };
  var ContentDraftId = function (x) {
      return x;
  };         
  var newtypeUserDisplayId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, UserDisplayId);
  var newtypeStructureId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, StructureId);  
  var newtypeSpaceId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, SpaceId);      
  var newtypeSpaceDisplayId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, SpaceDisplayId);
  var newtypeSemanticId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, SemanticId);
  var newtypePropertyId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, PropertyId);
  var newtypeMaterialId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MaterialId);     
  var newtypeMaterialDraftId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MaterialDraftId);
  var newtypeFormatId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FormatId);
  var newtypeFormatDisplayId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FormatDisplayId);
  var newtypeDocumentBlockId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, DocumentBlockId);
  var newtypeContentId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ContentId);     
  var newtypeContentDraftId = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ContentDraftId);
  var eqUserId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqUserDisplayId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqStructureId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordStructureId = new Data_Ord.Ord(function () {
      return eqStructureId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqSpaceId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordSpaceId = new Data_Ord.Ord(function () {
      return eqSpaceId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqSpaceDisplayId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqSemanticId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqPropertyId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordPropertyId = new Data_Ord.Ord(function () {
      return eqPropertyId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqMetaPropertyId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqMaterialId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var eqMaterialDraftId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordMaterialDraftId = new Data_Ord.Ord(function () {
      return eqMaterialDraftId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqFormatId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordFormatId = new Data_Ord.Ord(function () {
      return eqFormatId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqFormatDisplayId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordFormatDisplayId = new Data_Ord.Ord(function () {
      return eqFormatDisplayId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqDocumentBlockId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordDocumentBlockId = new Data_Ord.Ord(function () {
      return eqDocumentBlockId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqContentId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordContentId = new Data_Ord.Ord(function () {
      return eqContentId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqContentDraftId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordContentDraftId = new Data_Ord.Ord(function () {
      return eqContentDraftId;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordString)(x)(y);
      };
  });
  var eqCommentId = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  exports["ContentId"] = ContentId;
  exports["ContentDraftId"] = ContentDraftId;
  exports["FormatId"] = FormatId;
  exports["FormatDisplayId"] = FormatDisplayId;
  exports["SemanticId"] = SemanticId;
  exports["StructureId"] = StructureId;
  exports["MaterialId"] = MaterialId;
  exports["MaterialDraftId"] = MaterialDraftId;
  exports["SpaceId"] = SpaceId;
  exports["SpaceDisplayId"] = SpaceDisplayId;
  exports["eqContentId"] = eqContentId;
  exports["ordContentId"] = ordContentId;
  exports["newtypeContentId"] = newtypeContentId;
  exports["eqContentDraftId"] = eqContentDraftId;
  exports["ordContentDraftId"] = ordContentDraftId;
  exports["newtypeContentDraftId"] = newtypeContentDraftId;
  exports["eqFormatId"] = eqFormatId;
  exports["ordFormatId"] = ordFormatId;
  exports["newtypeFormatId"] = newtypeFormatId;
  exports["eqFormatDisplayId"] = eqFormatDisplayId;
  exports["ordFormatDisplayId"] = ordFormatDisplayId;
  exports["newtypeFormatDisplayId"] = newtypeFormatDisplayId;
  exports["eqSemanticId"] = eqSemanticId;
  exports["newtypeSemanticId"] = newtypeSemanticId;
  exports["eqMetaPropertyId"] = eqMetaPropertyId;
  exports["eqPropertyId"] = eqPropertyId;
  exports["ordPropertyId"] = ordPropertyId;
  exports["newtypePropertyId"] = newtypePropertyId;
  exports["eqStructureId"] = eqStructureId;
  exports["ordStructureId"] = ordStructureId;
  exports["newtypeStructureId"] = newtypeStructureId;
  exports["eqMaterialId"] = eqMaterialId;
  exports["newtypeMaterialId"] = newtypeMaterialId;
  exports["eqMaterialDraftId"] = eqMaterialDraftId;
  exports["ordMaterialDraftId"] = ordMaterialDraftId;
  exports["newtypeMaterialDraftId"] = newtypeMaterialDraftId;
  exports["eqCommentId"] = eqCommentId;
  exports["eqSpaceId"] = eqSpaceId;
  exports["ordSpaceId"] = ordSpaceId;
  exports["newtypeSpaceId"] = newtypeSpaceId;
  exports["eqSpaceDisplayId"] = eqSpaceDisplayId;
  exports["newtypeSpaceDisplayId"] = newtypeSpaceDisplayId;
  exports["eqUserId"] = eqUserId;
  exports["eqUserDisplayId"] = eqUserDisplayId;
  exports["newtypeUserDisplayId"] = newtypeUserDisplayId;
  exports["eqDocumentBlockId"] = eqDocumentBlockId;
  exports["ordDocumentBlockId"] = ordDocumentBlockId;
  exports["newtypeDocumentBlockId"] = newtypeDocumentBlockId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.Entities"] = $PS["Incentknow.Data.Entities"] || {};
  var exports = $PS["Incentknow.Data.Entities"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];                
  var TypeNameInt = (function () {
      function TypeNameInt() {

      };
      TypeNameInt.value = new TypeNameInt();
      return TypeNameInt;
  })();
  var TypeNameBool = (function () {
      function TypeNameBool() {

      };
      TypeNameBool.value = new TypeNameBool();
      return TypeNameBool;
  })();
  var TypeNameString = (function () {
      function TypeNameString() {

      };
      TypeNameString.value = new TypeNameString();
      return TypeNameString;
  })();
  var TypeNameContent = (function () {
      function TypeNameContent() {

      };
      TypeNameContent.value = new TypeNameContent();
      return TypeNameContent;
  })();
  var TypeNameUrl = (function () {
      function TypeNameUrl() {

      };
      TypeNameUrl.value = new TypeNameUrl();
      return TypeNameUrl;
  })();
  var TypeNameObject = (function () {
      function TypeNameObject() {

      };
      TypeNameObject.value = new TypeNameObject();
      return TypeNameObject;
  })();
  var TypeNameText = (function () {
      function TypeNameText() {

      };
      TypeNameText.value = new TypeNameText();
      return TypeNameText;
  })();
  var TypeNameArray = (function () {
      function TypeNameArray() {

      };
      TypeNameArray.value = new TypeNameArray();
      return TypeNameArray;
  })();
  var TypeNameEnum = (function () {
      function TypeNameEnum() {

      };
      TypeNameEnum.value = new TypeNameEnum();
      return TypeNameEnum;
  })();
  var TypeNameDocument = (function () {
      function TypeNameDocument() {

      };
      TypeNameDocument.value = new TypeNameDocument();
      return TypeNameDocument;
  })();
  var TypeNameImage = (function () {
      function TypeNameImage() {

      };
      TypeNameImage.value = new TypeNameImage();
      return TypeNameImage;
  })();
  var TypeNameEntity = (function () {
      function TypeNameEntity() {

      };
      TypeNameEntity.value = new TypeNameEntity();
      return TypeNameEntity;
  })();
  var SpaceAuthorityNone = (function () {
      function SpaceAuthorityNone() {

      };
      SpaceAuthorityNone.value = new SpaceAuthorityNone();
      return SpaceAuthorityNone;
  })();
  var SpaceAuthorityVisible = (function () {
      function SpaceAuthorityVisible() {

      };
      SpaceAuthorityVisible.value = new SpaceAuthorityVisible();
      return SpaceAuthorityVisible;
  })();
  var SpaceAuthorityReadable = (function () {
      function SpaceAuthorityReadable() {

      };
      SpaceAuthorityReadable.value = new SpaceAuthorityReadable();
      return SpaceAuthorityReadable;
  })();
  var SpaceAuthorityWritable = (function () {
      function SpaceAuthorityWritable() {

      };
      SpaceAuthorityWritable.value = new SpaceAuthorityWritable();
      return SpaceAuthorityWritable;
  })();
  var NotificationTypeContentCommented = (function () {
      function NotificationTypeContentCommented() {

      };
      NotificationTypeContentCommented.value = new NotificationTypeContentCommented();
      return NotificationTypeContentCommented;
  })();
  var NotificationTypeCommentReplied = (function () {
      function NotificationTypeCommentReplied() {

      };
      NotificationTypeCommentReplied.value = new NotificationTypeCommentReplied();
      return NotificationTypeCommentReplied;
  })();
  var ValueRelatively = (function () {
      function ValueRelatively() {

      };
      ValueRelatively.value = new ValueRelatively();
      return ValueRelatively;
  })();
  var MutualExclutively = (function () {
      function MutualExclutively() {

      };
      MutualExclutively.value = new MutualExclutively();
      return MutualExclutively;
  })();
  var SeriesDependency = (function () {
      function SeriesDependency() {

      };
      SeriesDependency.value = new SeriesDependency();
      return SeriesDependency;
  })();
  var MembershipMethodNone = (function () {
      function MembershipMethodNone() {

      };
      MembershipMethodNone.value = new MembershipMethodNone();
      return MembershipMethodNone;
  })();
  var MembershipMethodApp = (function () {
      function MembershipMethodApp() {

      };
      MembershipMethodApp.value = new MembershipMethodApp();
      return MembershipMethodApp;
  })();
  var MemberTypeNormal = (function () {
      function MemberTypeNormal() {

      };
      MemberTypeNormal.value = new MemberTypeNormal();
      return MemberTypeNormal;
  })();
  var MemberTypeOwner = (function () {
      function MemberTypeOwner() {

      };
      MemberTypeOwner.value = new MemberTypeOwner();
      return MemberTypeOwner;
  })();
  var MaterialTypePlaintext = (function () {
      function MaterialTypePlaintext() {

      };
      MaterialTypePlaintext.value = new MaterialTypePlaintext();
      return MaterialTypePlaintext;
  })();
  var MaterialTypeDocument = (function () {
      function MaterialTypeDocument() {

      };
      MaterialTypeDocument.value = new MaterialTypeDocument();
      return MaterialTypeDocument;
  })();
  var Python = (function () {
      function Python() {

      };
      Python.value = new Python();
      return Python;
  })();
  var Javascript = (function () {
      function Javascript() {

      };
      Javascript.value = new Javascript();
      return Javascript;
  })();
  var Internal = (function () {
      function Internal() {

      };
      Internal.value = new Internal();
      return Internal;
  })();
  var External = (function () {
      function External() {

      };
      External.value = new External();
      return External;
  })();
  var IntType = (function () {
      function IntType() {

      };
      IntType.value = new IntType();
      return IntType;
  })();
  var BoolType = (function () {
      function BoolType() {

      };
      BoolType.value = new BoolType();
      return BoolType;
  })();
  var StringType = (function () {
      function StringType() {

      };
      StringType.value = new StringType();
      return StringType;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var UrlType = (function () {
      function UrlType() {

      };
      UrlType.value = new UrlType();
      return UrlType;
  })();
  var ObjectType = (function () {
      function ObjectType(value0) {
          this.value0 = value0;
      };
      ObjectType.create = function (value0) {
          return new ObjectType(value0);
      };
      return ObjectType;
  })();
  var TextType = (function () {
      function TextType() {

      };
      TextType.value = new TextType();
      return TextType;
  })();
  var ArrayType = (function () {
      function ArrayType(value0) {
          this.value0 = value0;
      };
      ArrayType.create = function (value0) {
          return new ArrayType(value0);
      };
      return ArrayType;
  })();
  var EnumType = (function () {
      function EnumType(value0) {
          this.value0 = value0;
      };
      EnumType.create = function (value0) {
          return new EnumType(value0);
      };
      return EnumType;
  })();
  var DocumentType = (function () {
      function DocumentType() {

      };
      DocumentType.value = new DocumentType();
      return DocumentType;
  })();
  var ImageType = (function () {
      function ImageType() {

      };
      ImageType.value = new ImageType();
      return ImageType;
  })();
  var EntityType = (function () {
      function EntityType(value0) {
          this.value0 = value0;
      };
      EntityType.create = function (value0) {
          return new EntityType(value0);
      };
      return EntityType;
  })();
  var Paragraph = (function () {
      function Paragraph() {

      };
      Paragraph.value = new Paragraph();
      return Paragraph;
  })();
  var Header = (function () {
      function Header() {

      };
      Header.value = new Header();
      return Header;
  })();
  var ParagraphBlockData = (function () {
      function ParagraphBlockData(value0) {
          this.value0 = value0;
      };
      ParagraphBlockData.create = function (value0) {
          return new ParagraphBlockData(value0);
      };
      return ParagraphBlockData;
  })();
  var HeaderBlockData = (function () {
      function HeaderBlockData(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HeaderBlockData.create = function (value0) {
          return function (value1) {
              return new HeaderBlockData(value0, value1);
          };
      };
      return HeaderBlockData;
  })();
  var PlaintextMaterialData = (function () {
      function PlaintextMaterialData(value0) {
          this.value0 = value0;
      };
      PlaintextMaterialData.create = function (value0) {
          return new PlaintextMaterialData(value0);
      };
      return PlaintextMaterialData;
  })();
  var DocumentMaterialData = (function () {
      function DocumentMaterialData(value0) {
          this.value0 = value0;
      };
      DocumentMaterialData.create = function (value0) {
          return new DocumentMaterialData(value0);
      };
      return DocumentMaterialData;
  })();
  var AuthorityNone = (function () {
      function AuthorityNone() {

      };
      AuthorityNone.value = new AuthorityNone();
      return AuthorityNone;
  })();
  var AuthorityReadable = (function () {
      function AuthorityReadable() {

      };
      AuthorityReadable.value = new AuthorityReadable();
      return AuthorityReadable;
  })();
  var AuthorityWritable = (function () {
      function AuthorityWritable() {

      };
      AuthorityWritable.value = new AuthorityWritable();
      return AuthorityWritable;
  })();
  var ContentCommentedNotificationAction = (function () {
      function ContentCommentedNotificationAction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContentCommentedNotificationAction.create = function (value0) {
          return function (value1) {
              return new ContentCommentedNotificationAction(value0, value1);
          };
      };
      return ContentCommentedNotificationAction;
  })();
  var CommentRepliedNotificationAction = (function () {
      function CommentRepliedNotificationAction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CommentRepliedNotificationAction.create = function (value0) {
          return function (value1) {
              return new CommentRepliedNotificationAction(value0, value1);
          };
      };
      return CommentRepliedNotificationAction;
  })();
  var ContentCreatedActivityAction = (function () {
      function ContentCreatedActivityAction(value0) {
          this.value0 = value0;
      };
      ContentCreatedActivityAction.create = function (value0) {
          return new ContentCreatedActivityAction(value0);
      };
      return ContentCreatedActivityAction;
  })();
  var ContentUpdatedActivityAction = (function () {
      function ContentUpdatedActivityAction(value0) {
          this.value0 = value0;
      };
      ContentUpdatedActivityAction.create = function (value0) {
          return new ContentUpdatedActivityAction(value0);
      };
      return ContentUpdatedActivityAction;
  })();
  var ContentCommentedActivityAction = (function () {
      function ContentCommentedActivityAction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContentCommentedActivityAction.create = function (value0) {
          return function (value1) {
              return new ContentCommentedActivityAction(value0, value1);
          };
      };
      return ContentCommentedActivityAction;
  })();
  var eqTypeName = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof TypeNameInt && y instanceof TypeNameInt) {
              return true;
          };
          if (x instanceof TypeNameBool && y instanceof TypeNameBool) {
              return true;
          };
          if (x instanceof TypeNameString && y instanceof TypeNameString) {
              return true;
          };
          if (x instanceof TypeNameContent && y instanceof TypeNameContent) {
              return true;
          };
          if (x instanceof TypeNameUrl && y instanceof TypeNameUrl) {
              return true;
          };
          if (x instanceof TypeNameObject && y instanceof TypeNameObject) {
              return true;
          };
          if (x instanceof TypeNameText && y instanceof TypeNameText) {
              return true;
          };
          if (x instanceof TypeNameArray && y instanceof TypeNameArray) {
              return true;
          };
          if (x instanceof TypeNameEnum && y instanceof TypeNameEnum) {
              return true;
          };
          if (x instanceof TypeNameDocument && y instanceof TypeNameDocument) {
              return true;
          };
          if (x instanceof TypeNameImage && y instanceof TypeNameImage) {
              return true;
          };
          if (x instanceof TypeNameEntity && y instanceof TypeNameEntity) {
              return true;
          };
          return false;
      };
  });
  var ordTypeName = new Data_Ord.Ord(function () {
      return eqTypeName;
  }, function (x) {
      return function (y) {
          if (x instanceof TypeNameInt && y instanceof TypeNameInt) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameInt) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameInt) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameBool && y instanceof TypeNameBool) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameBool) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameBool) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameString && y instanceof TypeNameString) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameString) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameString) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameContent && y instanceof TypeNameContent) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameContent) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameContent) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameUrl && y instanceof TypeNameUrl) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameUrl) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameUrl) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameObject && y instanceof TypeNameObject) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameObject) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameObject) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameText && y instanceof TypeNameText) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameText) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameText) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameArray && y instanceof TypeNameArray) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameArray) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameArray) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameEnum && y instanceof TypeNameEnum) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameEnum) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameEnum) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameDocument && y instanceof TypeNameDocument) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameDocument) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameDocument) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameImage && y instanceof TypeNameImage) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TypeNameImage) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TypeNameImage) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TypeNameEntity && y instanceof TypeNameEntity) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Incentknow.Data.Entities (line 70, column 1 - line 70, column 44): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqSpaceAuthority = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof SpaceAuthorityNone && y instanceof SpaceAuthorityNone) {
              return true;
          };
          if (x instanceof SpaceAuthorityVisible && y instanceof SpaceAuthorityVisible) {
              return true;
          };
          if (x instanceof SpaceAuthorityReadable && y instanceof SpaceAuthorityReadable) {
              return true;
          };
          if (x instanceof SpaceAuthorityWritable && y instanceof SpaceAuthorityWritable) {
              return true;
          };
          return false;
      };
  });
  var ordSpaceAuthority = new Data_Ord.Ord(function () {
      return eqSpaceAuthority;
  }, function (x) {
      return function (y) {
          if (x instanceof SpaceAuthorityNone && y instanceof SpaceAuthorityNone) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SpaceAuthorityNone) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SpaceAuthorityNone) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SpaceAuthorityVisible && y instanceof SpaceAuthorityVisible) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SpaceAuthorityVisible) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SpaceAuthorityVisible) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SpaceAuthorityReadable && y instanceof SpaceAuthorityReadable) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SpaceAuthorityReadable) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SpaceAuthorityReadable) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SpaceAuthorityWritable && y instanceof SpaceAuthorityWritable) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Incentknow.Data.Entities (line 173, column 1 - line 173, column 56): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqNotificationType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NotificationTypeContentCommented && y instanceof NotificationTypeContentCommented) {
              return true;
          };
          if (x instanceof NotificationTypeCommentReplied && y instanceof NotificationTypeCommentReplied) {
              return true;
          };
          return false;
      };
  });
  var eqMetaPropertyType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ValueRelatively && y instanceof ValueRelatively) {
              return true;
          };
          if (x instanceof MutualExclutively && y instanceof MutualExclutively) {
              return true;
          };
          if (x instanceof SeriesDependency && y instanceof SeriesDependency) {
              return true;
          };
          return false;
      };
  });
  var eqMembershipMethod = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof MembershipMethodNone && y instanceof MembershipMethodNone) {
              return true;
          };
          if (x instanceof MembershipMethodApp && y instanceof MembershipMethodApp) {
              return true;
          };
          return false;
      };
  });
  var ordMembershipMethod = new Data_Ord.Ord(function () {
      return eqMembershipMethod;
  }, function (x) {
      return function (y) {
          if (x instanceof MembershipMethodNone && y instanceof MembershipMethodNone) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MembershipMethodNone) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MembershipMethodNone) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MembershipMethodApp && y instanceof MembershipMethodApp) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Incentknow.Data.Entities (line 162, column 1 - line 162, column 60): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqMaterialType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof MaterialTypePlaintext && y instanceof MaterialTypePlaintext) {
              return true;
          };
          if (x instanceof MaterialTypeDocument && y instanceof MaterialTypeDocument) {
              return true;
          };
          return false;
      };
  });
  var eqFormatUsage = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Internal && y instanceof Internal) {
              return true;
          };
          if (x instanceof External && y instanceof External) {
              return true;
          };
          return false;
      };
  });
  var eqType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof IntType && y instanceof IntType) {
              return true;
          };
          if (x instanceof BoolType && y instanceof BoolType) {
              return true;
          };
          if (x instanceof StringType && y instanceof StringType) {
              return true;
          };
          if (x instanceof ContentType && y instanceof ContentType) {
              return x.value0.createdAt === y.value0.createdAt && (x.value0.creatorUser.createdAt === y.value0.creatorUser.createdAt && Data_Eq.eq(Incentknow_Data_Ids.eqUserDisplayId)(x.value0.creatorUser.displayId)(y.value0.creatorUser.displayId) && x.value0.creatorUser.displayName === y.value0.creatorUser.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.creatorUser.iconImage)(y.value0.creatorUser.iconImage) && Data_Eq.eq(Incentknow_Data_Ids.eqUserId)(x.value0.creatorUser.userId)(y.value0.creatorUser.userId)) && (x.value0.currentStructure.createdAt === y.value0.currentStructure.createdAt && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqType))()(new Data_Symbol.IsSymbol(function () {
                  return "semantic";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "optional";
              }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                  return "metaProperties";
              }))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqMetaPropertyType))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqMetaPropertyId)))))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqPropertyId))()(new Data_Symbol.IsSymbol(function () {
                  return "icon";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "fieldName";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))))(x.value0.currentStructure.properties)(y.value0.currentStructure.properties) && Data_Eq.eq(Incentknow_Data_Ids.eqStructureId)(x.value0.currentStructure.structureId)(y.value0.currentStructure.structureId) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.currentStructure.title)(y.value0.currentStructure.title) && x.value0.currentStructure.version === y.value0.currentStructure.version) && x.value0.description === y.value0.description && Data_Eq.eq(Incentknow_Data_Ids.eqFormatDisplayId)(x.value0.displayId)(y.value0.displayId) && x.value0.displayName === y.value0.displayName && Data_Eq.eq(Incentknow_Data_Ids.eqFormatId)(x.value0.formatId)(y.value0.formatId) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.icon)(y.value0.icon) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.semanticId)(y.value0.semanticId) && (x.value0.space.createdAt === y.value0.space.createdAt && Data_Eq.eq(eqSpaceAuthority)(x.value0.space.defaultAuthority)(y.value0.space.defaultAuthority) && x.value0.space.description === y.value0.space.description && Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0.space.displayId)(y.value0.space.displayId) && x.value0.space.displayName === y.value0.space.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.space.headerImage)(y.value0.space.headerImage) && Data_Eq.eq(eqMembershipMethod)(x.value0.space.membershipMethod)(y.value0.space.membershipMethod) && x.value0.space.published === y.value0.space.published && Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0.space.spaceId)(y.value0.space.spaceId)) && x.value0.updatedAt === y.value0.updatedAt && (x.value0.updaterUser.createdAt === y.value0.updaterUser.createdAt && Data_Eq.eq(Incentknow_Data_Ids.eqUserDisplayId)(x.value0.updaterUser.displayId)(y.value0.updaterUser.displayId) && x.value0.updaterUser.displayName === y.value0.updaterUser.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.updaterUser.iconImage)(y.value0.updaterUser.iconImage) && Data_Eq.eq(Incentknow_Data_Ids.eqUserId)(x.value0.updaterUser.userId)(y.value0.updaterUser.userId)) && Data_Eq.eq(eqFormatUsage)(x.value0.usage)(y.value0.usage);
          };
          if (x instanceof UrlType && y instanceof UrlType) {
              return true;
          };
          if (x instanceof ObjectType && y instanceof ObjectType) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqType))()(new Data_Symbol.IsSymbol(function () {
                  return "semantic";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "optional";
              }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                  return "metaProperties";
              }))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqMetaPropertyType))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqMetaPropertyId)))))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqPropertyId))()(new Data_Symbol.IsSymbol(function () {
                  return "icon";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "fieldName";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))))(x.value0)(y.value0);
          };
          if (x instanceof TextType && y instanceof TextType) {
              return true;
          };
          if (x instanceof ArrayType && y instanceof ArrayType) {
              return Data_Eq.eq(eqType)(x.value0)(y.value0);
          };
          if (x instanceof EnumType && y instanceof EnumType) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "fieldName";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))))(x.value0)(y.value0);
          };
          if (x instanceof DocumentType && y instanceof DocumentType) {
              return true;
          };
          if (x instanceof ImageType && y instanceof ImageType) {
              return true;
          };
          if (x instanceof EntityType && y instanceof EntityType) {
              return x.value0.createdAt === y.value0.createdAt && (x.value0.creatorUser.createdAt === y.value0.creatorUser.createdAt && Data_Eq.eq(Incentknow_Data_Ids.eqUserDisplayId)(x.value0.creatorUser.displayId)(y.value0.creatorUser.displayId) && x.value0.creatorUser.displayName === y.value0.creatorUser.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.creatorUser.iconImage)(y.value0.creatorUser.iconImage) && Data_Eq.eq(Incentknow_Data_Ids.eqUserId)(x.value0.creatorUser.userId)(y.value0.creatorUser.userId)) && (x.value0.currentStructure.createdAt === y.value0.currentStructure.createdAt && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqType))()(new Data_Symbol.IsSymbol(function () {
                  return "semantic";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "optional";
              }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                  return "metaProperties";
              }))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(eqMetaPropertyType))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqMetaPropertyId)))))()(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))(Incentknow_Data_Ids.eqPropertyId))()(new Data_Symbol.IsSymbol(function () {
                  return "icon";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "fieldName";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))))(x.value0.currentStructure.properties)(y.value0.currentStructure.properties) && Data_Eq.eq(Incentknow_Data_Ids.eqStructureId)(x.value0.currentStructure.structureId)(y.value0.currentStructure.structureId) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.currentStructure.title)(y.value0.currentStructure.title) && x.value0.currentStructure.version === y.value0.currentStructure.version) && x.value0.description === y.value0.description && Data_Eq.eq(Incentknow_Data_Ids.eqFormatDisplayId)(x.value0.displayId)(y.value0.displayId) && x.value0.displayName === y.value0.displayName && Data_Eq.eq(Incentknow_Data_Ids.eqFormatId)(x.value0.formatId)(y.value0.formatId) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.icon)(y.value0.icon) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.semanticId)(y.value0.semanticId) && (x.value0.space.createdAt === y.value0.space.createdAt && Data_Eq.eq(eqSpaceAuthority)(x.value0.space.defaultAuthority)(y.value0.space.defaultAuthority) && x.value0.space.description === y.value0.space.description && Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0.space.displayId)(y.value0.space.displayId) && x.value0.space.displayName === y.value0.space.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.space.headerImage)(y.value0.space.headerImage) && Data_Eq.eq(eqMembershipMethod)(x.value0.space.membershipMethod)(y.value0.space.membershipMethod) && x.value0.space.published === y.value0.space.published && Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0.space.spaceId)(y.value0.space.spaceId)) && x.value0.updatedAt === y.value0.updatedAt && (x.value0.updaterUser.createdAt === y.value0.updaterUser.createdAt && Data_Eq.eq(Incentknow_Data_Ids.eqUserDisplayId)(x.value0.updaterUser.displayId)(y.value0.updaterUser.displayId) && x.value0.updaterUser.displayName === y.value0.updaterUser.displayName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.updaterUser.iconImage)(y.value0.updaterUser.iconImage) && Data_Eq.eq(Incentknow_Data_Ids.eqUserId)(x.value0.updaterUser.userId)(y.value0.updaterUser.userId)) && Data_Eq.eq(eqFormatUsage)(x.value0.usage)(y.value0.usage);
          };
          return false;
      };
  });
  var ordFormatUsage = new Data_Ord.Ord(function () {
      return eqFormatUsage;
  }, function (x) {
      return function (y) {
          if (x instanceof Internal && y instanceof Internal) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Internal) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Internal) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof External && y instanceof External) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Incentknow.Data.Entities (line 41, column 1 - line 41, column 50): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqBlockData = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ParagraphBlockData && y instanceof ParagraphBlockData) {
              return x.value0 === y.value0;
          };
          if (x instanceof HeaderBlockData && y instanceof HeaderBlockData) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          return false;
      };
  });
  var eqAuthority = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof AuthorityNone && y instanceof AuthorityNone) {
              return true;
          };
          if (x instanceof AuthorityReadable && y instanceof AuthorityReadable) {
              return true;
          };
          if (x instanceof AuthorityWritable && y instanceof AuthorityWritable) {
              return true;
          };
          return false;
      };
  });
  exports["Internal"] = Internal;
  exports["External"] = External;
  exports["TypeNameInt"] = TypeNameInt;
  exports["TypeNameBool"] = TypeNameBool;
  exports["TypeNameString"] = TypeNameString;
  exports["TypeNameContent"] = TypeNameContent;
  exports["TypeNameUrl"] = TypeNameUrl;
  exports["TypeNameObject"] = TypeNameObject;
  exports["TypeNameText"] = TypeNameText;
  exports["TypeNameArray"] = TypeNameArray;
  exports["TypeNameEnum"] = TypeNameEnum;
  exports["TypeNameDocument"] = TypeNameDocument;
  exports["TypeNameImage"] = TypeNameImage;
  exports["TypeNameEntity"] = TypeNameEntity;
  exports["Python"] = Python;
  exports["Javascript"] = Javascript;
  exports["MaterialTypePlaintext"] = MaterialTypePlaintext;
  exports["MaterialTypeDocument"] = MaterialTypeDocument;
  exports["NotificationTypeContentCommented"] = NotificationTypeContentCommented;
  exports["NotificationTypeCommentReplied"] = NotificationTypeCommentReplied;
  exports["MembershipMethodNone"] = MembershipMethodNone;
  exports["MembershipMethodApp"] = MembershipMethodApp;
  exports["SpaceAuthorityNone"] = SpaceAuthorityNone;
  exports["SpaceAuthorityVisible"] = SpaceAuthorityVisible;
  exports["SpaceAuthorityReadable"] = SpaceAuthorityReadable;
  exports["SpaceAuthorityWritable"] = SpaceAuthorityWritable;
  exports["MemberTypeNormal"] = MemberTypeNormal;
  exports["MemberTypeOwner"] = MemberTypeOwner;
  exports["AuthorityWritable"] = AuthorityWritable;
  exports["IntType"] = IntType;
  exports["BoolType"] = BoolType;
  exports["StringType"] = StringType;
  exports["ContentType"] = ContentType;
  exports["UrlType"] = UrlType;
  exports["ObjectType"] = ObjectType;
  exports["TextType"] = TextType;
  exports["ArrayType"] = ArrayType;
  exports["EnumType"] = EnumType;
  exports["DocumentType"] = DocumentType;
  exports["ImageType"] = ImageType;
  exports["EntityType"] = EntityType;
  exports["Paragraph"] = Paragraph;
  exports["Header"] = Header;
  exports["ParagraphBlockData"] = ParagraphBlockData;
  exports["HeaderBlockData"] = HeaderBlockData;
  exports["PlaintextMaterialData"] = PlaintextMaterialData;
  exports["DocumentMaterialData"] = DocumentMaterialData;
  exports["ContentCreatedActivityAction"] = ContentCreatedActivityAction;
  exports["ContentUpdatedActivityAction"] = ContentUpdatedActivityAction;
  exports["ContentCommentedActivityAction"] = ContentCommentedActivityAction;
  exports["ContentCommentedNotificationAction"] = ContentCommentedNotificationAction;
  exports["CommentRepliedNotificationAction"] = CommentRepliedNotificationAction;
  exports["eqFormatUsage"] = eqFormatUsage;
  exports["ordFormatUsage"] = ordFormatUsage;
  exports["eqTypeName"] = eqTypeName;
  exports["ordTypeName"] = ordTypeName;
  exports["eqMaterialType"] = eqMaterialType;
  exports["eqNotificationType"] = eqNotificationType;
  exports["eqMembershipMethod"] = eqMembershipMethod;
  exports["ordMembershipMethod"] = ordMembershipMethod;
  exports["eqSpaceAuthority"] = eqSpaceAuthority;
  exports["ordSpaceAuthority"] = ordSpaceAuthority;
  exports["eqAuthority"] = eqAuthority;
  exports["eqType"] = eqType;
  exports["eqBlockData"] = eqBlockData;
})(PS);
(function(exports) {
  
  const Data_Maybe = PS["Data.Maybe"]; 
  const E = PS["Incentknow.Data.Entities"] || {};
  PS["Incentknow.Data.Entities"] = E;

  exports.getTypeName = src => {if (src instanceof E.IntType) {
                      return E.TypeNameInt.value;

                  }if (src instanceof E.BoolType) {
                      return E.TypeNameBool.value;

                  }if (src instanceof E.StringType) {
                      return E.TypeNameString.value;

                  }if (src instanceof E.ContentType) {
                      return E.TypeNameContent.value;

                  }if (src instanceof E.UrlType) {
                      return E.TypeNameUrl.value;

                  }if (src instanceof E.ObjectType) {
                      return E.TypeNameObject.value;

                  }if (src instanceof E.TextType) {
                      return E.TypeNameText.value;

                  }if (src instanceof E.ArrayType) {
                      return E.TypeNameArray.value;

                  }if (src instanceof E.EnumType) {
                      return E.TypeNameEnum.value;

                  }if (src instanceof E.DocumentType) {
                      return E.TypeNameDocument.value;

                  }if (src instanceof E.ImageType) {
                      return E.TypeNameImage.value;

                  }if (src instanceof E.EntityType) {
                      return E.TypeNameEntity.value;

                  }};exports.buildType = name => { return options => { if (name instanceof E.TypeNameInt) {
                      const result = new E.IntType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameBool) {
                      const result = new E.BoolType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameString) {
                      const result = new E.StringType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameContent) {if (options.format instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.ContentType(options.format.value0);
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameUrl) {
                      const result = new E.UrlType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameObject) {if (options.properties instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.ObjectType(options.properties);
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameText) {
                      const result = new E.TextType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameArray) {if (options.subType instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.ArrayType(options.subType.value0);
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameEnum) {if (options.enumerators instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.EnumType(options.enumerators);
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameDocument) {
                      const result = new E.DocumentType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameImage) {
                      const result = new E.ImageType();
                      return new Data_Maybe.Just(result);
                  } if (name instanceof E.TypeNameEntity) {if (options.format instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.EntityType(options.format.value0);
                      return new Data_Maybe.Just(result);
                  }}};exports.getTypeOptions = src => {
                      if (src instanceof E.IntType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.BoolType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.StringType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.ContentType) {
                          return {
                              format: new Data_Maybe.Just(src.value0),subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.UrlType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.ObjectType) {
                          return {
                              properties: new Data_Maybe.Just(src.value0),format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.TextType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.ArrayType) {
                          return {
                              subType: new Data_Maybe.Just(src.value0),format: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.EnumType) {
                          return {
                              enumerators: new Data_Maybe.Just(src.value0),format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.DocumentType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.ImageType) {
                          return {
                              format: Data_Maybe.Nothing.value,subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.EntityType) {
                          return {
                              format: new Data_Maybe.Just(src.value0),subType: Data_Maybe.Nothing.value,language: Data_Maybe.Nothing.value,properties: Data_Maybe.Nothing.value,enumerators: Data_Maybe.Nothing.value
                          }
                      }
                      };

  exports.getBlockType = src => {if (src instanceof E.ParagraphBlockData) {
                      return E.Paragraph.value;

                  }if (src instanceof E.HeaderBlockData) {
                      return E.Header.value;

                  }};exports.buildBlockData = type => { return options => { if (type instanceof E.Paragraph) {if (options.text instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.ParagraphBlockData(options.text.value0);
                      return new Data_Maybe.Just(result);
                  } if (type instanceof E.Header) {if (options.level instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }if (options.text instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                      }
                      const result = new E.HeaderBlockData(options.level.value0,options.text.value0);
                      return new Data_Maybe.Just(result);
                  }}};exports.getBlockDataOptions = src => {
                      if (src instanceof E.ParagraphBlockData) {
                          return {
                              text: new Data_Maybe.Just(src.value0),level: Data_Maybe.Nothing.value
                          }
                      }
                    
                      if (src instanceof E.HeaderBlockData) {
                          return {
                              level: new Data_Maybe.Just(src.value0),text: new Data_Maybe.Just(src.value1)
                          }
                      }
                      };

  exports.getNotificationType = src => {if (src instanceof E.ContentCommentedNotificationAction) {
                      return E.NotificationTypeContentCommented.value;

                  }if (src instanceof E.CommentRepliedNotificationAction) {
                      return E.NotificationTypeCommentReplied.value;

                  }};
})(PS["Incentknow.Data.EntityUtils"] = PS["Incentknow.Data.EntityUtils"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.EntityUtils"] = $PS["Incentknow.Data.EntityUtils"] || {};
  var exports = $PS["Incentknow.Data.EntityUtils"];
  var $foreign = $PS["Incentknow.Data.EntityUtils"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var defaultTypeOptions = {
      format: Data_Maybe.Nothing.value,
      subType: Data_Maybe.Nothing.value,
      language: Data_Maybe.Nothing.value,
      properties: Data_Maybe.Nothing.value,
      enumerators: Data_Maybe.Nothing.value
  };
  var defaultBlockDataOptions = {
      level: Data_Maybe.Nothing.value,
      text: Data_Maybe.Nothing.value
  };
  exports["defaultTypeOptions"] = defaultTypeOptions;
  exports["defaultBlockDataOptions"] = defaultBlockDataOptions;
  exports["buildType"] = $foreign.buildType;
  exports["getTypeName"] = $foreign.getTypeName;
  exports["getTypeOptions"] = $foreign.getTypeOptions;
  exports["buildBlockData"] = $foreign.buildBlockData;
  exports["getBlockType"] = $foreign.getBlockType;
  exports["getBlockDataOptions"] = $foreign.getBlockDataOptions;
  exports["getNotificationType"] = $foreign.getNotificationType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Match.Error"] = $PS["Routing.Match.Error"] || {};
  var exports = $PS["Routing.Match.Error"];
  var UnexpectedPath = (function () {
      function UnexpectedPath(value0) {
          this.value0 = value0;
      };
      UnexpectedPath.create = function (value0) {
          return new UnexpectedPath(value0);
      };
      return UnexpectedPath;
  })();
  var ExpectedBoolean = (function () {
      function ExpectedBoolean() {

      };
      ExpectedBoolean.value = new ExpectedBoolean();
      return ExpectedBoolean;
  })();
  var ExpectedEnd = (function () {
      function ExpectedEnd() {

      };
      ExpectedEnd.value = new ExpectedEnd();
      return ExpectedEnd;
  })();
  var ExpectedNumber = (function () {
      function ExpectedNumber() {

      };
      ExpectedNumber.value = new ExpectedNumber();
      return ExpectedNumber;
  })();
  var ExpectedInt = (function () {
      function ExpectedInt() {

      };
      ExpectedInt.value = new ExpectedInt();
      return ExpectedInt;
  })();
  var ExpectedString = (function () {
      function ExpectedString() {

      };
      ExpectedString.value = new ExpectedString();
      return ExpectedString;
  })();
  var ExpectedQuery = (function () {
      function ExpectedQuery() {

      };
      ExpectedQuery.value = new ExpectedQuery();
      return ExpectedQuery;
  })();
  var ExpectedPathPart = (function () {
      function ExpectedPathPart() {

      };
      ExpectedPathPart.value = new ExpectedPathPart();
      return ExpectedPathPart;
  })();
  var KeyNotFound = (function () {
      function KeyNotFound(value0) {
          this.value0 = value0;
      };
      KeyNotFound.create = function (value0) {
          return new KeyNotFound(value0);
      };
      return KeyNotFound;
  })();
  var Fail = (function () {
      function Fail(value0) {
          this.value0 = value0;
      };
      Fail.create = function (value0) {
          return new Fail(value0);
      };
      return Fail;
  })();
  var showMatchError = function (err) {
      if (err instanceof UnexpectedPath) {
          return "expected path part: " + err.value0;
      };
      if (err instanceof KeyNotFound) {
          return "key: " + (err.value0 + " has not found in query part");
      };
      if (err instanceof ExpectedQuery) {
          return "expected query - found path";
      };
      if (err instanceof ExpectedNumber) {
          return "expected number";
      };
      if (err instanceof ExpectedInt) {
          return "expected int";
      };
      if (err instanceof ExpectedBoolean) {
          return "expected boolean";
      };
      if (err instanceof ExpectedEnd) {
          return "expected end";
      };
      if (err instanceof ExpectedString) {
          return "expected string var";
      };
      if (err instanceof ExpectedPathPart) {
          return "expected path part, found query";
      };
      if (err instanceof Fail) {
          return "match error: " + err.value0;
      };
      throw new Error("Failed pattern match at Routing.Match.Error (line 29, column 3 - line 39, column 39): " + [ err.constructor.name ]);
  };
  exports["UnexpectedPath"] = UnexpectedPath;
  exports["ExpectedEnd"] = ExpectedEnd;
  exports["ExpectedInt"] = ExpectedInt;
  exports["ExpectedString"] = ExpectedString;
  exports["ExpectedPathPart"] = ExpectedPathPart;
  exports["showMatchError"] = showMatchError;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Types"] = $PS["Routing.Types"] || {};
  var exports = $PS["Routing.Types"];                      
  var Path = (function () {
      function Path(value0) {
          this.value0 = value0;
      };
      Path.create = function (value0) {
          return new Path(value0);
      };
      return Path;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();
  exports["Path"] = Path;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Match"] = $PS["Routing.Match"] || {};
  var exports = $PS["Routing.Match"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Semiring_Free = $PS["Data.Semiring.Free"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Validation_Semiring = $PS["Data.Validation.Semiring"];
  var Routing_Match_Error = $PS["Routing.Match.Error"];
  var Routing_Types = $PS["Routing.Types"];                
  var Match = function (x) {
      return x;
  };
  var str = function (route) {
      if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
      };
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedString.value));
  };
  var runMatch = function (v) {
      return function (route) {
          var foldErrors = function (errs) {
              return Data_Either.Left.create(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                  return function (a) {
                      return a + ("\x0a" + b);
                  };
              })("")(Control_Bind.bind(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(Data_List.reverse)(Data_Newtype.unwrap(Data_Semiring_Free.newtypeFree)(errs)))(function (es) {
                  return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                      return function (a) {
                          return a + (";" + b);
                      };
                  })("")(Data_Functor.map(Data_List_Types.functorList)(Routing_Match_Error.showMatchError)(es)));
              })));
          };
          return Data_Validation_Semiring.unV(foldErrors)(function ($90) {
              return Data_Either.Right.create(Data_Tuple.snd($90));
          })(v(route));
      };
  };        
  var matchFunctor = new Data_Functor.Functor(function (fn) {
      return function (v) {
          return Match(function (r) {
              return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v1) {
                  return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, fn(v1.value1)));
              })(v(r));
          });
      };
  });
  var matchApply = new Control_Apply.Apply(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          var processFnRes = function (v2) {
              return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v3) {
                  return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v3.value0, v2.value1(v3.value1)));
              })(v1(v2.value0));
          };
          var processFnErr = function (r) {
              return function (err) {
                  return Data_Validation_Semiring.invalid(Data_Semiring.mul(Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.unV(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Semiring.one(Data_Semiring_Free.semiringFree)))(v1(r))));
              };
          };
          return Match(function (r) {
              return Data_Validation_Semiring.unV(processFnErr(r))(processFnRes)(v(r));
          });
      };
  });
  var matchAlt = new Control_Alt.Alt(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          return Match(function (r) {
              return Control_Alt.alt(Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(v(r))(v1(r));
          });
      };
  });
  var matchPlus = new Control_Plus.Plus(function () {
      return matchAlt;
  }, Match(Data_Function["const"](Data_Validation_Semiring.invalid(Data_Semiring.one(Data_Semiring_Free.semiringFree)))));
  var lit = function (input) {
      return function (route) {
          if (route instanceof Data_List_Types.Cons && (route.value0 instanceof Routing_Types.Path && route.value0.value0 === input)) {
              return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Data_Unit.unit));
          };
          if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
              return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
          };
          return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
      };
  };
  var root = lit("");
  var $$int = function (route) {
      if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
          var v = Data_Int.fromString(route.value0.value0);
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
          };
          if (v instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, v.value0));
          };
          throw new Error("Failed pattern match at Routing.Match (line 85, column 29 - line 87, column 38): " + [ v.constructor.name ]);
      };
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedInt.value));
  };
  var end = function (route) {
      if (route instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
      };
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedEnd.value));
  };
  exports["root"] = root;
  exports["lit"] = lit;
  exports["int"] = $$int;
  exports["str"] = str;
  exports["end"] = end;
  exports["runMatch"] = runMatch;
  exports["matchFunctor"] = matchFunctor;
  exports["matchPlus"] = matchPlus;
  exports["matchApply"] = matchApply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Parser"] = $PS["Routing.Parser"] || {};
  var exports = $PS["Routing.Parser"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Routing_Types = $PS["Routing.Types"];                
  var parseQueryPart = function (decoder) {
      var part2tuple = function (input) {
          var keyVal = Data_Functor.map(Data_Functor.functorArray)(decoder)(Data_String_Common.split("=")(input));
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(keyVal) <= 2))(function () {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array.index(keyVal)(1));
          });
      };
      var $11 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray));
      var $12 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(part2tuple);
      var $13 = Data_String_Common.split("&");
      return function ($14) {
          return $11($12($13($14)));
      };
  };
  var parse = function (decoder) {
      return function (hash) {
          var pathParts = function (str) {
              var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($15) {
                  return Routing_Types.Path.create(decoder($15));
              })(Data_String_Common.split("/")(str)));
              var v = Data_List.unsnoc(parts);
              if (v instanceof Data_Maybe.Just && (v.value0.last instanceof Routing_Types.Path && v.value0.last.value0 === "")) {
                  return v.value0.init;
              };
              return parts;
          };
          var v = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_String_CodePoints.splitAt)(hash))(Data_String_CodePoints.indexOf("?")(hash));
          if (v instanceof Data_Maybe.Just) {
              return Data_Semigroup.append(Data_List_Types.semigroupList)(pathParts(v.value0.before))(Data_Functor.map(Data_List_Types.functorList)(Routing_Types.Query.create)(Data_List.fromFoldable(Data_Foldable.foldableMaybe)(parseQueryPart(decoder)(Data_String_CodePoints.drop(1)(v.value0.after)))));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return pathParts(hash);
          };
          throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [ v.constructor.name ]);
      };
  };
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing"] = $PS["Routing"] || {};
  var exports = $PS["Routing"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Routing_Match = $PS["Routing.Match"];
  var Routing_Parser = $PS["Routing.Parser"];                
  var matchWith = function (decoder) {
      return function (matcher) {
          var $0 = Routing_Match.runMatch(matcher);
          var $1 = Routing_Parser.parse(decoder);
          return function ($2) {
              return $0($1($2));
          };
      };
  };
  var match = matchWith(Global_Unsafe.unsafeDecodeURIComponent);
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Route"] = $PS["Incentknow.Route"] || {};
  var exports = $PS["Incentknow.Route"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring_Free = $PS["Data.Semiring.Free"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Validation_Semiring = $PS["Data.Validation.Semiring"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Routing = $PS["Routing"];
  var Routing_Match = $PS["Routing.Match"];
  var Routing_Types = $PS["Routing.Types"];                
  var UserMain = (function () {
      function UserMain() {

      };
      UserMain.value = new UserMain();
      return UserMain;
  })();
  var UserSetting = (function () {
      function UserSetting() {

      };
      UserSetting.value = new UserSetting();
      return UserSetting;
  })();
  var FormatMain = (function () {
      function FormatMain() {

      };
      FormatMain.value = new FormatMain();
      return FormatMain;
  })();
  var FormatPage = (function () {
      function FormatPage() {

      };
      FormatPage.value = new FormatPage();
      return FormatPage;
  })();
  var FormatVersions = (function () {
      function FormatVersions() {

      };
      FormatVersions.value = new FormatVersions();
      return FormatVersions;
  })();
  var FormatSetting = (function () {
      function FormatSetting() {

      };
      FormatSetting.value = new FormatSetting();
      return FormatSetting;
  })();
  var FormatReactor = (function () {
      function FormatReactor() {

      };
      FormatReactor.value = new FormatReactor();
      return FormatReactor;
  })();
  var SpaceHome = (function () {
      function SpaceHome() {

      };
      SpaceHome.value = new SpaceHome();
      return SpaceHome;
  })();
  var SpaceContainers = (function () {
      function SpaceContainers() {

      };
      SpaceContainers.value = new SpaceContainers();
      return SpaceContainers;
  })();
  var SpaceFormat = (function () {
      function SpaceFormat(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SpaceFormat.create = function (value0) {
          return function (value1) {
              return new SpaceFormat(value0, value1);
          };
      };
      return SpaceFormat;
  })();
  var SpaceMembers = (function () {
      function SpaceMembers() {

      };
      SpaceMembers.value = new SpaceMembers();
      return SpaceMembers;
  })();
  var SpaceCrawlers = (function () {
      function SpaceCrawlers() {

      };
      SpaceCrawlers.value = new SpaceCrawlers();
      return SpaceCrawlers;
  })();
  var SpaceSetting = (function () {
      function SpaceSetting() {

      };
      SpaceSetting.value = new SpaceSetting();
      return SpaceSetting;
  })();
  var MaterialTargetBlank = (function () {
      function MaterialTargetBlank(value0) {
          this.value0 = value0;
      };
      MaterialTargetBlank.create = function (value0) {
          return new MaterialTargetBlank(value0);
      };
      return MaterialTargetBlank;
  })();
  var MaterialTargetDraft = (function () {
      function MaterialTargetDraft(value0) {
          this.value0 = value0;
      };
      MaterialTargetDraft.create = function (value0) {
          return new MaterialTargetDraft(value0);
      };
      return MaterialTargetDraft;
  })();
  var MaterialTargetMaterial = (function () {
      function MaterialTargetMaterial(value0) {
          this.value0 = value0;
      };
      MaterialTargetMaterial.create = function (value0) {
          return new MaterialTargetMaterial(value0);
      };
      return MaterialTargetMaterial;
  })();
  var TargetBlank = (function () {
      function TargetBlank(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TargetBlank.create = function (value0) {
          return function (value1) {
              return new TargetBlank(value0, value1);
          };
      };
      return TargetBlank;
  })();
  var TargetDraft = (function () {
      function TargetDraft(value0) {
          this.value0 = value0;
      };
      TargetDraft.create = function (value0) {
          return new TargetDraft(value0);
      };
      return TargetDraft;
  })();
  var TargetContent = (function () {
      function TargetContent(value0) {
          this.value0 = value0;
      };
      TargetContent.create = function (value0) {
          return new TargetContent(value0);
      };
      return TargetContent;
  })();
  var ContentTarget = (function () {
      function ContentTarget(value0) {
          this.value0 = value0;
      };
      ContentTarget.create = function (value0) {
          return new ContentTarget(value0);
      };
      return ContentTarget;
  })();
  var MaterialTarget = (function () {
      function MaterialTarget(value0) {
          this.value0 = value0;
      };
      MaterialTarget.create = function (value0) {
          return new MaterialTarget(value0);
      };
      return MaterialTarget;
  })();
  var Home = (function () {
      function Home() {

      };
      Home.value = new Home();
      return Home;
  })();
  var Sign = (function () {
      function Sign() {

      };
      Sign.value = new Sign();
      return Sign;
  })();
  var User = (function () {
      function User(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      User.create = function (value0) {
          return function (value1) {
              return new User(value0, value1);
          };
      };
      return User;
  })();
  var DraftList = (function () {
      function DraftList() {

      };
      DraftList.value = new DraftList();
      return DraftList;
  })();
  var Content = (function () {
      function Content(value0) {
          this.value0 = value0;
      };
      Content.create = function (value0) {
          return new Content(value0);
      };
      return Content;
  })();
  var ActivateAccount = (function () {
      function ActivateAccount(value0) {
          this.value0 = value0;
      };
      ActivateAccount.create = function (value0) {
          return new ActivateAccount(value0);
      };
      return ActivateAccount;
  })();
  var ContentBySemanticId = (function () {
      function ContentBySemanticId(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContentBySemanticId.create = function (value0) {
          return function (value1) {
              return new ContentBySemanticId(value0, value1);
          };
      };
      return ContentBySemanticId;
  })();
  var EditDraft = (function () {
      function EditDraft(value0) {
          this.value0 = value0;
      };
      EditDraft.create = function (value0) {
          return new EditDraft(value0);
      };
      return EditDraft;
  })();
  var SpaceList = (function () {
      function SpaceList() {

      };
      SpaceList.value = new SpaceList();
      return SpaceList;
  })();
  var Container = (function () {
      function Container(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Container.create = function (value0) {
          return function (value1) {
              return new Container(value0, value1);
          };
      };
      return Container;
  })();
  var ContainerList = (function () {
      function ContainerList(value0) {
          this.value0 = value0;
      };
      ContainerList.create = function (value0) {
          return new ContainerList(value0);
      };
      return ContainerList;
  })();
  var SearchAll = (function () {
      function SearchAll(value0) {
          this.value0 = value0;
      };
      SearchAll.create = function (value0) {
          return new SearchAll(value0);
      };
      return SearchAll;
  })();
  var Public = (function () {
      function Public() {

      };
      Public.value = new Public();
      return Public;
  })();
  var JoinSpace = (function () {
      function JoinSpace(value0) {
          this.value0 = value0;
      };
      JoinSpace.create = function (value0) {
          return new JoinSpace(value0);
      };
      return JoinSpace;
  })();
  var NewFormat = (function () {
      function NewFormat(value0) {
          this.value0 = value0;
      };
      NewFormat.create = function (value0) {
          return new NewFormat(value0);
      };
      return NewFormat;
  })();
  var EditScraper = (function () {
      function EditScraper(value0) {
          this.value0 = value0;
      };
      EditScraper.create = function (value0) {
          return new EditScraper(value0);
      };
      return EditScraper;
  })();
  var Space = (function () {
      function Space(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Space.create = function (value0) {
          return function (value1) {
              return new Space(value0, value1);
          };
      };
      return Space;
  })();
  var Rivision = (function () {
      function Rivision(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Rivision.create = function (value0) {
          return function (value1) {
              return new Rivision(value0, value1);
          };
      };
      return Rivision;
  })();
  var RivisionList = (function () {
      function RivisionList(value0) {
          this.value0 = value0;
      };
      RivisionList.create = function (value0) {
          return new RivisionList(value0);
      };
      return RivisionList;
  })();
  var NewSpace = (function () {
      function NewSpace() {

      };
      NewSpace.value = new NewSpace();
      return NewSpace;
  })();
  var NotFound = (function () {
      function NotFound() {

      };
      NotFound.value = new NotFound();
      return NotFound;
  })();
  var Notifications = (function () {
      function Notifications() {

      };
      Notifications.value = new Notifications();
      return Notifications;
  })();
  var ContentSpecContentId = (function () {
      function ContentSpecContentId(value0) {
          this.value0 = value0;
      };
      ContentSpecContentId.create = function (value0) {
          return new ContentSpecContentId(value0);
      };
      return ContentSpecContentId;
  })();
  var ContentSpecSemanticId = (function () {
      function ContentSpecSemanticId(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContentSpecSemanticId.create = function (value0) {
          return function (value1) {
              return new ContentSpecSemanticId(value0, value1);
          };
      };
      return ContentSpecSemanticId;
  })();
  var paramsToUrl = (function () {
      var toString = function (v) {
          if (v.value1 instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
          };
          if (v.value1 instanceof Data_Maybe.Just) {
              return Data_Maybe.Just.create(v.value0 + ("=" + v.value1.value0));
          };
          throw new Error("Failed pattern match at Incentknow.Route (line 131, column 14 - line 133, column 59): " + [ v.constructor.name ]);
      };
      var listToArray = Data_Array.fromFoldable(Data_List_Types.foldableList);
      var cutNothing = function (v) {
          if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_Maybe.Just) {
              return Data_List_Types.Cons.create(v.value0.value0)(cutNothing(v.value1));
          };
          if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_Maybe.Nothing) {
              return cutNothing(v.value1);
          };
          if (v instanceof Data_List_Types.Nil) {
              return Data_List_Types.Nil.value;
          };
          throw new Error("Failed pattern match at Incentknow.Route (line 125, column 16 - line 128, column 15): " + [ v.constructor.name ]);
      };
      var paramsToUrl$prime = (function () {
          var $262 = Data_String_Common.joinWith("&");
          var $263 = Data_Functor.map(Data_List_Types.functorList)(toString);
          return function ($264) {
              return $262(listToArray(cutNothing($263($264))));
          };
      })();
      var arrayToList = Data_Array.toUnfoldable(Data_List_Types.unfoldableList);
      var addHead = function (str) {
          var $99 = str === "";
          if ($99) {
              return "";
          };
          return "?" + str;
      };
      return function ($265) {
          return addHead(paramsToUrl$prime(arrayToList($265)));
      };
  })();
  var routeToPath = function (v) {
      if (v instanceof Home) {
          return "/";
      };
      if (v instanceof SearchAll) {
          return "/search" + paramsToUrl([ new Data_Tuple.Tuple("q", v.value0) ]);
      };
      if (v instanceof Sign) {
          return "/sign";
      };
      if (v instanceof Public) {
          return "/public";
      };
      if (v instanceof Notifications) {
          return "/notifications";
      };
      if (v instanceof ActivateAccount) {
          return "/activate" + paramsToUrl([ Data_Tuple.Tuple.create("token")(new Data_Maybe.Just(v.value0)) ]);
      };
      if (v instanceof User && v.value1 instanceof UserMain) {
          return "/users/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeUserDisplayId)(v.value0);
      };
      if (v instanceof User && v.value1 instanceof UserSetting) {
          return "/users/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeUserDisplayId)(v.value0) + "/setting");
      };
      if (v instanceof Content) {
          return "/contents/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentId)(v.value0);
      };
      if (v instanceof EditDraft && (v.value0 instanceof ContentTarget && v.value0.value0 instanceof TargetBlank)) {
          return "/contents/new" + paramsToUrl([ Data_Tuple.Tuple.create("space")(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId))(v.value0.value0.value0)), Data_Tuple.Tuple.create("structure")(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeStructureId))(v.value0.value0.value1)) ]);
      };
      if (v instanceof EditDraft && (v.value0 instanceof ContentTarget && v.value0.value0 instanceof TargetDraft)) {
          return "/contents/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentDraftId)(v.value0.value0.value0) + "/edit");
      };
      if (v instanceof EditDraft && (v.value0 instanceof ContentTarget && v.value0.value0 instanceof TargetContent)) {
          return "/contents/new" + paramsToUrl([ Data_Tuple.Tuple.create("content")(Data_Maybe.Just.create(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentId)(v.value0.value0.value0))) ]);
      };
      if (v instanceof EditDraft && (v.value0 instanceof MaterialTarget && v.value0.value0 instanceof MaterialTargetBlank)) {
          return "/materials/new" + paramsToUrl([ Data_Tuple.Tuple.create("space")(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId))(v.value0.value0.value0)) ]);
      };
      if (v instanceof EditDraft && (v.value0 instanceof MaterialTarget && v.value0.value0 instanceof MaterialTargetDraft)) {
          return "/materials/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeMaterialDraftId)(v.value0.value0.value0) + "/edit");
      };
      if (v instanceof EditDraft && (v.value0 instanceof MaterialTarget && v.value0.value0 instanceof MaterialTargetMaterial)) {
          return "/materials/new" + paramsToUrl([ Data_Tuple.Tuple.create("material")(Data_Maybe.Just.create(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeMaterialId)(v.value0.value0.value0))) ]);
      };
      if (v instanceof Rivision) {
          return "/contents/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentId)(v.value0) + ("/rivisions/" + Data_Show.show(Data_Show.showInt)(v.value1)));
      };
      if (v instanceof RivisionList) {
          return "/contents/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentId)(v.value0) + "/rivisions");
      };
      if (v instanceof ContentBySemanticId) {
          return "/contents/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatId)(v.value0) + ("/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSemanticId)(v.value1)));
      };
      if (v instanceof DraftList) {
          return "/drafts";
      };
      if (v instanceof NewFormat) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId)(v.value0) + "/formats/new");
      };
      if (v instanceof Container) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1)));
      };
      if (v instanceof SpaceList) {
          return "/spaces";
      };
      if (v instanceof JoinSpace) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId)(v.value0) + "/join");
      };
      if (v instanceof NewSpace) {
          return "/spaces/new";
      };
      if (v instanceof EditScraper) {
          return "/contents/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeContentId)(v.value0) + "/edit/scraper");
      };
      if (v instanceof ContainerList) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + "/containers");
      };
      if (v instanceof Space && v.value1 instanceof SpaceHome) {
          return "/spaces/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0);
      };
      if (v instanceof Space && v.value1 instanceof SpaceContainers) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + "/formats");
      };
      if (v instanceof Space && v.value1 instanceof SpaceMembers) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + "/members");
      };
      if (v instanceof Space && v.value1 instanceof SpaceCrawlers) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + "/crawlers");
      };
      if (v instanceof Space && v.value1 instanceof SpaceSetting) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + "/setting");
      };
      if (v instanceof Space && (v.value1 instanceof SpaceFormat && v.value1.value1 instanceof FormatMain)) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/formats/" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1.value0)));
      };
      if (v instanceof Space && (v.value1 instanceof SpaceFormat && v.value1.value1 instanceof FormatPage)) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/formats/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1.value0) + "/page")));
      };
      if (v instanceof Space && (v.value1 instanceof SpaceFormat && v.value1.value1 instanceof FormatVersions)) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/formats/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1.value0) + "/versions")));
      };
      if (v instanceof Space && (v.value1 instanceof SpaceFormat && v.value1.value1 instanceof FormatSetting)) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/formats/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1.value0) + "/setting")));
      };
      if (v instanceof Space && (v.value1 instanceof SpaceFormat && v.value1.value1 instanceof FormatReactor)) {
          return "/spaces/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(v.value0) + ("/formats/" + (Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(v.value1.value0) + "/reactor")));
      };
      if (v instanceof NotFound) {
          return "/not-found";
      };
      throw new Error("Failed pattern match at Incentknow.Route (line 139, column 15 - line 190, column 27): " + [ v.constructor.name ]);
  };
  var matchParam = function (key) {
      return function (route) {
          if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
              var remainingParams = Data_Map_Internal["delete"](Data_Ord.ordString)(key)(route.value0.value0);
              var el = Data_Map_Internal.lookup(Data_Ord.ordString)(key)(route.value0.value0);
              return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))((function () {
                  var $173 = Data_Map_Internal.isEmpty(remainingParams);
                  if ($173) {
                      return new Data_Tuple.Tuple(route.value1, el);
                  };
                  return new Data_Tuple.Tuple(new Data_List_Types.Cons(new Routing_Types.Query(remainingParams), route.value1), el);
              })());
          };
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route, Data_Maybe.Nothing.value));
      };
  };
  var matchRoute = (function () {
      var structure = Data_Functor.map(Routing_Match.matchFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Ids.StructureId))(matchParam("structure"));
      var space = Data_Functor.map(Routing_Match.matchFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Ids.SpaceId))(matchParam("space"));
      var format = Data_Functor.map(Routing_Match.matchFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Ids.FormatId))(matchParam("format"));
      var content = Data_Functor.map(Routing_Match.matchFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Ids.ContentId))(matchParam("content"));
      return Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Data_Foldable.oneOf(Data_Foldable.foldableArray)(Routing_Match.matchPlus)([ Data_Functor.voidRight(Routing_Match.matchFunctor)(Home.value)(Routing_Match.end), Data_Functor.voidRight(Routing_Match.matchFunctor)(Sign.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("sign"))(Routing_Match.end)), Data_Functor.voidRight(Routing_Match.matchFunctor)(Public.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("public"))(Routing_Match.end)), Data_Functor.voidRight(Routing_Match.matchFunctor)(Notifications.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("notifications"))(Routing_Match.end)), Data_Functor.map(Routing_Match.matchFunctor)(SearchAll.create)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("search"))(matchParam("q")))(Routing_Match.end)), Data_Functor.map(Routing_Match.matchFunctor)((function () {
          var $266 = Data_Maybe.fromMaybe("");
          return function ($267) {
              return ActivateAccount.create($266($267));
          };
      })())(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("activate"))(matchParam("token")))(Routing_Match.end)), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(User.create)(UserMain.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeUserDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("users"))(Routing_Match.str))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(User.create)(UserSetting.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeUserDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("users"))(Routing_Match.str))(Routing_Match.lit("setting")))(Routing_Match.end))), Data_Functor.voidRight(Routing_Match.matchFunctor)(SpaceList.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.end)), Data_Functor.map(Routing_Match.matchFunctor)(JoinSpace.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.SpaceId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.lit("join")))(Routing_Match.end))), Data_Functor.voidRight(Routing_Match.matchFunctor)(DraftList.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("drafts"))(Routing_Match.end)), Data_Functor.map(Routing_Match.matchFunctor)(EditScraper.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))(Routing_Match.lit("edit")))(Routing_Match.lit("scraper")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(function ($268) {
          return EditDraft.create(ContentTarget.create(TargetDraft.create($268)));
      })(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentDraftId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))(Routing_Match.lit("edit")))(Routing_Match.end))), Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return EditDraft.create(ContentTarget.create(new TargetBlank(x, y)));
          };
      })(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.lit("new")))(space)))(structure))(Routing_Match.end), Data_Functor.map(Routing_Match.matchFunctor)(function ($269) {
          return EditDraft.create(ContentTarget.create(TargetContent.create($269)));
      })(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))(Routing_Match.lit("edit")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(function ($270) {
          return EditDraft.create(MaterialTarget.create(MaterialTargetDraft.create($270)));
      })(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.MaterialDraftId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("materials"))(Routing_Match.str))(Routing_Match.lit("edit")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return EditDraft.create(MaterialTarget.create(new MaterialTargetBlank(x)));
      })(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("materials"))(Routing_Match.lit("new")))(space)), Data_Functor.map(Routing_Match.matchFunctor)(function ($271) {
          return EditDraft.create(MaterialTarget.create(MaterialTargetMaterial.create($271)));
      })(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.MaterialId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("materials"))(Routing_Match.str))(Routing_Match.lit("edit")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Content.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(RivisionList.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))(Routing_Match.lit("rivisions")))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(Rivision.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.ContentId)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Routing_Match.str))))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("rivisions"))(Routing_Match["int"]))(Routing_Match.end)), Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(ContentBySemanticId.create)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("contents"))(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.FormatId)(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.SemanticId)(Routing_Match.str)))(Routing_Match.end), Control_Apply.applyFirst(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(ContainerList.create)(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("containers"))(Routing_Match.end)), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return Space.create(x)(new SpaceFormat(y, FormatMain.value));
          };
      })(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("formats"))(Routing_Match.str))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return Space.create(x)(new SpaceFormat(y, FormatPage.value));
          };
      })(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("page"))(Routing_Match.str))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return Space.create(x)(new SpaceFormat(y, FormatVersions.value));
          };
      })(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("versions"))(Routing_Match.str))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return Space.create(x)(new SpaceFormat(y, FormatSetting.value));
          };
      })(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("setting"))(Routing_Match.str))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(function (x) {
          return function (y) {
              return Space.create(x)(new SpaceFormat(y, FormatReactor.value));
          };
      })(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("reactor"))(Routing_Match.str))(Routing_Match.end))), Data_Functor.voidRight(Routing_Match.matchFunctor)(NewSpace.value)(Control_Apply.applyFirst(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.lit("new"))), Data_Functor.map(Routing_Match.matchFunctor)(NewFormat.create)(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.SpaceId)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.lit("formats")))(Routing_Match.lit("new")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(Space.create)(SpaceHome.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(Space.create)(SpaceContainers.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.lit("formats")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(Space.create)(SpaceMembers.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.lit("members")))(Routing_Match.end))), Data_Functor.map(Routing_Match.matchFunctor)(Data_Function.flip(Space.create)(SpaceSetting.value))(Data_Functor.map(Routing_Match.matchFunctor)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId))(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applyFirst(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Routing_Match.str))(Routing_Match.lit("setting")))(Routing_Match.end))), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.map(Routing_Match.matchFunctor)(Container.create)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit("spaces"))(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.SpaceDisplayId)(Routing_Match.str))))(Data_Functor.map(Routing_Match.matchFunctor)(Incentknow_Data_Ids.FormatDisplayId)(Routing_Match.str)), Data_Functor.voidRight(Routing_Match.matchFunctor)(NotFound.value)(Routing_Match.lit("not-found")) ]));
  })();
  var pathToRoute = function (path) {
      var v = Routing.match(matchRoute)(path);
      if (v instanceof Data_Either.Right) {
          return v.value0;
      };
      if (v instanceof Data_Either.Left) {
          return NotFound.value;
      };
      throw new Error("Failed pattern match at Incentknow.Route (line 284, column 20 - line 286, column 21): " + [ v.constructor.name ]);
  };
  var eqUserTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof UserMain && y instanceof UserMain) {
              return true;
          };
          if (x instanceof UserSetting && y instanceof UserSetting) {
              return true;
          };
          return false;
      };
  });
  var eqFormatTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FormatMain && y instanceof FormatMain) {
              return true;
          };
          if (x instanceof FormatPage && y instanceof FormatPage) {
              return true;
          };
          if (x instanceof FormatVersions && y instanceof FormatVersions) {
              return true;
          };
          if (x instanceof FormatSetting && y instanceof FormatSetting) {
              return true;
          };
          if (x instanceof FormatReactor && y instanceof FormatReactor) {
              return true;
          };
          return false;
      };
  });
  var eqSpaceTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof SpaceHome && y instanceof SpaceHome) {
              return true;
          };
          if (x instanceof SpaceContainers && y instanceof SpaceContainers) {
              return true;
          };
          if (x instanceof SpaceFormat && y instanceof SpaceFormat) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqFormatDisplayId)(x.value0)(y.value0) && Data_Eq.eq(eqFormatTab)(x.value1)(y.value1);
          };
          if (x instanceof SpaceMembers && y instanceof SpaceMembers) {
              return true;
          };
          if (x instanceof SpaceCrawlers && y instanceof SpaceCrawlers) {
              return true;
          };
          if (x instanceof SpaceSetting && y instanceof SpaceSetting) {
              return true;
          };
          return false;
      };
  });
  var eqEditMaterialTarget = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof MaterialTargetBlank && y instanceof MaterialTargetBlank) {
              return Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqSpaceId))(x.value0)(y.value0);
          };
          if (x instanceof MaterialTargetDraft && y instanceof MaterialTargetDraft) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqMaterialDraftId)(x.value0)(y.value0);
          };
          if (x instanceof MaterialTargetMaterial && y instanceof MaterialTargetMaterial) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqMaterialId)(x.value0)(y.value0);
          };
          return false;
      };
  });
  var eqEditContentTarget = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof TargetBlank && y instanceof TargetBlank) {
              return Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqSpaceId))(x.value0)(y.value0) && Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqStructureId))(x.value1)(y.value1);
          };
          if (x instanceof TargetDraft && y instanceof TargetDraft) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentDraftId)(x.value0)(y.value0);
          };
          if (x instanceof TargetContent && y instanceof TargetContent) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0);
          };
          return false;
      };
  });
  var eqEditTarget = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ContentTarget && y instanceof ContentTarget) {
              return Data_Eq.eq(eqEditContentTarget)(x.value0)(y.value0);
          };
          if (x instanceof MaterialTarget && y instanceof MaterialTarget) {
              return Data_Eq.eq(eqEditMaterialTarget)(x.value0)(y.value0);
          };
          return false;
      };
  });
  var eqRoute = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Home && y instanceof Home) {
              return true;
          };
          if (x instanceof Sign && y instanceof Sign) {
              return true;
          };
          if (x instanceof User && y instanceof User) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqUserDisplayId)(x.value0)(y.value0) && Data_Eq.eq(eqUserTab)(x.value1)(y.value1);
          };
          if (x instanceof DraftList && y instanceof DraftList) {
              return true;
          };
          if (x instanceof Content && y instanceof Content) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0);
          };
          if (x instanceof ActivateAccount && y instanceof ActivateAccount) {
              return x.value0 === y.value0;
          };
          if (x instanceof ContentBySemanticId && y instanceof ContentBySemanticId) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqFormatId)(x.value0)(y.value0) && Data_Eq.eq(Incentknow_Data_Ids.eqSemanticId)(x.value1)(y.value1);
          };
          if (x instanceof EditDraft && y instanceof EditDraft) {
              return Data_Eq.eq(eqEditTarget)(x.value0)(y.value0);
          };
          if (x instanceof SpaceList && y instanceof SpaceList) {
              return true;
          };
          if (x instanceof Container && y instanceof Container) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0)(y.value0) && Data_Eq.eq(Incentknow_Data_Ids.eqFormatDisplayId)(x.value1)(y.value1);
          };
          if (x instanceof ContainerList && y instanceof ContainerList) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0)(y.value0);
          };
          if (x instanceof SearchAll && y instanceof SearchAll) {
              return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0)(y.value0);
          };
          if (x instanceof Public && y instanceof Public) {
              return true;
          };
          if (x instanceof JoinSpace && y instanceof JoinSpace) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0)(y.value0);
          };
          if (x instanceof NewFormat && y instanceof NewFormat) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0)(y.value0);
          };
          if (x instanceof EditScraper && y instanceof EditScraper) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0);
          };
          if (x instanceof Space && y instanceof Space) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0)(y.value0) && Data_Eq.eq(eqSpaceTab)(x.value1)(y.value1);
          };
          if (x instanceof Rivision && y instanceof Rivision) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0) && x.value1 === y.value1;
          };
          if (x instanceof RivisionList && y instanceof RivisionList) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0);
          };
          if (x instanceof NewSpace && y instanceof NewSpace) {
              return true;
          };
          if (x instanceof NotFound && y instanceof NotFound) {
              return true;
          };
          if (x instanceof Notifications && y instanceof Notifications) {
              return true;
          };
          return false;
      };
  });
  var eqContentSpec = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ContentSpecContentId && y instanceof ContentSpecContentId) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqContentId)(x.value0)(y.value0);
          };
          if (x instanceof ContentSpecSemanticId && y instanceof ContentSpecSemanticId) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqFormatId)(x.value0)(y.value0) && Data_Eq.eq(Incentknow_Data_Ids.eqSemanticId)(x.value1)(y.value1);
          };
          return false;
      };
  });
  exports["ContentSpecContentId"] = ContentSpecContentId;
  exports["ContentSpecSemanticId"] = ContentSpecSemanticId;
  exports["FormatMain"] = FormatMain;
  exports["FormatPage"] = FormatPage;
  exports["FormatVersions"] = FormatVersions;
  exports["FormatSetting"] = FormatSetting;
  exports["FormatReactor"] = FormatReactor;
  exports["SpaceHome"] = SpaceHome;
  exports["SpaceContainers"] = SpaceContainers;
  exports["SpaceFormat"] = SpaceFormat;
  exports["SpaceMembers"] = SpaceMembers;
  exports["SpaceCrawlers"] = SpaceCrawlers;
  exports["SpaceSetting"] = SpaceSetting;
  exports["UserMain"] = UserMain;
  exports["UserSetting"] = UserSetting;
  exports["TargetBlank"] = TargetBlank;
  exports["TargetDraft"] = TargetDraft;
  exports["TargetContent"] = TargetContent;
  exports["MaterialTargetBlank"] = MaterialTargetBlank;
  exports["MaterialTargetDraft"] = MaterialTargetDraft;
  exports["MaterialTargetMaterial"] = MaterialTargetMaterial;
  exports["ContentTarget"] = ContentTarget;
  exports["MaterialTarget"] = MaterialTarget;
  exports["Home"] = Home;
  exports["Sign"] = Sign;
  exports["User"] = User;
  exports["DraftList"] = DraftList;
  exports["Content"] = Content;
  exports["ActivateAccount"] = ActivateAccount;
  exports["ContentBySemanticId"] = ContentBySemanticId;
  exports["EditDraft"] = EditDraft;
  exports["SpaceList"] = SpaceList;
  exports["Container"] = Container;
  exports["ContainerList"] = ContainerList;
  exports["SearchAll"] = SearchAll;
  exports["Public"] = Public;
  exports["JoinSpace"] = JoinSpace;
  exports["NewFormat"] = NewFormat;
  exports["EditScraper"] = EditScraper;
  exports["Space"] = Space;
  exports["Rivision"] = Rivision;
  exports["RivisionList"] = RivisionList;
  exports["NewSpace"] = NewSpace;
  exports["NotFound"] = NotFound;
  exports["Notifications"] = Notifications;
  exports["routeToPath"] = routeToPath;
  exports["pathToRoute"] = pathToRoute;
  exports["eqContentSpec"] = eqContentSpec;
  exports["eqEditContentTarget"] = eqEditContentTarget;
  exports["eqEditMaterialTarget"] = eqEditMaterialTarget;
  exports["eqFormatTab"] = eqFormatTab;
  exports["eqSpaceTab"] = eqSpaceTab;
  exports["eqUserTab"] = eqUserTab;
  exports["eqRoute"] = eqRoute;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.HTML.Utils"] = $PS["Incentknow.HTML.Utils"] || {};
  var exports = $PS["Incentknow.HTML.Utils"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var whenElem = function (cond) {
      return function (f) {
          if (cond) {
              return f(Data_Unit.unit);
          };
          return Halogen_HTML_Core.text("");
      };
  };
  var maybeElem = function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v1(v.value0);
          };
          return Halogen_HTML_Core.text("");
      };
  };
  var link_ = function (navigate) {
      return function (route) {
          return Halogen_HTML_Elements.a([ Halogen_HTML_Events.onClick(function (e) {
              return Data_Maybe.Just.create(navigate(e)(route));
          }), Halogen_HTML_Properties.href(Incentknow_Route.routeToPath(route)) ]);
      };
  };
  var link = function (navigate) {
      return function (route) {
          return function (props) {
              return Halogen_HTML_Elements.a(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onClick(function (e) {
                  return Data_Maybe.Just.create(navigate(e)(route));
              }), Halogen_HTML_Properties.href(Incentknow_Route.routeToPath(route)) ])(props));
          };
      };
  };
  var css = function ($6) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($6));
  };
  exports["css"] = css;
  exports["maybeElem"] = maybeElem;
  exports["whenElem"] = whenElem;
  exports["link"] = link;
  exports["link_"] = link_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Atoms.Icon"] = $PS["Incentknow.Atoms.Icon"] || {};
  var exports = $PS["Incentknow.Atoms.Icon"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var userPlate = function (user) {
      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("atom-user-icon") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getIconUrl(user.iconImage)) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(user.displayName) ]) ]);
  };
  var userIcon = function (iconImage) {
      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("atom-user-icon") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getIconUrl(iconImage)) ]) ]);
  };
  var remoteWith = function (remote) {
      return function (body) {
          if (remote instanceof Incentknow_API_Execution.Loading) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-remote-with") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("loaderCircle") ])([  ]) ]);
          };
          if (remote instanceof Incentknow_API_Execution.LoadingForServer) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-remote-with") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("loaderCircle") ])([  ]) ]);
          };
          if (remote instanceof Incentknow_API_Execution.Holding) {
              return body(remote.value0);
          };
          if (remote instanceof Incentknow_API_Execution.Missing) {
              return Halogen_HTML_Core.text(remote.value0);
          };
          throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 31, column 26 - line 35, column 33): " + [ remote.constructor.name ]);
      };
  };
  var remoteArrayWith = function (remote) {
      return function (body) {
          if (remote instanceof Incentknow_API_Execution.Loading) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-remote-with") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("loaderCircle") ])([  ]) ]);
          };
          if (remote instanceof Incentknow_API_Execution.LoadingForServer) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-remote-with") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("loaderCircle") ])([  ]) ]);
          };
          if (remote instanceof Incentknow_API_Execution.Holding) {
              var $5 = Data_Array.length(remote.value0) === 0;
              if ($5) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-remote-with") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("no-result") ])([ Halogen_HTML_Core.text("\u7d50\u679c\u306f\u3042\u308a\u307e\u305b\u3093") ]) ]);
              };
              return body(remote.value0);
          };
          if (remote instanceof Incentknow_API_Execution.Missing) {
              return Halogen_HTML_Core.text(remote.value0);
          };
          throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 38, column 31 - line 47, column 33): " + [ remote.constructor.name ]);
      };
  };
  var loadingWith = function (msg) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-loading-icon") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(msg) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon loaderCircle") ])([  ]) ]);
  };
  var iconSolid = function (label) {
      return Halogen_HTML_Elements.i([ Incentknow_HTML_Utils.css("far fa-" + label) ])([  ]);
  };
  var icon = function (cls) {
      return Halogen_HTML_Elements.i([ Incentknow_HTML_Utils.css(cls) ])([  ]);
  };
  var spaceScopeIcon = function (space) {
      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("atom-space-scope") ])((function () {
          var $8 = Data_Eq.eq(Incentknow_Data_Entities.eqSpaceAuthority)(space.defaultAuthority)(Incentknow_Data_Entities.SpaceAuthorityNone.value) && Data_Eq.eq(Incentknow_Data_Entities.eqMembershipMethod)(space.membershipMethod)(Incentknow_Data_Entities.MembershipMethodNone.value);
          if ($8) {
              return [ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("icon private") ])([ icon("fas fa-lock"), Halogen_HTML_Core.text("Private") ]) ];
          };
          var $9 = Data_Eq.eq(Incentknow_Data_Entities.eqSpaceAuthority)(space.defaultAuthority)(Incentknow_Data_Entities.SpaceAuthorityNone.value);
          if ($9) {
              return [ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("icon group") ])([ icon("fas fa-users"), Halogen_HTML_Core.text("Group") ]) ];
          };
          return [ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("icon public") ])([ icon("fas fa-globe-americas"), Halogen_HTML_Core.text("Public") ]) ];
      })());
  };
  var typeIcon = function (typeName) {
      var label = (function () {
          if (typeName instanceof Incentknow_Data_Entities.TypeNameInt) {
              return "fas fa-hashtag";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameBool) {
              return "fas fa-check-square";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameString) {
              return "fas fa-text";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameContent) {
              return "fas fa-file";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameUrl) {
              return "fas fa-link";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameObject) {
              return "fas fa-brackets-curly";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameText) {
              return "fas fa-align-left";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameArray) {
              return "fas fa-brackets";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameEnum) {
              return "fas fa-tags";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameDocument) {
              return "fas fa-file-alt";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameImage) {
              return "fas fa-images";
          };
          if (typeName instanceof Incentknow_Data_Entities.TypeNameEntity) {
              return "";
          };
          throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 95, column 11 - line 107, column 25): " + [ typeName.constructor.name ]);
      })();
      var $11 = label === "";
      if ($11) {
          return Halogen_HTML_Core.text("");
      };
      return icon(label);
  };
  var propertyIcon = function (prop) {
      if (prop.type instanceof Incentknow_Data_Entities.ContentType) {
          if (prop.type.value0.icon instanceof Data_Maybe.Just) {
              return iconSolid(prop.type.value0.icon.value0);
          };
          if (prop.type.value0.icon instanceof Data_Maybe.Nothing) {
              if (prop.icon instanceof Data_Maybe.Just) {
                  return iconSolid(prop.icon.value0);
              };
              if (prop.icon instanceof Data_Maybe.Nothing) {
                  return typeIcon(Incentknow_Data_EntityUtils.getTypeName(prop.type));
              };
              throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 116, column 13 - line 118, column 58): " + [ prop.icon.constructor.name ]);
          };
          throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 113, column 7 - line 118, column 58): " + [ prop.type.value0.icon.constructor.name ]);
      };
      if (prop.icon instanceof Data_Maybe.Just) {
          return iconSolid(prop.icon.value0);
      };
      if (prop.icon instanceof Data_Maybe.Nothing) {
          return typeIcon(Incentknow_Data_EntityUtils.getTypeName(prop.type));
      };
      throw new Error("Failed pattern match at Incentknow.Atoms.Icon (line 120, column 7 - line 122, column 45): " + [ prop.icon.constructor.name ]);
  };
  var formatWithIcon = function (format) {
      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("atom-format-with-icon") ])([ Incentknow_HTML_Utils.maybeElem(format.icon)(function (label) {
          return iconSolid(label);
      }), Halogen_HTML_Core.text(format.displayName) ]);
  };
  exports["loadingWith"] = loadingWith;
  exports["remoteWith"] = remoteWith;
  exports["remoteArrayWith"] = remoteArrayWith;
  exports["icon"] = icon;
  exports["iconSolid"] = iconSolid;
  exports["spaceScopeIcon"] = spaceScopeIcon;
  exports["userPlate"] = userPlate;
  exports["userIcon"] = userIcon;
  exports["formatWithIcon"] = formatWithIcon;
  exports["typeIcon"] = typeIcon;
  exports["propertyIcon"] = propertyIcon;
})(PS);
(function(exports) {
  exports.cancelReturn = function (event) {
      if (event.keyCode == 13) {
          event.preventDefault();
      }
  }
})(PS["Incentknow.Atoms.Inputs"] = PS["Incentknow.Atoms.Inputs"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Atoms.Inputs"] = $PS["Incentknow.Atoms.Inputs"] || {};
  var exports = $PS["Incentknow.Atoms.Inputs"];
  var $foreign = $PS["Incentknow.Atoms.Inputs"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var textarea = function (input) {
      return Halogen_HTML_Elements.textarea([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Properties.placeholder(input.placeholder), Halogen_HTML_Properties.value(input.value), Halogen_HTML_Events.onValueInput(function ($10) {
          return Data_Maybe.Just.create(input.onChange($10));
      }), Halogen_HTML_Events.onKeyDown($foreign.cancelReturn) ]);
  };
  var submitButton = function (input) {
      return Halogen_HTML_Elements.button([ Incentknow_HTML_Utils.css("atom-submit-buttom"), Halogen_HTML_Properties.disabled(input.isDisabled), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(input.onClick);
      }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("inner") ])([ (function () {
          if (input.isLoading) {
              return Incentknow_Atoms_Icon.loadingWith(input.text);
          };
          return Halogen_HTML_Core.text(input.text);
      })() ]) ]);
  };
  var searchBox = function (input) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-search-box") ])([ Incentknow_Atoms_Icon.icon("fas fa-search"), Halogen_HTML_Elements.textarea([ Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Properties.value(input.value), Halogen_HTML_Events.onValueInput(function ($11) {
          return Data_Maybe.Just.create(input.onChange($11));
      }), Halogen_HTML_Events.onKeyDown($foreign.cancelReturn) ]) ]);
  };
  var numberarea = function (input) {
      var toEvent = function (str) {
          var $7 = str === "";
          if ($7) {
              var v = Data_Int.fromString(str);
              if (v instanceof Data_Maybe.Just) {
                  return Data_Maybe.Just.create(input.onChange(new Data_Maybe.Just(v.value0)));
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Incentknow.Atoms.Inputs (line 142, column 23 - line 144, column 25): " + [ v.constructor.name ]);
          };
          return Data_Maybe.Just.create(input.onChange(Data_Maybe.Nothing.value));
      };
      return Halogen_HTML_Elements.textarea([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Properties.value(Data_Show.show(Data_Maybe.showMaybe(Data_Show.showInt))(input.value)), Halogen_HTML_Events.onValueChange(toEvent) ]);
  };
  var menuPositiveButton = function (text) {
      return function (onClick) {
          return Halogen_HTML_Elements.button([ Incentknow_HTML_Utils.css("atom-positive-button"), Halogen_HTML_Events.onClick(function (v) {
              return new Data_Maybe.Just(onClick);
          }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("inner") ])([ Halogen_HTML_Core.text(text) ]) ]);
      };
  };
  var disabledCheckbox = function (text) {
      return function (value) {
          return Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.checked(value), Halogen_HTML_Properties.disabled(true) ]), Halogen_HTML_Core.text(text) ]);
      };
  };
  var dangerButton = function (text) {
      return function (onClick) {
          return Halogen_HTML_Elements.button([ Incentknow_HTML_Utils.css("atom-danger-button"), Halogen_HTML_Events.onClick(function (v) {
              return new Data_Maybe.Just(onClick);
          }) ])([ Halogen_HTML_Core.text(text) ]);
      };
  };
  var checkbox = function (text) {
      return function (value) {
          return function (onChange) {
              return function (disabled) {
                  return Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.checked(value), Halogen_HTML_Events.onChecked(function ($12) {
                      return Data_Maybe.Just.create(onChange($12));
                  }), Halogen_HTML_Properties.disabled(disabled) ]), Halogen_HTML_Core.text(text) ]);
              };
          };
      };
  };
  var button = function (text) {
      return function (onClick) {
          return Halogen_HTML_Elements.button([ Incentknow_HTML_Utils.css("atom-button"), Halogen_HTML_Events.onClick(function (v) {
              return new Data_Maybe.Just(onClick);
          }) ])([ Halogen_HTML_Core.text(text) ]);
      };
  };
  exports["submitButton"] = submitButton;
  exports["menuPositiveButton"] = menuPositiveButton;
  exports["button"] = button;
  exports["dangerButton"] = dangerButton;
  exports["textarea"] = textarea;
  exports["searchBox"] = searchBox;
  exports["numberarea"] = numberarea;
  exports["checkbox"] = checkbox;
  exports["disabledCheckbox"] = disabledCheckbox;
  exports["cancelReturn"] = $foreign.cancelReturn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Atoms.Message"] = $PS["Incentknow.Atoms.Message"] || {};
  var exports = $PS["Incentknow.Atoms.Message"];
  var Data_Eq = $PS["Data.Eq"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var HasNotChange = (function () {
      function HasNotChange() {

      };
      HasNotChange.value = new HasNotChange();
      return HasNotChange;
  })();
  var NotSaved = (function () {
      function NotSaved() {

      };
      NotSaved.value = new NotSaved();
      return NotSaved;
  })();
  var Saving = (function () {
      function Saving() {

      };
      Saving.value = new Saving();
      return Saving;
  })();
  var SavingButChanged = (function () {
      function SavingButChanged() {

      };
      SavingButChanged.value = new SavingButChanged();
      return SavingButChanged;
  })();
  var Saved = (function () {
      function Saved() {

      };
      Saved.value = new Saved();
      return Saved;
  })();
  var success = function (msg) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-success") ])([ Incentknow_Atoms_Icon.icon("fas fa-check"), Halogen_HTML_Core.text(msg) ]);
  };
  var error = function (msg) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-error") ])([ Incentknow_Atoms_Icon.icon("fas fa-exclamation-circle"), Halogen_HTML_Core.text(msg) ]);
  };
  var eqSaveState = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof HasNotChange && y instanceof HasNotChange) {
              return true;
          };
          if (x instanceof NotSaved && y instanceof NotSaved) {
              return true;
          };
          if (x instanceof Saving && y instanceof Saving) {
              return true;
          };
          if (x instanceof SavingButChanged && y instanceof SavingButChanged) {
              return true;
          };
          if (x instanceof Saved && y instanceof Saved) {
              return true;
          };
          return false;
      };
  });
  var commentBox = function (cls) {
      return function (body) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("atom-comment-box") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("triangle") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("inner") ])([  ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css(cls) ])(body) ]) ]);
      };
  };
  exports["error"] = error;
  exports["success"] = success;
  exports["HasNotChange"] = HasNotChange;
  exports["NotSaved"] = NotSaved;
  exports["Saving"] = Saving;
  exports["SavingButChanged"] = SavingButChanged;
  exports["Saved"] = Saved;
  exports["commentBox"] = commentBox;
  exports["eqSaveState"] = eqSaveState;
})(PS);
(function(exports) {
  
  exports.log = x => { console.log(x); return x; }
})(PS["Incentknow.Data.Content"] = PS["Incentknow.Data.Content"] || {});
(function(exports) {
  
  exports.forceConvert = x => {
      return x
  };

  exports.getMaterialObjectType = x => {
      if (x.draftId) {
          return "draft";
      } else if(x.data) {
          return "focused";
      } else {
          return "related";
      }
  };

  exports.getMaterialObjectId = x => {
      if (x.draftId) {
          return x.draftId;
      } else {
          return x.materialId;
      };
  };

  exports.assignJson = a => b => {
      return Object.assign(a, b);
  }

  exports.insertJson = id => vl => obj => {
      const r = { };
      Object.keys(obj).forEach(x => {
          r[x] = obj[x];
      });
      r[id] = vl;
      return r;
  };
})(PS["Incentknow.Data.Property"] = PS["Incentknow.Data.Property"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.Property"] = $PS["Incentknow.Data.Property"] || {};
  var exports = $PS["Incentknow.Data.Property"];
  var $foreign = $PS["Incentknow.Data.Property"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Map_Utils = $PS["Data.Map.Utils"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];                
  var DeletedReference = (function () {
      function DeletedReference() {

      };
      DeletedReference.value = new DeletedReference();
      return DeletedReference;
  })();
  var NullReference = (function () {
      function NullReference() {

      };
      NullReference.value = new NullReference();
      return NullReference;
  })();
  var JustReference = (function () {
      function JustReference(value0) {
          this.value0 = value0;
      };
      JustReference.create = function (value0) {
          return new JustReference(value0);
      };
      return JustReference;
  })();
  var DisplayNameItem = (function () {
      function DisplayNameItem() {

      };
      DisplayNameItem.value = new DisplayNameItem();
      return DisplayNameItem;
  })();
  var FieldNameItem = (function () {
      function FieldNameItem() {

      };
      FieldNameItem.value = new FieldNameItem();
      return FieldNameItem;
  })();
  var TypeItem = (function () {
      function TypeItem() {

      };
      TypeItem.value = new TypeItem();
      return TypeItem;
  })();
  var SemanticItem = (function () {
      function SemanticItem() {

      };
      SemanticItem.value = new SemanticItem();
      return SemanticItem;
  })();
  var IconItem = (function () {
      function IconItem() {

      };
      IconItem.value = new IconItem();
      return IconItem;
  })();
  var OrderItem = (function () {
      function OrderItem() {

      };
      OrderItem.value = new OrderItem();
      return OrderItem;
  })();
  var CreationItem = (function () {
      function CreationItem() {

      };
      CreationItem.value = new CreationItem();
      return CreationItem;
  })();
  var OptionalItem = (function () {
      function OptionalItem() {

      };
      OptionalItem.value = new OptionalItem();
      return OptionalItem;
  })();
  var DeletionItem = (function () {
      function DeletionItem() {

      };
      DeletionItem.value = new DeletionItem();
      return DeletionItem;
  })();
  var MaterialObjectDraft = (function () {
      function MaterialObjectDraft(value0) {
          this.value0 = value0;
      };
      MaterialObjectDraft.create = function (value0) {
          return new MaterialObjectDraft(value0);
      };
      return MaterialObjectDraft;
  })();
  var MaterialObjectFocused = (function () {
      function MaterialObjectFocused(value0) {
          this.value0 = value0;
      };
      MaterialObjectFocused.create = function (value0) {
          return new MaterialObjectFocused(value0);
      };
      return MaterialObjectFocused;
  })();
  var MaterialObjectRelated = (function () {
      function MaterialObjectRelated(value0) {
          this.value0 = value0;
      };
      MaterialObjectRelated.create = function (value0) {
          return new MaterialObjectRelated(value0);
      };
      return MaterialObjectRelated;
  })();
  var IntTypedValue = (function () {
      function IntTypedValue(value0) {
          this.value0 = value0;
      };
      IntTypedValue.create = function (value0) {
          return new IntTypedValue(value0);
      };
      return IntTypedValue;
  })();
  var BoolTypedValue = (function () {
      function BoolTypedValue(value0) {
          this.value0 = value0;
      };
      BoolTypedValue.create = function (value0) {
          return new BoolTypedValue(value0);
      };
      return BoolTypedValue;
  })();
  var StringTypedValue = (function () {
      function StringTypedValue(value0) {
          this.value0 = value0;
      };
      StringTypedValue.create = function (value0) {
          return new StringTypedValue(value0);
      };
      return StringTypedValue;
  })();
  var UrlTypedValue = (function () {
      function UrlTypedValue(value0) {
          this.value0 = value0;
      };
      UrlTypedValue.create = function (value0) {
          return new UrlTypedValue(value0);
      };
      return UrlTypedValue;
  })();
  var ObjectTypedValue = (function () {
      function ObjectTypedValue(value0) {
          this.value0 = value0;
      };
      ObjectTypedValue.create = function (value0) {
          return new ObjectTypedValue(value0);
      };
      return ObjectTypedValue;
  })();
  var TextTypedValue = (function () {
      function TextTypedValue(value0) {
          this.value0 = value0;
      };
      TextTypedValue.create = function (value0) {
          return new TextTypedValue(value0);
      };
      return TextTypedValue;
  })();
  var ArrayTypedValue = (function () {
      function ArrayTypedValue(value0) {
          this.value0 = value0;
      };
      ArrayTypedValue.create = function (value0) {
          return new ArrayTypedValue(value0);
      };
      return ArrayTypedValue;
  })();
  var EnumTypedValue = (function () {
      function EnumTypedValue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EnumTypedValue.create = function (value0) {
          return function (value1) {
              return new EnumTypedValue(value0, value1);
          };
      };
      return EnumTypedValue;
  })();
  var ContentTypedValue = (function () {
      function ContentTypedValue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContentTypedValue.create = function (value0) {
          return function (value1) {
              return new ContentTypedValue(value0, value1);
          };
      };
      return ContentTypedValue;
  })();
  var DocumentTypedValue = (function () {
      function DocumentTypedValue(value0) {
          this.value0 = value0;
      };
      DocumentTypedValue.create = function (value0) {
          return new DocumentTypedValue(value0);
      };
      return DocumentTypedValue;
  })();
  var ImageTypedValue = (function () {
      function ImageTypedValue(value0) {
          this.value0 = value0;
      };
      ImageTypedValue.create = function (value0) {
          return new ImageTypedValue(value0);
      };
      return ImageTypedValue;
  })();
  var EntityTypedValue = (function () {
      function EntityTypedValue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EntityTypedValue.create = function (value0) {
          return function (value1) {
              return new EntityTypedValue(value0, value1);
          };
      };
      return EntityTypedValue;
  })();
  var MajorChange = (function () {
      function MajorChange() {

      };
      MajorChange.value = new MajorChange();
      return MajorChange;
  })();
  var MinorChange = (function () {
      function MinorChange() {

      };
      MinorChange.value = new MinorChange();
      return MinorChange;
  })();
  var NoneChange = (function () {
      function NoneChange() {

      };
      NoneChange.value = new NoneChange();
      return NoneChange;
  })();
  var toRelatedContentFromContentId = function (contentId) {
      return $foreign.forceConvert({
          contentId: contentId
      });
  };
  var toReferenceValue = function (value) {
      var $14 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(Data_Argonaut_Core.toString(value))(new Data_Maybe.Just("deleted"));
      if ($14) {
          return DeletedReference.value;
      };
      var $15 = Data_Argonaut_Core.isNull(value);
      if ($15) {
          return NullReference.value;
      };
      return new JustReference(value);
  };
  var toPropertyComposition = function (isEditor) {
      return function (props) {
          var isSection = function (prop) {
              if (prop.info.type instanceof Incentknow_Data_Entities.DocumentType) {
                  var $17 = Data_Argonaut_Core.isNull(prop.value) && !isEditor;
                  if ($17) {
                      return false;
                  };
                  return true;
              };
              if (prop.info.type instanceof Incentknow_Data_Entities.TextType) {
                  var $18 = Data_Argonaut_Core.isNull(prop.value) && !isEditor;
                  if ($18) {
                      return false;
                  };
                  return true;
              };
              return false;
          };
          return {
              info: Data_Array.filter((function () {
                  var $109 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                  return function ($110) {
                      return $109(isSection($110));
                  };
              })())(props),
              sections: Data_Array.filter(isSection)(props)
          };
      };
  };
  var toMaybeFromReferenceValue = function (v) {
      if (v instanceof DeletedReference) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof NullReference) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof JustReference) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Incentknow.Data.Property (line 261, column 29 - line 264, column 30): " + [ v.constructor.name ]);
  };
  var toMaterialObjectFromDraftId = function (draftId) {
      return MaterialObjectDraft.create($foreign.forceConvert({
          draftId: draftId
      }));
  };
  var toJsonFromTypedValue = function (v) {
      if (v instanceof IntTypedValue && v.value0 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromNumber(Data_Int.toNumber(v.value0.value0));
      };
      if (v instanceof BoolTypedValue && v.value0 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromBoolean(v.value0.value0);
      };
      if (v instanceof StringTypedValue && v.value0 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromString(v.value0.value0);
      };
      if (v instanceof ContentTypedValue && v.value1 instanceof JustReference) {
          return $foreign.forceConvert({
              contentId: v.value1.value0.contentId
          });
      };
      if (v instanceof UrlTypedValue && v.value0 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromString(v.value0.value0);
      };
      if (v instanceof ObjectTypedValue) {
          var toTuple = function (prop) {
              return Data_Tuple.Tuple.create(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.info.id))(toJsonFromTypedValue(prop.value));
          };
          return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson))(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(toTuple)(v.value0)));
      };
      if (v instanceof TextTypedValue && v.value0 instanceof JustReference) {
          return v.value0.value0;
      };
      if (v instanceof ArrayTypedValue) {
          return $foreign.forceConvert(Data_Functor.map(Data_Functor.functorArray)(toJsonFromTypedValue)(v.value0));
      };
      if (v instanceof EnumTypedValue && v.value1 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromString(v.value1.value0);
      };
      if (v instanceof DocumentTypedValue && v.value0 instanceof JustReference) {
          return v.value0.value0;
      };
      if (v instanceof ImageTypedValue && v.value0 instanceof Data_Maybe.Just) {
          return Data_Argonaut_Core.fromString(v.value0.value0);
      };
      if (v instanceof EntityTypedValue && v.value1 instanceof JustReference) {
          return Data_Argonaut_Core.jsonNull;
      };
      return Data_Argonaut_Core.jsonNull;
  };
  var mkProperties = function (json) {
      return function (props) {
          var toContentProp = function (info) {
              return function (maybeJson) {
                  return {
                      value: Data_Maybe.fromMaybe(Data_Argonaut_Core.jsonNull)(maybeJson),
                      info: info
                  };
              };
          };
          var v = Data_Map_Utils.decodeToMap(json);
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return toContentProp(x)(Data_Map_Internal.lookup(Data_Ord.ordString)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(x.id))(v.value0));
              })(props);
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return toContentProp(x)(Data_Maybe.Nothing.value);
              })(props);
          };
          throw new Error("Failed pattern match at Incentknow.Data.Property (line 73, column 27 - line 75, column 55): " + [ v.constructor.name ]);
      };
  };
  var getDefaultValue = function (props) {
      var defaultValue = function (v) {
          if (v instanceof Incentknow_Data_Entities.IntType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.StringType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.BoolType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.TextType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.ContentType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.ArrayType) {
              return Data_Argonaut_Core.fromArray([  ]);
          };
          if (v instanceof Incentknow_Data_Entities.UrlType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.ObjectType) {
              return getDefaultValue(v.value0);
          };
          if (v instanceof Incentknow_Data_Entities.DocumentType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.EnumType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.EntityType) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Incentknow_Data_Entities.ImageType) {
              return Data_Argonaut_Core.jsonNull;
          };
          throw new Error("Failed pattern match at Incentknow.Data.Property (line 45, column 18 - line 57, column 26): " + [ v.constructor.name ]);
      };
      return Data_Argonaut_Core.fromObject(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
          return Data_Tuple.Tuple.create(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(x.id))(defaultValue(x.type));
      })(props)));
  };
  var functorReferenceValue = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof DeletedReference) {
              return DeletedReference.value;
          };
          if (v instanceof NullReference) {
              return NullReference.value;
          };
          if (v instanceof JustReference) {
              return JustReference.create(f(v.value0));
          };
          throw new Error("Failed pattern match at Incentknow.Data.Property (line 267, column 11 - line 270, column 43): " + [ v.constructor.name ]);
      };
  });
  var toTypedValue = function (value) {
      return function (ty) {
          if (ty instanceof Incentknow_Data_Entities.IntType) {
              return IntTypedValue.create(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Int.fromNumber)(Data_Argonaut_Core.toNumber(value))));
          };
          if (ty instanceof Incentknow_Data_Entities.BoolType) {
              return BoolTypedValue.create(Data_Argonaut_Core.toBoolean(value));
          };
          if (ty instanceof Incentknow_Data_Entities.StringType) {
              return StringTypedValue.create(Data_Argonaut_Core.toString(value));
          };
          if (ty instanceof Incentknow_Data_Entities.ContentType) {
              return ContentTypedValue.create(ty.value0)(Data_Functor.map(functorReferenceValue)(Incentknow_API.fromJsonToRelatedContent)(toReferenceValue(value)));
          };
          if (ty instanceof Incentknow_Data_Entities.UrlType) {
              return UrlTypedValue.create(Data_Argonaut_Core.toString(value));
          };
          if (ty instanceof Incentknow_Data_Entities.ObjectType) {
              return ObjectTypedValue.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return {
                      value: toTypedValue(x.value)(x.info.type),
                      info: x.info
                  };
              })(mkProperties(value)(ty.value0)));
          };
          if (ty instanceof Incentknow_Data_Entities.TextType) {
              return TextTypedValue.create(toReferenceValue(value));
          };
          if (ty instanceof Incentknow_Data_Entities.ArrayType) {
              return ArrayTypedValue.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return toTypedValue(x)(ty.value0);
              })(Data_Maybe.fromMaybe([  ])(Data_Argonaut_Core.toArray(value))));
          };
          if (ty instanceof Incentknow_Data_Entities.EnumType) {
              return EnumTypedValue.create(ty.value0)(Data_Argonaut_Core.toString(value));
          };
          if (ty instanceof Incentknow_Data_Entities.DocumentType) {
              return DocumentTypedValue.create(toReferenceValue(value));
          };
          if (ty instanceof Incentknow_Data_Entities.ImageType) {
              return ImageTypedValue.create(Data_Argonaut_Core.toString(value));
          };
          if (ty instanceof Incentknow_Data_Entities.EntityType) {
              return EntityTypedValue.create(ty.value0)(Data_Functor.map(functorReferenceValue)(Incentknow_API.fromJsonToRelatedContent)(toReferenceValue(value)));
          };
          throw new Error("Failed pattern match at Incentknow.Data.Property (line 273, column 25 - line 285, column 103): " + [ ty.constructor.name ]);
      };
  };
  var fromMaterialObjectToJson = function (v) {
      if (v instanceof MaterialObjectDraft) {
          return $foreign.forceConvert({
              draftId: v.value0.draftId
          });
      };
      if (v instanceof MaterialObjectFocused) {
          return $foreign.forceConvert({
              materialId: v.value0.materialId
          });
      };
      if (v instanceof MaterialObjectRelated) {
          return $foreign.forceConvert({
              materialId: v.value0.materialId
          });
      };
      throw new Error("Failed pattern match at Incentknow.Data.Property (line 241, column 28 - line 244, column 87): " + [ v.constructor.name ]);
  };
  var fromJsonToMaterialObject = function (json) {
      var v = $foreign.getMaterialObjectType(json);
      if (v === "draft") {
          return MaterialObjectDraft.create(Incentknow_API.fromJsonToFocusedMaterialDraft(json));
      };
      if (v === "focused") {
          return MaterialObjectFocused.create(Incentknow_API.fromJsonToFocusedMaterial(json));
      };
      return MaterialObjectRelated.create(Incentknow_API.fromJsonToRelatedMaterial(json));
  };
  var eqChangeType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof MajorChange && y instanceof MajorChange) {
              return true;
          };
          if (x instanceof MinorChange && y instanceof MinorChange) {
              return true;
          };
          if (x instanceof NoneChange && y instanceof NoneChange) {
              return true;
          };
          return false;
      };
  });
  var difference = function (before2) {
      return function (after2) {
          var withIndex = function (start) {
              return function (array) {
                  var v = Data_Array.uncons(array);
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Array.cons(new Data_Tuple.Tuple(start, v.value0.head))(withIndex(start + 1 | 0)(v.value0.tail));
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return [  ];
                  };
                  throw new Error("Failed pattern match at Incentknow.Data.Property (line 126, column 27 - line 128, column 18): " + [ v.constructor.name ]);
              };
          };
          var propDifference = function (bf) {
              return function (af) {
                  if (bf instanceof Data_Maybe.Just && af instanceof Data_Maybe.Just) {
                      var mkDiff = function (item) {
                          return function (changeType) {
                              return function (bb) {
                                  return function (aa) {
                                      return {
                                          item: item,
                                          id: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(af.value0.value1.id),
                                          name: af.value0.value1.displayName,
                                          changeType: changeType,
                                          before: bb,
                                          after: aa
                                      };
                                  };
                              };
                          };
                      };
                      return Data_Array.concat(Data_Functor.map(Data_Functor.functorArray)(Data_Array.fromFoldable(Data_Foldable.foldableMaybe))([ (function () {
                          var $76 = bf.value0.value1.displayName !== af.value0.value1.displayName;
                          if ($76) {
                              return Data_Maybe.Just.create(mkDiff(DisplayNameItem.value)(MinorChange.value)(new Data_Maybe.Just(bf.value0.value1.displayName))(new Data_Maybe.Just(af.value0.value1.displayName)));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          var $77 = Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(bf.value0.value1.fieldName)(af.value0.value1.fieldName);
                          if ($77) {
                              return Data_Maybe.Just.create(mkDiff(FieldNameItem.value)(MinorChange.value)(bf.value0.value1.fieldName)(af.value0.value1.fieldName));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          if (bf.value0.value1.type instanceof Incentknow_Data_Entities.StringType && af.value0.value1.type instanceof Incentknow_Data_Entities.EntityType) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MinorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          if (bf.value0.value1.type instanceof Incentknow_Data_Entities.EntityType && af.value0.value1.type instanceof Incentknow_Data_Entities.StringType) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MinorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          if (bf.value0.value1.type instanceof Incentknow_Data_Entities.EntityType && af.value0.value1.type instanceof Incentknow_Data_Entities.EntityType) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MinorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          if (bf.value0.value1.type instanceof Incentknow_Data_Entities.StringType && af.value0.value1.type instanceof Incentknow_Data_Entities.TextType) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MinorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          if (bf.value0.value1.type instanceof Incentknow_Data_Entities.UrlType && af.value0.value1.type instanceof Incentknow_Data_Entities.StringType) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MinorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          var $84 = Data_Eq.notEq(Incentknow_Data_Entities.eqType)(bf.value0.value1.type)(af.value0.value1.type);
                          if ($84) {
                              return Data_Maybe.Just.create(mkDiff(TypeItem.value)(MajorChange.value)(new Data_Maybe.Just(""))(new Data_Maybe.Just("")));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          var $85 = Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(bf.value0.value1.semantic)(af.value0.value1.semantic);
                          if ($85) {
                              return Data_Maybe.Just.create(mkDiff(SemanticItem.value)(MinorChange.value)(bf.value0.value1.semantic)(af.value0.value1.semantic));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          var $86 = Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(bf.value0.value1.icon)(af.value0.value1.icon);
                          if ($86) {
                              return Data_Maybe.Just.create(mkDiff(IconItem.value)(MinorChange.value)(bf.value0.value1.icon)(af.value0.value1.icon));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          var $87 = bf.value0.value1.optional !== af.value0.value1.optional;
                          if ($87) {
                              return Data_Maybe.Just.create(mkDiff(OptionalItem.value)(MinorChange.value)(Data_Maybe.Just.create(Data_Show.show(Data_Show.showBoolean)(bf.value0.value1.optional)))(Data_Maybe.Just.create(Data_Show.show(Data_Show.showBoolean)(af.value0.value1.optional))));
                          };
                          return Data_Maybe.Nothing.value;
                      })(), (function () {
                          var $88 = bf.value0.value0 !== af.value0.value0;
                          if ($88) {
                              return Data_Maybe.Just.create(mkDiff(OrderItem.value)(MinorChange.value)(Data_Maybe.Just.create(Data_Show.show(Data_Show.showInt)(bf.value0.value0)))(Data_Maybe.Just.create(Data_Show.show(Data_Show.showInt)(af.value0.value0))));
                          };
                          return Data_Maybe.Nothing.value;
                      })() ]));
                  };
                  if (bf instanceof Data_Maybe.Just && af instanceof Data_Maybe.Nothing) {
                      return Data_Array.singleton({
                          item: DeletionItem.value,
                          id: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(bf.value0.value1.id),
                          name: bf.value0.value1.displayName,
                          changeType: MajorChange.value,
                          before: Data_Maybe.Nothing.value,
                          after: Data_Maybe.Nothing.value
                      });
                  };
                  if (bf instanceof Data_Maybe.Nothing && af instanceof Data_Maybe.Just) {
                      return Data_Array.singleton({
                          item: CreationItem.value,
                          id: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(af.value0.value1.id),
                          name: af.value0.value1.displayName,
                          changeType: MajorChange.value,
                          before: Data_Maybe.Nothing.value,
                          after: Data_Maybe.Nothing.value
                      });
                  };
                  if (bf instanceof Data_Maybe.Nothing && af instanceof Data_Maybe.Nothing) {
                      return Data_Array.singleton({
                          item: DeletionItem.value,
                          id: "",
                          name: "",
                          changeType: MinorChange.value,
                          before: Data_Maybe.Nothing.value,
                          after: Data_Maybe.Nothing.value
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Data.Property (line 131, column 26 - line 175, column 133): " + [ bf.constructor.name, af.constructor.name ]);
              };
          };
          var getChangeType = function (props) {
              var $101 = Data_Array.length(props) === 0;
              if ($101) {
                  return NoneChange.value;
              };
              var $102 = 0 < Data_Array.length(Data_Array.filter(function (x) {
                  return Data_Eq.eq(eqChangeType)(x.changeType)(MajorChange.value);
              })(props));
              if ($102) {
                  return MajorChange.value;
              };
              return MinorChange.value;
          };
          var diffs = Data_Array.concat(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.uncurry(propDifference))(Data_Map_Internal.values(Data_Map_Utils.mergeFromArray(function (v) {
              return Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(v.value1.id);
          })(function (v) {
              return Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(v.value1.id);
          })(withIndex(1)(before2))(withIndex(1)(after2))))));
          return {
              diffs: diffs,
              changeType: getChangeType(diffs)
          };
      };
  };
  exports["getDefaultValue"] = getDefaultValue;
  exports["mkProperties"] = mkProperties;
  exports["NoneChange"] = NoneChange;
  exports["difference"] = difference;
  exports["toPropertyComposition"] = toPropertyComposition;
  exports["IntTypedValue"] = IntTypedValue;
  exports["BoolTypedValue"] = BoolTypedValue;
  exports["StringTypedValue"] = StringTypedValue;
  exports["UrlTypedValue"] = UrlTypedValue;
  exports["ObjectTypedValue"] = ObjectTypedValue;
  exports["TextTypedValue"] = TextTypedValue;
  exports["ArrayTypedValue"] = ArrayTypedValue;
  exports["EnumTypedValue"] = EnumTypedValue;
  exports["ContentTypedValue"] = ContentTypedValue;
  exports["DocumentTypedValue"] = DocumentTypedValue;
  exports["ImageTypedValue"] = ImageTypedValue;
  exports["EntityTypedValue"] = EntityTypedValue;
  exports["MaterialObjectDraft"] = MaterialObjectDraft;
  exports["MaterialObjectFocused"] = MaterialObjectFocused;
  exports["MaterialObjectRelated"] = MaterialObjectRelated;
  exports["toMaterialObjectFromDraftId"] = toMaterialObjectFromDraftId;
  exports["toRelatedContentFromContentId"] = toRelatedContentFromContentId;
  exports["fromJsonToMaterialObject"] = fromJsonToMaterialObject;
  exports["fromMaterialObjectToJson"] = fromMaterialObjectToJson;
  exports["DeletedReference"] = DeletedReference;
  exports["NullReference"] = NullReference;
  exports["JustReference"] = JustReference;
  exports["toMaybeFromReferenceValue"] = toMaybeFromReferenceValue;
  exports["toTypedValue"] = toTypedValue;
  exports["toJsonFromTypedValue"] = toJsonFromTypedValue;
  exports["eqChangeType"] = eqChangeType;
  exports["assignJson"] = $foreign.assignJson;
  exports["insertJson"] = $foreign.insertJson;
  exports["getMaterialObjectId"] = $foreign.getMaterialObjectId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.Content"] = $PS["Incentknow.Data.Content"] || {};
  var exports = $PS["Incentknow.Data.Content"];
  var $foreign = $PS["Incentknow.Data.Content"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var getContentSemanticData = function (contentData) {
      return function (format) {
          var props = Incentknow_Data_Property.mkProperties(contentData)(format.currentStructure.properties);
          var semanticId = Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (id) {
              return Data_Array.head(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  var $28 = Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(x.info.id) === id;
                  if ($28) {
                      return Data_Argonaut_Core.toString(x.value);
                  };
                  return Data_Maybe.Nothing.value;
              })(props)));
          })(format.semanticId));
          var titleProperty = (function () {
              var isString = function (prop) {
                  if (prop.info.type instanceof Incentknow_Data_Entities.StringType) {
                      var $30 = Data_Argonaut_Core.isNull(prop.value);
                      if ($30) {
                          return false;
                      };
                      return true;
                  };
                  return false;
              };
              return Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
                  return {
                      text: Data_Maybe.fromMaybe("")(Data_Argonaut_Core.toString(x.value)),
                      info: x.info
                  };
              })(Data_Array.head(Data_Array.filter(isString)($foreign.log(props))));
          })();
          var title = Data_Maybe.fromMaybe("\u7121\u984c")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return v.text;
          })(titleProperty));
          var image = Data_Array.head(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              var $31 = Data_Eq.eq(Incentknow_Data_Entities.eqType)(x.info.type)(Incentknow_Data_Entities.ImageType.value);
              if ($31) {
                  return Data_Argonaut_Core.toString(x.value);
              };
              return Data_Maybe.Nothing.value;
          })(props)));
          return {
              title: title,
              semanticId: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSemanticId))(semanticId),
              titleProperty: titleProperty,
              image: image
          };
      };
  };
  exports["getContentSemanticData"] = getContentSemanticData;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Data.Utils"] = $PS["Incentknow.Data.Utils"] || {};
  var exports = $PS["Incentknow.Data.Utils"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Random = $PS["Effect.Random"];                
  var generateId = function (dictMonadEffect) {
      return function (len) {
          return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Data_Traversable["for"]((dictMonadEffect.Monad0()).Applicative0())(Data_Traversable.traversableArray)(Data_Array.range(1)(len))(function (v) {
              return Effect_Class.liftEffect(dictMonadEffect)(Effect_Random.randomInt(0)(Data_String_CodePoints.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1 | 0));
          }))(function (seeds) {
              return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_String_CodeUnits.fromCharArray(Data_Functor.map(Data_Functor.functorArray)((function () {
                  var $2 = Data_Maybe.fromMaybe("a");
                  var $3 = Data_Function.flip(Data_String_CodeUnits.charAt)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
                  return function ($4) {
                      return $2($3($4));
                  };
              })())(seeds)));
          });
      };
  };
  exports["generateId"] = generateId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.HTML.DateTime"] = $PS["Incentknow.HTML.DateTime"] || {};
  var exports = $PS["Incentknow.HTML.DateTime"];
  var Data_DateTime_Utils = $PS["Data.DateTime.Utils"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];                
  var elapsedTime = function (timestamp) {
      return Halogen_HTML_Core.text(Data_DateTime_Utils.fromTimestampToElapsedTimeString(timestamp));
  };
  var dateTime = function (timestamp) {
      return Halogen_HTML_Core.text(Data_DateTime_Utils.fromTimestampToString(timestamp));
  };
  exports["dateTime"] = dateTime;
  exports["elapsedTime"] = elapsedTime;
})(PS);
(function(exports) {
  exports.setHTML = function(el) {
      return function (html) {
          return function() {
              el.innerHTML = html;
          };
      };
  };
})(PS["Incentknow.HTML.RawHTML"] = PS["Incentknow.HTML.RawHTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.HTML.RawHTML"] = $PS["Incentknow.HTML.RawHTML"] || {};
  var exports = $PS["Incentknow.HTML.RawHTML"];
  var $foreign = $PS["Incentknow.HTML.RawHTML"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Receive = (function () {
      function Receive(value0) {
          this.value0 = value0;
      };
      Receive.create = function (value0) {
          return new Receive(value0);
      };
      return Receive;
  })();
  var component = function (dictMonadEffect) {
      var render = function (state) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.ref(state.elRef) ])([  ]);
      };
      var initialState = function (input) {
          return {
              html: input.html,
              elRef: "rawHtml"
          };
      };
      var handleAction = function (v) {
          if (v instanceof Initialize) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(state.elRef))(function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.setHTML(v1.value0)(state.html));
                      };
                      throw new Error("Failed pattern match at Incentknow.HTML.RawHTML (line 55, column 13 - line 58, column 49): " + [ v1.constructor.name ]);
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              });
          };
          if (v instanceof Receive) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                  return handleAction(Initialize.value);
              });
          };
          throw new Error("Failed pattern match at Incentknow.HTML.RawHTML (line 51, column 18 - line 62, column 30): " + [ v.constructor.name ]);
      };
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: function ($8) {
                  return Data_Maybe.Just.create(Receive.create($8));
              },
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Footer"] = $PS["Incentknow.Organisms.Footer"] || {};
  var exports = $PS["Incentknow.Organisms.Footer"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (state) {
      var footerLink = function (name) {
          return function (route) {
              return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("link") ])([ Incentknow_HTML_Utils.link_(Navigate.create)(route)([ Halogen_HTML_Core.text(name) ]) ]);
          };
      };
      return Halogen_HTML_Elements.footer([ Incentknow_HTML_Utils.css("org-footer") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("copyright") ])([ Halogen_HTML_Core.text("@Incentknow") ]), Halogen_HTML_Elements.nav([ Incentknow_HTML_Utils.css("links") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("inner") ])([ footerLink("Developer")(Incentknow_Route.Content.create(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeContentId)("451b942c983e418287b284f6ac8cf523"))), footerLink("Support")(Incentknow_Route.Content.create(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeContentId)(""))), footerLink("Contact")(Incentknow_Route.Content.create(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeContentId)(""))) ]) ]) ]);
  };
  var initialState = function (input) {
      return {};
  };
  var handleAction = function (dictBehaviour) {
      return function (v) {
          return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
      };
  };
  var component = function (dictBehaviour) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictBehaviour),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Notifications"] = $PS["Incentknow.Molecules.Notifications"] || {};
  var exports = $PS["Incentknow.Molecules.Notifications"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var ReadAllNotifications = (function () {
      function ReadAllNotifications(value0) {
          this.value0 = value0;
      };
      ReadAllNotifications.create = function (value0) {
          return new ReadAllNotifications(value0);
      };
      return ReadAllNotifications;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Click = (function () {
      function Click() {

      };
      Click.value = new Click();
      return Click;
  })();
  var LoadNotReadCount = (function () {
      function LoadNotReadCount() {

      };
      LoadNotReadCount.value = new LoadNotReadCount();
      return LoadNotReadCount;
  })();
  var FetchedNotReadCount = (function () {
      function FetchedNotReadCount(value0) {
          this.value0 = value0;
      };
      FetchedNotReadCount.create = function (value0) {
          return new FetchedNotReadCount(value0);
      };
      return FetchedNotReadCount;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Monad_Rec_Class.forever(Effect_Aff.monadRecAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(10000.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(LoadNotReadCount.value);
          }))))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-notifications"), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(Click.value);
      }) ])([ Incentknow_Atoms_Icon.icon("fas fa-bell"), Incentknow_HTML_Utils.whenElem(state.count > 0)(function (v) {
          return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(state.count)) ]);
      }) ]);
  };
  var initialState = function (input) {
      return {
          count: 0,
          timerSubId: Data_Maybe.Nothing.value
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $15 = {};
          for (var $16 in v1) {
              if ({}.hasOwnProperty.call(v1, $16)) {
                  $15[$16] = v1[$16];
              };
          };
          $15.count = 0;
          return $15;
      }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
      });
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (timerSubId) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $20 = {};
                          for (var $21 in v1) {
                              if ({}.hasOwnProperty.call(v1, $21)) {
                                  $20[$21] = v1[$21];
                              };
                          };
                          $20.timerSubId = new Data_Maybe.Just(timerSubId);
                          return $20;
                      }))(function () {
                          return handleAction(dictBehaviour)(dictMonadAff)(LoadNotReadCount.value);
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof Click) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $24 = {};
                      for (var $25 in v1) {
                          if ({}.hasOwnProperty.call(v1, $25)) {
                              $24[$25] = v1[$25];
                          };
                      };
                      $24.count = 0;
                      return $24;
                  });
              };
              if (v instanceof LoadNotReadCount) {
                  return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedNotReadCount.create)(Incentknow_API.getNotReadNotificationCount(Data_Unit.unit));
              };
              if (v instanceof FetchedNotReadCount) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (count) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $27 = {};
                          for (var $28 in v1) {
                              if ({}.hasOwnProperty.call(v1, $28)) {
                                  $27[$28] = v1[$28];
                              };
                          };
                          $27.count = Data_Maybe.fromMaybe(0)(Incentknow_API_Execution.toMaybe(count));
                          return $27;
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.Notifications (line 83, column 16 - line 94, column 58): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: handleQuery,
                  receive: function ($31) {
                      return Data_Maybe.Just.create(HandleInput.create($31));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["ReadAllNotifications"] = ReadAllNotifications;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Header"] = $PS["Incentknow.Organisms.Header"] || {};
  var exports = $PS["Incentknow.Organisms.Header"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_Notifications = $PS["Incentknow.Molecules.Notifications"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (state) {
              var headerUserLink = function (name) {
                  return function (iconImage) {
                      return function (route) {
                          return Incentknow_HTML_Utils.link(NavigateRoute.create)(route)([ Incentknow_HTML_Utils.css((function () {
                              var $12 = Data_Eq.eq(Incentknow_Route.eqRoute)(route)(state.route);
                              if ($12) {
                                  return "link link-selected";
                              };
                              return "link";
                          })()) ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getIconUrl(iconImage)) ]) ]);
                      };
                  };
              };
              var headerLinkNotifications = Incentknow_HTML_Utils.link(NavigateRoute.create)(Incentknow_Route.Notifications.value)([ Incentknow_HTML_Utils.css((function () {
                  var $13 = Data_Eq.eq(Incentknow_Route.eqRoute)(state.route)(Incentknow_Route.Notifications.value);
                  if ($13) {
                      return "notifications link link-selected";
                  };
                  return "notifications link";
              })()) ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "notifications";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_Notifications.component(dictBehaviour)(dictMonadAff))({})(Data_Void.absurd) ]);
              var headerLinkEditDraft = function (name) {
                  return Incentknow_HTML_Utils.link(NavigateRoute.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value))))([ Incentknow_HTML_Utils.css((function () {
                      if (state.route instanceof Incentknow_Route.EditDraft) {
                          return "link link-selected";
                      };
                      return "link";
                  })()) ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(name) ]) ]);
              };
              var headerLink = function (name) {
                  return function (route) {
                      return Incentknow_HTML_Utils.link(NavigateRoute.create)(route)([ Incentknow_HTML_Utils.css((function () {
                          var $16 = Data_Eq.eq(Incentknow_Route.eqRoute)(route)(state.route);
                          if ($16) {
                              return "link link-selected";
                          };
                          return "link";
                      })()) ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(name) ]) ]);
                  };
              };
              return Halogen_HTML_Elements.header([ Incentknow_HTML_Utils.css("org-header") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("logo") ])([ Incentknow_HTML_Utils.link_(NavigateRoute.create)(Incentknow_Route.Home.value)([ Halogen_HTML_Core.text("Incentknow") ]) ]), Halogen_HTML_Elements.nav([ Incentknow_HTML_Utils.css("links") ])([ headerLink("Spaces")(Incentknow_Route.SpaceList.value), Incentknow_HTML_Utils.maybeElem(state.account)(function (v) {
                  return headerLinkEditDraft("Create");
              }), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("search-box") ])([ Incentknow_Atoms_Inputs.searchBox({
                  value: (function () {
                      if (state.route instanceof Incentknow_Route.SearchAll) {
                          return Data_Maybe.fromMaybe("")(state.route.value0);
                      };
                      return "";
                  })(),
                  onChange: function (x) {
                      return Navigate.create(Incentknow_Route.SearchAll.create(new Data_Maybe.Just(x)));
                  }
              }) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("space") ])([  ]), Incentknow_HTML_Utils.maybeElem(state.account)(function (v) {
                  return headerLinkNotifications;
              }), (function () {
                  if (state.account instanceof Data_Maybe.Just) {
                      return headerUserLink(state.account.value0.displayName)(state.account.value0.iconImage)(new Incentknow_Route.User(state.account.value0.displayId, Incentknow_Route.UserMain.value));
                  };
                  if (state.account instanceof Data_Maybe.Nothing) {
                      return headerLink("\u30ed\u30b0\u30a4\u30f3/\u767b\u9332")(Incentknow_Route.Sign.value);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Header (line 97, column 11 - line 99, column 49): " + [ state.account.constructor.name ]);
              })() ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          account: Data_Maybe.Nothing.value,
          route: input.route
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.getAccount(Incentknow_AppM.behaviourHalogenM(dictBehaviour)))(function (account) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $22 = {};
                          for (var $23 in v1) {
                              if ({}.hasOwnProperty.call(v1, $23)) {
                                  $22[$23] = v1[$23];
                              };
                          };
                          $22.account = account;
                          return $22;
                      });
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof NavigateRoute) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                      if (v.value1 instanceof Incentknow_Route.Notifications) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "notifications";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Molecules_Notifications.ReadAllNotifications.create)))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      };
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  })())(function () {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $29 = {};
                      for (var $30 in v1) {
                          if ({}.hasOwnProperty.call(v1, $30)) {
                              $29[$30] = v1[$30];
                          };
                      };
                      $29.route = v.value0.route;
                      return $29;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.Header (line 54, column 16 - line 66, column 59): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictMonadAff)(dictBehaviour),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff)(dictBehaviour),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($33) {
                      return Data_Maybe.Just.create(HandleInput.create($33));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Activate"] = $PS["Incentknow.Pages.Activate"] || {};
  var exports = $PS["Incentknow.Pages.Activate"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Session = $PS["Incentknow.API.Session"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Core.text("");
          };
      };
  };
  var initialState = function (input) {
      return {
          token: input.token
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeAPI(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API_Session.activate(state.token)))(function () {
                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_API_Session.loadPage(Incentknow_Route.routeToPath(Incentknow_Route.Home.value)));
                  });
              });
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  exports.setAutosize = function(el) {
      return function() {
          autosize(el);
      };
  };
})(PS["Incentknow.Molecules.MultilineTextarea"] = PS["Incentknow.Molecules.MultilineTextarea"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.MultilineTextarea"] = $PS["Incentknow.Molecules.MultilineTextarea"] || {};
  var exports = $PS["Incentknow.Molecules.MultilineTextarea"];
  var $foreign = $PS["Incentknow.Molecules.MultilineTextarea"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeText = (function () {
      function ChangeText(value0) {
          this.value0 = value0;
      };
      ChangeText.create = function (value0) {
          return new ChangeText(value0);
      };
      return ChangeText;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.textarea([ Incentknow_HTML_Utils.css("mol-multiline-textarea"), Halogen_HTML_Properties.ref("textarea"), Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Properties.value(state.text), Halogen_HTML_Events.onValueInput(function ($14) {
          return Data_Maybe.Just.create(ChangeText.create($14));
      }) ]);
  };
  var initialState = function (input) {
      return {
          text: input.value
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("textarea"))(function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.setAutosize(v1.value0));
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.MultilineTextarea (line 69, column 11 - line 71, column 59): " + [ v1.constructor.name ]);
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              });
          };
          if (v instanceof HandleInput) {
              return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
          };
          if (v instanceof ChangeText) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $10 = {};
                  for (var $11 in v1) {
                      if ({}.hasOwnProperty.call(v1, $11)) {
                          $10[$11] = v1[$11];
                      };
                  };
                  $10.text = v.value0;
                  return $10;
              }))(function () {
                  return Halogen_Query_HalogenM.raise(v.value0);
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.MultilineTextarea (line 65, column 16 - line 76, column 17): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictMonadEffect) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadEffect),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: function ($15) {
                  return Data_Maybe.Just.create(HandleInput.create($15));
              },
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Comments"] = $PS["Incentknow.Organisms.Comments"] || {};
  var exports = $PS["Incentknow.Organisms.Comments"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_MultilineTextarea = $PS["Incentknow.Molecules.MultilineTextarea"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var EditComment = (function () {
      function EditComment(value0) {
          this.value0 = value0;
      };
      EditComment.create = function (value0) {
          return new EditComment(value0);
      };
      return EditComment;
  })();
  var SubmitComment = (function () {
      function SubmitComment() {

      };
      SubmitComment.value = new SubmitComment();
      return SubmitComment;
  })();
  var ChangeReplyTo = (function () {
      function ChangeReplyTo(value0) {
          this.value0 = value0;
      };
      ChangeReplyTo.create = function (value0) {
          return new ChangeReplyTo(value0);
      };
      return ChangeReplyTo;
  })();
  var CancelComment = (function () {
      function CancelComment() {

      };
      CancelComment.value = new CancelComment();
      return CancelComment;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderReplyCommnet = function (comment) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-comments-comment") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("usericon") ])([ Incentknow_Atoms_Icon.userIcon(comment.user.iconImage) ]), Incentknow_Atoms_Message.commentBox("comment-body")([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(comment.user.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("time") ])((function () {
                      var $25 = comment.createdAt === comment.updatedAt;
                      if ($25) {
                          return [ Incentknow_HTML_DateTime.elapsedTime(comment.createdAt) ];
                      };
                      return [ Incentknow_HTML_DateTime.elapsedTime(comment.updatedAt), Halogen_HTML_Core.text("\u306b\u7de8\u96c6") ];
                  })()) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(comment.text) ]) ]) ]);
              };
              var renderNewComment = function (account) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-comments-comment") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("usericon") ])([ Incentknow_Atoms_Icon.userIcon(account.iconImage) ]), Incentknow_Atoms_Message.commentBox("new-comment-body")([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Core.text((function () {
                      var $26 = Data_Maybe.isNothing(state.replyTo);
                      if ($26) {
                          return "\u65b0\u3057\u3044\u30b3\u30e1\u30f3\u30c8";
                      };
                      return "\u65b0\u3057\u3044\u8fd4\u4fe1";
                  })()) ]), Incentknow_HTML_Utils.whenElem(Data_Maybe.isJust(state.replyTo))(function (v) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("cancel"), Halogen_HTML_Events.onClick(function (v1) {
                          return new Data_Maybe.Just(CancelComment.value);
                      }) ])([ Incentknow_Atoms_Icon.iconSolid("times") ]);
                  }) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "textarea";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_MultilineTextarea.component(dictBehaviour.MonadEffect0()))({
                      value: state.newComment
                  })(function ($75) {
                      return Data_Maybe.Just.create(EditComment.create($75));
                  }) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Incentknow_Atoms_Inputs.submitButton({
                      text: "\u8ffd\u52a0",
                      loadingText: "\u8ffd\u52a0\u4e2d",
                      isDisabled: Data_String_CodePoints.length(state.newComment) === 0,
                      isLoading: state.submittingComment,
                      onClick: SubmitComment.value
                  }) ]) ]) ]) ]);
              };
              var renderTreeCommnet = function (comment) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("comment") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-comments-comment") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("usericon") ])([ Incentknow_Atoms_Icon.userIcon(comment.user.iconImage) ]), Incentknow_Atoms_Message.commentBox("comment-body")([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(comment.user.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("time") ])((function () {
                      var $27 = comment.createdAt === comment.updatedAt;
                      if ($27) {
                          return [ Incentknow_HTML_DateTime.elapsedTime(comment.createdAt) ];
                      };
                      return [ Incentknow_HTML_DateTime.elapsedTime(comment.updatedAt), Halogen_HTML_Core.text("\u306b\u7de8\u96c6") ];
                  })()), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("reply"), Halogen_HTML_Events.onClick(function (v) {
                      return Data_Maybe.Just.create(ChangeReplyTo.create(new Data_Maybe.Just(comment.commentId)));
                  }) ])([ Halogen_HTML_Core.text("\u8fd4\u4fe1") ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(comment.text) ]) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("replies") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(renderReplyCommnet)(comment.replies))([ Incentknow_HTML_Utils.whenElem(Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqCommentId))(state.replyTo)(new Data_Maybe.Just(comment.commentId)))(function (v) {
                      return Incentknow_HTML_Utils.maybeElem(state.account)(renderNewComment);
                  }) ])) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-comments") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Halogen_HTML_Core.text("Comments"), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Incentknow_Atoms_Icon.remoteWith(state.comments)(function (comments) {
                  return Halogen_HTML_Core.text(" (" + (Data_Show.show(Data_Show.showInt)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semiring.add(Data_Semiring.semiringInt))(0)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return Data_Array.length(x.replies) + 1 | 0;
                  })(comments))) + ")"));
              }) ]) ]), Incentknow_Atoms_Icon.remoteWith(state.comments)(function (comments) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("comments") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Incentknow_HTML_Utils.whenElem(Data_Maybe.isNothing(state.replyTo))(function (v) {
                      return Incentknow_HTML_Utils.maybeElem(state.account)(renderNewComment);
                  }) ])(Data_Functor.map(Data_Functor.functorArray)(renderTreeCommnet)(comments)));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          comments: input.value,
          newComment: "",
          submittingComment: false,
          contentId: input.contentId,
          account: Data_Maybe.Nothing.value,
          replyTo: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.getAccount(Incentknow_AppM.behaviourHalogenM(dictBehaviour)))(function (account) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $29 = {};
                          for (var $30 in v1) {
                              if ({}.hasOwnProperty.call(v1, $30)) {
                                  $29[$30] = v1[$30];
                              };
                          };
                          $29.account = account;
                          return $29;
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $32 = {};
                      for (var $33 in v1) {
                          if ({}.hasOwnProperty.call(v1, $33)) {
                              $32[$33] = v1[$33];
                          };
                      };
                      $32.comments = v.value0.value;
                      $32.contentId = v.value0.contentId;
                      return $32;
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof NavigateRoute) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              if (v instanceof EditComment) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $39 = {};
                      for (var $40 in v1) {
                          if ({}.hasOwnProperty.call(v1, $40)) {
                              $39[$40] = v1[$40];
                          };
                      };
                      $39.newComment = v.value0;
                      return $39;
                  });
              };
              if (v instanceof SubmitComment) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.contentId)(function (contentId) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $43 = {};
                              for (var $44 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $44)) {
                                      $43[$44] = v1[$44];
                                  };
                              };
                              $43.submittingComment = true;
                              return $43;
                          }))(function () {
                              if (state.replyTo instanceof Data_Maybe.Nothing) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.commentContent(contentId)(state.newComment)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                                              var $48 = {};
                                              for (var $49 in x) {
                                                  if ({}.hasOwnProperty.call(x, $49)) {
                                                      $48[$49] = x[$49];
                                                  };
                                              };
                                              $48.submittingComment = false;
                                              $48.newComment = "";
                                              $48.comments = Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (y) {
                                                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ result.value0 ])(y);
                                              })(x.comments);
                                              return $48;
                                          });
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $52 = {};
                                              for (var $53 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $53)) {
                                                      $52[$53] = v1[$53];
                                                  };
                                              };
                                              $52.submittingComment = false;
                                              return $52;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.Comments (line 206, column 11 - line 208, column 65): " + [ result.constructor.name ]);
                                  });
                              };
                              if (state.replyTo instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.replyToComment(state.replyTo.value0)(state.newComment)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                                              var $60 = {};
                                              for (var $61 in x) {
                                                  if ({}.hasOwnProperty.call(x, $61)) {
                                                      $60[$61] = x[$61];
                                                  };
                                              };
                                              $60.submittingComment = false;
                                              $60.replyTo = Data_Maybe.Nothing.value;
                                              $60.newComment = "";
                                              $60.comments = Data_Functor.map(Incentknow_API_Execution.functorRemote)(Data_Functor.map(Data_Functor.functorArray)(function (y) {
                                                  var $56 = Data_Eq.eq(Incentknow_Data_Ids.eqCommentId)(y.commentId)(state.replyTo.value0);
                                                  if ($56) {
                                                      var $57 = {};
                                                      for (var $58 in y) {
                                                          if ({}.hasOwnProperty.call(y, $58)) {
                                                              $57[$58] = y[$58];
                                                          };
                                                      };
                                                      $57.replies = Data_Semigroup.append(Data_Semigroup.semigroupArray)(y.replies)([ result.value0 ]);
                                                      return $57;
                                                  };
                                                  return y;
                                              }))(x.comments);
                                              return $60;
                                          });
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $64 = {};
                                              for (var $65 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $65)) {
                                                      $64[$65] = v1[$65];
                                                  };
                                              };
                                              $64.submittingComment = false;
                                              return $64;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.Comments (line 211, column 11 - line 219, column 65): " + [ result.constructor.name ]);
                                  });
                              };
                              throw new Error("Failed pattern match at Incentknow.Organisms.Comments (line 203, column 7 - line 219, column 65): " + [ state.replyTo.constructor.name ]);
                          });
                      });
                  });
              };
              if (v instanceof ChangeReplyTo) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $68 = {};
                      for (var $69 in v1) {
                          if ({}.hasOwnProperty.call(v1, $69)) {
                              $68[$69] = v1[$69];
                          };
                      };
                      $68.replyTo = v.value0;
                      return $68;
                  });
              };
              if (v instanceof CancelComment) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $72 = {};
                      for (var $73 in v1) {
                          if ({}.hasOwnProperty.call(v1, $73)) {
                              $72[$73] = v1[$73];
                          };
                      };
                      $72.replyTo = Data_Maybe.Nothing.value;
                      $72.newComment = "";
                      return $72;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.Comments (line 191, column 16 - line 221, column 70): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($76) {
                          return Data_Maybe.Just.create(HandleInput.create($76));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  
  exports.log = x => { console.log(x); return x; }
})(PS["Incentknow.Molecules.ContentLink"] = PS["Incentknow.Molecules.ContentLink"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.ContentLink"] = $PS["Incentknow.Molecules.ContentLink"] || {};
  var exports = $PS["Incentknow.Molecules.ContentLink"];
  var $foreign = $PS["Incentknow.Molecules.ContentLink"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (state) {
      var common = Incentknow_Data_Content.getContentSemanticData(($foreign.log(state.content)).data)(state.content.format);
      return Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Content(state.content.contentId))([  ])([ Halogen_HTML_Core.text(common.title) ]);
  };
  var initialState = function (input) {
      return {
          content: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.ContentLink (line 67, column 16 - line 70, column 44): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render,
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($12) {
                          return Data_Maybe.Just.create(HandleInput.create($12));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Document.BlockViewer"] = $PS["Incentknow.Organisms.Document.BlockViewer"] || {};
  var exports = $PS["Incentknow.Organisms.Document.BlockViewer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var toHtmlText = function (str) {
      return Data_String_Common.replaceAll(" ")("&nbsp;")(Data_String_Common.replaceAll("\xa0")("&nbsp;")(str));
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-document-block org-document-block-viewer") ])([ (function () {
                      if (state.data instanceof Incentknow_Data_Entities.ParagraphBlockData) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("paragraph") ])([ Halogen_HTML_Core.text(toHtmlText(state.data.value0)) ]);
                      };
                      if (state.data instanceof Incentknow_Data_Entities.HeaderBlockData) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header header-level" + Data_Show.show(Data_Show.showInt)(state.data.value0)) ])([ Halogen_HTML_Core.text(toHtmlText(state.data.value1)) ]);
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.Document.BlockViewer (line 59, column 7 - line 71, column 14): " + [ state.data.constructor.name ]);
                  })() ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          id: input.value.id,
          data: input.value.data
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Document.BlockViewer (line 81, column 16 - line 83, column 50): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($17) {
                          return Data_Maybe.Just.create(HandleInput.create($17));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Document.Viewer"] = $PS["Incentknow.Organisms.Document.Viewer"] || {};
  var exports = $PS["Incentknow.Organisms.Document.Viewer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Document_BlockViewer = $PS["Incentknow.Organisms.Document.BlockViewer"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderBlock = function (block) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "block";
                  }))(Incentknow_Data_Ids.ordDocumentBlockId)(Data_Symbol.SProxy.value)(block.id)(Incentknow_Organisms_Document_BlockViewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: block
                  })(function (v) {
                      return Data_Maybe.Nothing.value;
                  });
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-document org-document-viewer") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("blocks") ])(Data_Functor.map(Data_Functor.functorArray)(renderBlock)(state.document.blocks)) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          document: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Document.Viewer (line 66, column 16 - line 68, column 50): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($13) {
                          return Data_Maybe.Just.create(HandleInput.create($13));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Material.Viewer"] = $PS["Incentknow.Organisms.Material.Viewer"] || {};
  var exports = $PS["Incentknow.Organisms.Material.Viewer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Document_Viewer = $PS["Incentknow.Organisms.Document.Viewer"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var renderText = function (text) {
      var renderLine = function (line) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("line") ])([ Halogen_HTML_Core.text(line) ]);
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])(Data_Functor.map(Data_Functor.functorArray)(renderLine)(Data_String_Common.split("\x0a")(text)));
  };
  var initialState = function (input) {
      return {
          material: Incentknow_Data_Property.fromJsonToMaterialObject(input.value)
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Material.Viewer (line 87, column 16 - line 89, column 50): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var getMaterialData = function (v) {
      if (v instanceof Incentknow_Data_Property.MaterialObjectDraft) {
          return new Data_Maybe.Just(v.value0.data);
      };
      if (v instanceof Incentknow_Data_Property.MaterialObjectFocused) {
          return new Data_Maybe.Just(v.value0.data);
      };
      if (v instanceof Incentknow_Data_Property.MaterialObjectRelated) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Incentknow.Organisms.Material.Viewer (line 60, column 19 - line 63, column 39): " + [ v.constructor.name ]);
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-material-viewer") ])([ (function () {
                      var v = getMaterialData(state.material);
                      if (v instanceof Data_Maybe.Just && v.value0 instanceof Incentknow_Data_Entities.DocumentMaterialData) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "document";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Document_Viewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                              value: v.value0.value0
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Data_Maybe.Just && v.value0 instanceof Incentknow_Data_Entities.PlaintextMaterialData) {
                          return renderText(v.value0.value0);
                      };
                      return Halogen_HTML_Core.text("Error");
                  })() ]);
              };
          };
      };
  };                                     
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($25) {
                          return Data_Maybe.Just.create(HandleInput.create($25));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Content.ValueViewer"] = $PS["Incentknow.Organisms.Content.ValueViewer"] || {};
  var exports = $PS["Incentknow.Organisms.Content.ValueViewer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_ContentLink = $PS["Incentknow.Molecules.ContentLink"];
  var Incentknow_Organisms_Material_Viewer = $PS["Incentknow.Organisms.Material.Viewer"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var initialState = function (input) {
      return {
          value: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                          return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueViewer (line 138, column 16 - line 143, column 44): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var toStringOrEmpty = (function () {
                  var $41 = Data_Maybe.fromMaybe("");
                  return function ($42) {
                      return $41(Data_Argonaut_Core.toString($42));
                  };
              })();
              var toMaybe = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueViewer (line 122, column 13 - line 124, column 22): " + [ v.constructor.name ]);
              };
              var referenceValueWith = function (value) {
                  return function (mk) {
                      if (value instanceof Incentknow_Data_Property.JustReference) {
                          return mk(value.value0);
                      };
                      if (value instanceof Incentknow_Data_Property.NullReference) {
                          return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("null") ])([ Halogen_HTML_Core.text("Null") ]);
                      };
                      if (value instanceof Incentknow_Data_Property.DeletedReference) {
                          return Halogen_HTML_Core.text("\u524a\u9664\u3055\u308c\u307e\u3057\u305f");
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueViewer (line 132, column 33 - line 135, column 42): " + [ value.constructor.name ]);
                  };
              };
              var maybeNullWith = function (value) {
                  return function (mk) {
                      if (value instanceof Data_Maybe.Just) {
                          return mk(value.value0);
                      };
                      if (value instanceof Data_Maybe.Nothing) {
                          return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("null") ])([ Halogen_HTML_Core.text("Null") ]);
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueViewer (line 127, column 28 - line 129, column 57): " + [ value.constructor.name ]);
                  };
              };
              var fromStringOrNull = function (x) {
                  var $22 = x === "";
                  if ($22) {
                      return Data_Argonaut_Core.jsonNull;
                  };
                  return Data_Argonaut_Core.fromString(x);
              };
              if (state.value instanceof Incentknow_Data_Property.EnumTypedValue) {
                  var enumMap = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return new Data_Tuple.Tuple(x.id, x.displayName);
                  })(state.value.value0));
                  return Halogen_HTML_Core.text(Data_Maybe.maybe("")(function (x) {
                      return Data_Maybe.fromMaybe("")(Data_Map_Internal.lookup(Data_Ord.ordString)(x)(enumMap));
                  })(state.value.value1));
              };
              if (state.value instanceof Incentknow_Data_Property.StringTypedValue) {
                  return maybeNullWith(state.value.value0)(function (x) {
                      return Halogen_HTML_Core.text(x);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.IntTypedValue) {
                  return maybeNullWith(state.value.value0)(function (x) {
                      return Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(x));
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.BoolTypedValue) {
                  return maybeNullWith(state.value.value0)(function (x) {
                      return Halogen_HTML_Core.text(Data_Show.show(Data_Show.showBoolean)(x));
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.TextTypedValue) {
                  return referenceValueWith(state.value.value0)(function (value) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "material";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_Viewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          value: value
                      })(Data_Void.absurd);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.ContentTypedValue) {
                  return referenceValueWith(state.value.value1)(function (value) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "contentLink";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_ContentLink.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: value
                      })(Data_Void.absurd);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.EntityTypedValue) {
                  return referenceValueWith(state.value.value1)(function (value) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "contentLink";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_ContentLink.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: value
                      })(Data_Void.absurd);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.DocumentTypedValue) {
                  return referenceValueWith(state.value.value0)(function (value) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "material";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_Viewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          value: value
                      })(Data_Void.absurd);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.UrlTypedValue) {
                  return maybeNullWith(state.value.value0)(function (x) {
                      return Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(x) ])([ Halogen_HTML_Core.text(x) ]);
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.ArrayTypedValue) {
                  return Halogen_HTML_Elements.div([  ])([  ]);
              };
              if (state.value instanceof Incentknow_Data_Property.ObjectTypedValue) {
                  var renderProperty = function (prop) {
                      return Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("property-type") ])((function () {
                          if (prop.info.type instanceof Incentknow_Data_Entities.ContentType) {
                              return [ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Container(prop.info.type.value0.space.displayId, prop.info.type.value0.displayId))([  ])([ Incentknow_Atoms_Icon.propertyIcon(prop.info), Halogen_HTML_Core.text(prop.info.displayName) ]) ];
                          };
                          return [ Incentknow_Atoms_Icon.propertyIcon(prop.info), Halogen_HTML_Core.text(prop.info.displayName) ];
                      })()), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("property-value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "property";
                      }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.info.id)(component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          value: prop.value
                      })(Data_Void.absurd) ]) ]);
                  };
                  return Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.tbody_(Data_Functor.map(Data_Functor.functorArray)(renderProperty)(state.value.value0)) ]);
              };
              if (state.value instanceof Incentknow_Data_Property.ImageTypedValue) {
                  return maybeNullWith(state.value.value0)(function (x) {
                      return Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(x) ]);
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueViewer (line 68, column 16 - line 116, column 68): " + [ state.value.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($43) {
                          return Data_Maybe.Just.create(HandleInput.create($43));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.UserCard"] = $PS["Incentknow.Organisms.UserCard"] || {};
  var exports = $PS["Incentknow.Organisms.UserCard"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-usercard") ])([ Incentknow_HTML_Utils.link_(Navigate.create)(new Incentknow_Route.User(state.user.displayId, Incentknow_Route.UserMain.value))([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getIconUrl(state.user.iconImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.User(state.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(state.user.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("timestamp") ])([ Incentknow_HTML_DateTime.dateTime(state.timestamp) ]) ]) ]);
  };
  var initialState = function (input) {
      return {
          user: input.user,
          timestamp: input.timestamp
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0);
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.UserCard (line 58, column 16 - line 61, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff)(dictBehaviour),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($10) {
                      return Data_Maybe.Just.create(HandleInput.create($10));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Templates.Page"] = $PS["Incentknow.Templates.Page"] || {};
  var exports = $PS["Incentknow.Templates.Page"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var upperTabPage = function (dictEq) {
      return function (input) {
          return function (menu) {
              return function (body) {
                  var renderTab = function (tab) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tab-item" + (function () {
                          var $8 = Data_Eq.eq(dictEq)(input.currentTab)(tab);
                          if ($8) {
                              return " selected";
                          };
                          return "";
                      })()), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(input.onChangeTab(tab));
                      }) ])([ input.showTab(tab) ]);
                  };
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-upper-tab-page") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("menu") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(renderTab)(input.tabs))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("space") ])([  ]) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("ext-menu") ])(menu) ]))) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])(body) ]);
              };
          };
      };
  };
  var tabPage = function (dictEq) {
      return function (input) {
          return function (menu) {
              return function (header) {
                  return function (body) {
                      var renderTab = function (tab) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tab-item" + ((function () {
                              var $9 = Data_Eq.eq(dictEq)(input.currentTab)(tab);
                              if ($9) {
                                  return " selected";
                              };
                              return "";
                          })() + (function () {
                              if (input.isTabAlphabet) {
                                  return " alphabet";
                              };
                              return "";
                          })())), Halogen_HTML_Events.onClick(function (v) {
                              return Data_Maybe.Just.create(input.onChangeTab(tab));
                          }) ])(input.showTab(tab));
                      };
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-tab-page") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])(header), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("menu") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(renderTab)(input.tabs))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("space") ])([  ]) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("ext-menu") ])(menu) ]))) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])(body) ]);
                  };
              };
          };
      };
  };
  var sectionWithHeader = function (class_) {
      return function (header) {
          return function (body) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-section-with-header" + (" " + class_)) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])(header), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])(body) ]);
          };
      };
  };
  var verticalTabPage = function (dictEq) {
      return function (cls) {
          return function (input) {
              return function (header) {
                  return function (body) {
                      var renderTab = function (tab) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tab-item" + (function () {
                              var $12 = Data_Eq.eq(dictEq)(input.currentTab)(tab);
                              if ($12) {
                                  return " selected";
                              };
                              return "";
                          })()), Halogen_HTML_Events.onClick(function (v) {
                              return Data_Maybe.Just.create(input.onChangeTab(tab));
                          }) ])(input.showTab(tab));
                      };
                      return sectionWithHeader("tmp-vertical-tab-page" + (" " + cls))(header)([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("sidemenu") ])(Data_Functor.map(Data_Functor.functorArray)(renderTab)(input.tabs)), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])(body) ]);
                  };
              };
          };
      };
  };
  var section = function (class_) {
      return function (body) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-section" + (" " + class_)) ])(body);
      };
  };
  var creationPage = function (input) {
      return function (body) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-creation-page") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text(input.title) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(input.desc) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])(body) ]);
      };
  };
  exports["tabPage"] = tabPage;
  exports["upperTabPage"] = upperTabPage;
  exports["verticalTabPage"] = verticalTabPage;
  exports["section"] = section;
  exports["sectionWithHeader"] = sectionWithHeader;
  exports["creationPage"] = creationPage;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Content.Viewer"] = $PS["Incentknow.Organisms.Content.Viewer"] || {};
  var exports = $PS["Incentknow.Organisms.Content.Viewer"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Content_ValueViewer = $PS["Incentknow.Organisms.Content.ValueViewer"];
  var Incentknow_Organisms_UserCard = $PS["Incentknow.Organisms.UserCard"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var semantic = Incentknow_Data_Content.getContentSemanticData(state.content.data)(state.content.format);
              var renderSection = function (prop) {
                  return Incentknow_Templates_Page.sectionWithHeader("section")([ Halogen_HTML_Core.text(prop.info.displayName) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("section-value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "value";
                  }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.info.id))(Incentknow_Organisms_Content_ValueViewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toTypedValue(prop.value)(prop.info.type)
                  })(Data_Void.absurd) ]) ]);
              };
              var comp = Incentknow_Data_Property.toPropertyComposition(false)(Incentknow_Data_Property.mkProperties(state.content.data)(state.content.format.currentStructure.properties));
              var infoProps = (function () {
                  if (semantic.titleProperty instanceof Data_Maybe.Just) {
                      return Data_Array.filter(function (x) {
                          return Data_Eq.notEq(Incentknow_Data_Ids.eqPropertyId)(x.info.id)(semantic.titleProperty.value0.info.id);
                      })(comp.info);
                  };
                  if (semantic.titleProperty instanceof Data_Maybe.Nothing) {
                      return comp.info;
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.Viewer (line 97, column 15 - line 99, column 25): " + [ semantic.titleProperty.constructor.name ]);
              })();
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-content-viewer") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Incentknow_Templates_Page.section("top")([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Incentknow_HTML_Utils.maybeElem(semantic.titleProperty)(function (title) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title-property") ])([ Halogen_HTML_Core.text(title.info.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title-text") ])([ Halogen_HTML_Core.text(title.text) ]) ]);
              }), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side-format") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Container(state.content.format.space.displayId, state.content.format.displayId))([  ])([ Incentknow_Atoms_Icon.formatWithIcon(state.content.format) ]), Incentknow_HTML_Utils.whenElem(Data_Eq.eq(Incentknow_Data_Entities.eqAuthority)(state.content.authority)(Incentknow_Data_Entities.AuthorityWritable.value))(function (v) {
                  return Incentknow_HTML_Utils.link(NavigateRoute.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetContent(state.content.contentId))))([ Incentknow_HTML_Utils.css("edit") ])([ Halogen_HTML_Core.text("\u7de8\u96c6") ]);
              }) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side-user") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "userCard";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_UserCard.component(dictMonadAff)(dictBehaviour))({
                  user: state.content.creatorUser,
                  timestamp: state.content.createdAt
              })(Data_Void.absurd) ]) ]) ]), Incentknow_HTML_Utils.whenElem(Data_Array.length(infoProps) > 0)(function (v) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "value";
                  }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)("top")(Incentknow_Organisms_Content_ValueViewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toTypedValue(state.content.data)(Incentknow_Data_Entities.ObjectType.create(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                          return v1.info;
                      })(infoProps)))
                  })(Data_Void.absurd) ]);
              }) ]) ])(Data_Functor.map(Data_Functor.functorArray)(renderSection)(comp.sections)));
          };
      };
  };
  var initialState = function (input) {
      return {
          content: input.content
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof NavigateRoute) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.Viewer (line 113, column 16 - line 116, column 49): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($20) {
                          return Data_Maybe.Just.create(HandleInput.create($20));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.DataGridView"] = $PS["Incentknow.Organisms.DataGridView"] || {};
  var exports = $PS["Incentknow.Organisms.DataGridView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var renderTable = function (items) {
      var renderHeaderColumn = function (prop) {
          return Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text(prop.displayName) ]);
      };
      var renderCell = function (prop) {
          return Halogen_HTML_Elements.td([  ])([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe("")(Data_Argonaut_Core.toString(prop.value))) ]);
      };
      var properties = Data_Maybe.maybe([  ])(function (x) {
          return x.format.currentStructure.properties;
      })(Data_Array.head(items));
      var renderContent = function (item) {
          return Halogen_HTML_Elements.tr([  ])(Data_Functor.map(Data_Functor.functorArray)(renderCell)(Incentknow_Data_Property.mkProperties(item.data)(properties)));
      };
      return Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.thead([  ])([ Halogen_HTML_Elements.tr([  ])(Data_Functor.map(Data_Functor.functorArray)(renderHeaderColumn)(properties)) ]), Halogen_HTML_Elements.tbody([  ])(Data_Functor.map(Data_Functor.functorArray)(renderContent)(items)) ]);
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-datagridview") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.items)(function (items) {
                  return renderTable(items);
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          items: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.DataGridView (line 85, column 16 - line 88, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($13) {
                          return Data_Maybe.Just.create(HandleInput.create($13));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.ConpactContentView"] = $PS["Incentknow.Organisms.ConpactContentView"] || {};
  var exports = $PS["Incentknow.Organisms.ConpactContentView"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Content_ValueViewer = $PS["Incentknow.Organisms.Content.ValueViewer"];
  var Incentknow_Organisms_UserCard = $PS["Incentknow.Organisms.UserCard"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var Expand = (function () {
      function Expand() {

      };
      Expand.value = new Expand();
      return Expand;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var semantic = Incentknow_Data_Content.getContentSemanticData(state.content.data)(state.content.format);
              var renderSection = function (prop) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("material") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("property") ])([ Halogen_HTML_Core.text(prop.info.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "value";
                  }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.info.id))(Incentknow_Organisms_Content_ValueViewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toTypedValue(prop.value)(prop.info.type)
                  })(Data_Void.absurd) ]) ]);
              };
              var comp = Incentknow_Data_Property.toPropertyComposition(false)(Incentknow_Data_Property.mkProperties(state.content.data)(state.content.format.currentStructure.properties));
              var infoProps = (function () {
                  if (semantic.titleProperty instanceof Data_Maybe.Just) {
                      return Data_Array.filter(function (x) {
                          return Data_Eq.notEq(Incentknow_Data_Ids.eqPropertyId)(x.info.id)(semantic.titleProperty.value0.info.id);
                      })(comp.info);
                  };
                  if (semantic.titleProperty instanceof Data_Maybe.Nothing) {
                      return comp.info;
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.ConpactContentView (line 101, column 15 - line 103, column 25): " + [ semantic.titleProperty.constructor.name ]);
              })();
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-conpact-content-view") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body" + (function () {
                  var $18 = state.isExpanded || !state.overHeight;
                  if ($18) {
                      return "";
                  };
                  return " folded";
              })()), Halogen_HTML_Properties.ref("body") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("user") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "userCard";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_UserCard.component(dictMonadAff)(dictBehaviour))({
                  user: state.content.creatorUser,
                  timestamp: state.content.createdAt
              })(Data_Void.absurd) ]), Incentknow_HTML_Utils.whenElem(Data_Array.length(infoProps) > 0)(function (v) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "value";
                  }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)("top")(Incentknow_Organisms_Content_ValueViewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toTypedValue(state.content.data)(Incentknow_Data_Entities.ObjectType.create(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                          return v1.info;
                      })(infoProps)))
                  })(Data_Void.absurd) ]);
              }) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Content(state.content.contentId))([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text(semantic.title) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("materials") ])(Data_Functor.map(Data_Functor.functorArray)(renderSection)(comp.sections)) ]) ]), Incentknow_HTML_Utils.whenElem(state.overHeight)(function (v) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("expand"), Halogen_HTML_Events.onClick(function (v1) {
                      return new Data_Maybe.Just(Expand.value);
                  }) ])([ (function () {
                      if (state.isExpanded) {
                          return Incentknow_Atoms_Icon.iconSolid("angle-up");
                      };
                      return Incentknow_Atoms_Icon.iconSolid("angle-down");
                  })() ]);
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          content: input.value,
          isExpanded: false,
          overHeight: false
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("body"))(function (maybeElement) {
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_DOM_Element.clientHeight(Web_HTML_HTMLElement.toElement(element))))(function (height) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $21 = {};
                                      for (var $22 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $22)) {
                                              $21[$22] = v1[$22];
                                          };
                                      };
                                      $21.overHeight = height > 300.0;
                                      return $21;
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                          return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof NavigateRoute) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  if (v instanceof Expand) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                          var $28 = {};
                          for (var $29 in x) {
                              if ({}.hasOwnProperty.call(x, $29)) {
                                  $28[$29] = x[$29];
                              };
                          };
                          $28.isExpanded = !x.isExpanded;
                          return $28;
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.ConpactContentView (line 117, column 16 - line 129, column 63): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($31) {
                          return Data_Maybe.Just.create(HandleInput.create($31));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.FocusedView"] = $PS["Incentknow.Organisms.FocusedView"] || {};
  var exports = $PS["Incentknow.Organisms.FocusedView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_ConpactContentView = $PS["Incentknow.Organisms.ConpactContentView"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderContent = function (content) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "content";
                  }))(Incentknow_Data_Ids.ordContentId)(Data_Symbol.SProxy.value)(content.contentId)(Incentknow_Organisms_ConpactContentView.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: content
                  })(Data_Void.absurd) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-focused-view") ])(Data_Functor.map(Data_Functor.functorArray)(renderContent)(state.items));
          };
      };
  };
  var initialState = function (input) {
      return {
          items: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.FocusedView (line 68, column 16 - line 71, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($13) {
                          return Data_Maybe.Just.create(HandleInput.create($13));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.ListView"] = $PS["Incentknow.Organisms.ListView"] || {};
  var exports = $PS["Incentknow.Organisms.ListView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderItem = function (item) {
                  var showProperty = function (prop) {
                      var str = (function () {
                          var v = Incentknow_Data_Property.toTypedValue(prop.value)(prop.info.type);
                          if (v instanceof Incentknow_Data_Property.IntTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Data_Show.show(Data_Show.showInt)(v.value0.value0));
                          };
                          if (v instanceof Incentknow_Data_Property.BoolTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Data_Show.show(Data_Show.showBoolean)(v.value0.value0));
                          };
                          if (v instanceof Incentknow_Data_Property.StringTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(v.value0.value0);
                          };
                          if (v instanceof Incentknow_Data_Property.TextTypedValue && v.value0 instanceof Incentknow_Data_Property.JustReference) {
                              var v1 = Incentknow_Data_Property.fromJsonToMaterialObject(v.value0.value0);
                              if (v1 instanceof Incentknow_Data_Property.MaterialObjectRelated) {
                                  return new Data_Maybe.Just(v1.value0.displayName);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          if (v instanceof Incentknow_Data_Property.EnumTypedValue && v.value1 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                  return v1.displayName;
                              })(Data_Array.head(Data_Array.filter(function (en) {
                                  return en.id === v.value1.value0;
                              })(v.value0)));
                          };
                          if (v instanceof Incentknow_Data_Property.ContentTypedValue && v.value1 instanceof Incentknow_Data_Property.JustReference) {
                              var sm = Incentknow_Data_Content.getContentSemanticData(v.value1.value0.data)(v.value1.value0.format);
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                  return v1.text;
                              })(sm.titleProperty);
                          };
                          if (v instanceof Incentknow_Data_Property.DocumentTypedValue && v.value0 instanceof Incentknow_Data_Property.JustReference) {
                              var v1 = Incentknow_Data_Property.fromJsonToMaterialObject(v.value0.value0);
                              if (v1 instanceof Incentknow_Data_Property.MaterialObjectRelated) {
                                  return new Data_Maybe.Just(v1.value0.displayName);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          return Data_Maybe.Nothing.value;
                      })();
                      return Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
                          var $36 = Data_String_CodePoints.length(x) > 15;
                          if ($36) {
                              return (Data_String_CodeUnits.splitAt(15)(x)).before + "...";
                          };
                          return x;
                      })(str);
                  };
                  var semantic = Incentknow_Data_Content.getContentSemanticData(item.data)(item.format);
                  var renderProperty = function (v) {
                      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("property") ])([ Incentknow_Atoms_Icon.propertyIcon(v.prop.info), Halogen_HTML_Core.text(v.str) ]);
                  };
                  var properties = Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (prop) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(function (str) {
                          return {
                              str: str,
                              prop: prop
                          };
                      })(showProperty(prop));
                  })(Data_Array.filter(function (x) {
                      return Data_Maybe.fromMaybe(true)(Data_Functor.map(Data_Maybe.functorMaybe)(function (title) {
                          return Data_Eq.notEq(Incentknow_Data_Ids.eqPropertyId)(title.info.id)(x.info.id);
                      })(semantic.titleProperty));
                  })(Incentknow_Data_Property.mkProperties(item.data)(item.format.currentStructure.properties))));
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("user") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.User(item.creatorUser.displayId, Incentknow_Route.UserMain.value))([  ])([ Incentknow_Atoms_Icon.userPlate(item.creatorUser) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Content(item.contentId))([  ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text(semantic.title) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("properties") ])(Data_Functor.map(Data_Functor.functorArray)(renderProperty)(properties)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("timestamp") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Content(item.contentId))([  ])([ Incentknow_HTML_DateTime.dateTime(item.createdAt) ]) ]) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-listview") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.items)(function (items) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("items") ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(items));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          items: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.ListView (line 124, column 16 - line 127, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($44) {
                          return Data_Maybe.Just.create(HandleInput.create($44));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.ContentList"] = $PS["Incentknow.Organisms.ContentList"] || {};
  var exports = $PS["Incentknow.Organisms.ContentList"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_DataGridView = $PS["Incentknow.Organisms.DataGridView"];
  var Incentknow_Organisms_FocusedView = $PS["Incentknow.Organisms.FocusedView"];
  var Incentknow_Organisms_ListView = $PS["Incentknow.Organisms.ListView"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var ListView = (function () {
      function ListView() {

      };
      ListView.value = new ListView();
      return ListView;
  })();
  var DataGridView = (function () {
      function DataGridView() {

      };
      DataGridView.value = new DataGridView();
      return DataGridView;
  })();
  var FocusedView = (function () {
      function FocusedView() {

      };
      FocusedView.value = new FocusedView();
      return FocusedView;
  })();
  var QueryByContainer = (function () {
      function QueryByContainer(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      QueryByContainer.create = function (value0) {
          return function (value1) {
              return new QueryByContainer(value0, value1);
          };
      };
      return QueryByContainer;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var ChageViewType = (function () {
      function ChageViewType(value0) {
          this.value0 = value0;
      };
      ChageViewType.create = function (value0) {
          return new ChageViewType(value0);
      };
      return ChageViewType;
  })();
  var FetchedFocused = (function () {
      function FetchedFocused(value0) {
          this.value0 = value0;
      };
      FetchedFocused.create = function (value0) {
          return new FetchedFocused(value0);
      };
      return FetchedFocused;
  })();
  var initialState = function (input) {
      return {
          contents: input.value,
          viewType: ListView.value,
          query: input.query,
          focused: Incentknow_API_Execution.Loading.value
      };
  };
  var eqViewType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ListView && y instanceof ListView) {
              return true;
          };
          if (x instanceof DataGridView && y instanceof DataGridView) {
              return true;
          };
          if (x instanceof FocusedView && y instanceof FocusedView) {
              return true;
          };
          return false;
      };
  });
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof ChageViewType) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $21 = {};
                      for (var $22 in v1) {
                          if ({}.hasOwnProperty.call(v1, $22)) {
                              $21[$22] = v1[$22];
                          };
                      };
                      $21.viewType = v.value0;
                      return $21;
                  }))(function () {
                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqViewType)(v.value0)(FocusedView.value))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.query)(function (query) {
                              return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFocused.create)(Incentknow_API.getFocusedContentsByDisplayId(query.value0)(query.value1));
                          });
                      }));
                  });
              };
              if (v instanceof FetchedFocused) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (focused) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $28 = {};
                          for (var $29 in v1) {
                              if ({}.hasOwnProperty.call(v1, $29)) {
                                  $28[$29] = v1[$29];
                              };
                          };
                          $28.focused = focused;
                          return $28;
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.ContentList (line 127, column 16 - line 140, column 40): " + [ v.constructor.name ]);
          };
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return (function () {
                  var $33 = Data_Maybe.isJust(state.query);
                  if ($33) {
                      return Incentknow_Templates_Page.sectionWithHeader("org-content-list")([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML_Core.text(Data_Maybe.maybe("...")(Data_Show.show(Data_Show.showInt))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.length)(Incentknow_API_Execution.toMaybe(state.contents))) + "\u4ef6\u306e\u30b3\u30f3\u30c6\u30f3\u30c4") ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("viewtype") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("item" + (function () {
                          var $34 = Data_Eq.eq(eqViewType)(state.viewType)(ListView.value);
                          if ($34) {
                              return " selected";
                          };
                          return "";
                      })()), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(new ChageViewType(ListView.value));
                      }) ])([ Incentknow_Atoms_Icon.icon("fas fa-th-list") ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("item" + (function () {
                          var $35 = Data_Eq.eq(eqViewType)(state.viewType)(FocusedView.value);
                          if ($35) {
                              return " selected";
                          };
                          return "";
                      })()), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(new ChageViewType(FocusedView.value));
                      }) ])([ Incentknow_Atoms_Icon.icon("fas fa-bars") ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("item" + (function () {
                          var $36 = Data_Eq.eq(eqViewType)(state.viewType)(DataGridView.value);
                          if ($36) {
                              return " selected";
                          };
                          return "";
                      })()), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(new ChageViewType(DataGridView.value));
                      }) ])([ Incentknow_Atoms_Icon.icon("fas fa-th") ]) ]) ]);
                  };
                  return Incentknow_Templates_Page.section("org-content-list");
              })()([ (function () {
                  if (state.viewType instanceof ListView) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "listView";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_ListView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: state.contents
                      })(Data_Void.absurd);
                  };
                  if (state.viewType instanceof DataGridView) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "dataGridView";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_DataGridView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: state.contents
                      })(Data_Void.absurd);
                  };
                  if (state.viewType instanceof FocusedView) {
                      return Incentknow_Atoms_Icon.remoteWith(state.focused)(function (focused) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "focusedView";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_FocusedView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: focused
                          })(Data_Void.absurd);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.ContentList (line 116, column 5 - line 123, column 104): " + [ state.viewType.constructor.name ]);
              })() ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($37) {
                          return Data_Maybe.Just.create(HandleInput.create($37));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["QueryByContainer"] = QueryByContainer;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Templates.Main"] = $PS["Incentknow.Templates.Main"] || {};
  var exports = $PS["Incentknow.Templates.Main"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var centerize = function (elements) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-main_centerize") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side") ])([  ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])(elements), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side") ])([  ]) ]);
  };
  var main = function (input) {
      var message = function (msg) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-main_message") ])([ (function () {
              if (msg instanceof Incentknow_AppM["Error"]) {
                  return Incentknow_Atoms_Message.error(msg.value0);
              };
              if (msg instanceof Incentknow_AppM.Success) {
                  return Incentknow_Atoms_Message.success(msg.value0);
              };
              throw new Error("Failed pattern match at Incentknow.Templates.Main (line 43, column 9 - line 45, column 39): " + [ msg.constructor.name ]);
          })() ]);
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-main") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ centerize([ input.header ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("body") ])([ Halogen_HTML_Elements.div([  ])(Data_Functor.map(Data_Functor.functorArray)(message)(input.messages)), input.body ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("footer") ])([ centerize([ input.footer ]) ]) ]);
  };
  var centerLayout = function (input) {
      return function (body) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-center-layout " + input.css) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side leftside") ])(input.leftSide), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tmp-main_section") ])(body) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("side rightside") ])(input.rightSide) ]);
      };
  };
  exports["main"] = main;
  exports["centerLayout"] = centerLayout;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Content"] = $PS["Incentknow.Pages.Content"] || {};
  var exports = $PS["Incentknow.Pages.Content"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map = $PS["Data.Map"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Set = $PS["Data.Set"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Comments = $PS["Incentknow.Organisms.Comments"];
  var Incentknow_Organisms_Content_Viewer = $PS["Incentknow.Organisms.Content.Viewer"];
  var Incentknow_Organisms_ContentList = $PS["Incentknow.Organisms.ContentList"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var FetchedContentPage = (function () {
      function FetchedContentPage(value0) {
          this.value0 = value0;
      };
      FetchedContentPage.create = function (value0) {
          return new FetchedContentPage(value0);
      };
      return FetchedContentPage;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0) {
          this.value0 = value0;
      };
      NavigateRoute.create = function (value0) {
          return new NavigateRoute(value0);
      };
      return NavigateRoute;
  })();
  var ChangeRelationTab = (function () {
      function ChangeRelationTab(value0) {
          this.value0 = value0;
      };
      ChangeRelationTab.create = function (value0) {
          return new ChangeRelationTab(value0);
      };
      return ChangeRelationTab;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Incentknow_Templates_Main.centerLayout({
                  css: "page-content",
                  leftSide: [  ],
                  rightSide: [  ]
              })([ Incentknow_Atoms_Icon.remoteWith(state.page)(function (page) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "content";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Content_Viewer.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      content: page.content
                  })(Data_Void.absurd);
              }), Incentknow_Atoms_Icon.remoteWith(state.relations)(function (relations) {
                  return Incentknow_HTML_Utils.whenElem(!Data_Map_Internal.isEmpty(relations))(function (v) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-content-relations") ])([ Incentknow_Templates_Page.upperTabPage(Incentknow_Data_Ids.eqFormatId)({
                          tabs: Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Map.keys(relations)),
                          currentTab: state.tab,
                          onChangeTab: ChangeRelationTab.create,
                          showTab: function (x) {
                              return Halogen_HTML_Core.text(Data_Maybe.fromMaybe("Error")(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (y) {
                                  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                      return v1.format.displayName;
                                  })(Data_Array.head(y.contents));
                              })(Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatId)(state.tab)(relations)))));
                          }
                      })([  ])([ Incentknow_HTML_Utils.maybeElem(Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatId)(state.tab)(relations))(function (relation) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "contentList";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_ContentList.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: new Incentknow_API_Execution.Holding(relation.contents),
                              query: Data_Maybe.Nothing.value
                          })(Data_Void.absurd);
                      }) ]) ]);
                  });
              }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "comments";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Comments.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  value: Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v) {
                      return v.comments;
                  })(state.page),
                  contentId: Incentknow_API_Execution.toMaybe(Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v) {
                      return v.content.contentId;
                  })(state.page))
              })(Data_Void.absurd) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          contentSpec: input.contentSpec,
          page: Incentknow_API_Execution.Loading.value,
          tab: Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatId)(""),
          relations: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      if (state.contentSpec instanceof Incentknow_Route.ContentSpecContentId) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedContentPage.create)(Incentknow_API.getContentPage(state.contentSpec.value0));
                      };
                      if (state.contentSpec instanceof Incentknow_Route.ContentSpecSemanticId) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.Content (line 114, column 5 - line 119, column 18): " + [ state.contentSpec.constructor.name ]);
                  });
              };
              if (v instanceof FetchedContentPage) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.forItem(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (page) {
                          if (state.contentSpec instanceof Incentknow_Route.ContentSpecSemanticId) {
                              return Incentknow_AppM.pushState(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.Content(page.content.contentId));
                          };
                          if (state.contentSpec instanceof Incentknow_Route.ContentSpecContentId) {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.Content (line 124, column 7 - line 127, column 52): " + [ state.contentSpec.constructor.name ]);
                      }))(function () {
                          return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (page) {
                              var relations = Data_Functor.map(Incentknow_API_Execution.functorRemote)((function () {
                                  var $36 = Data_Map_Internal.fromFoldable(Incentknow_Data_Ids.ordFormatId)(Data_Foldable.foldableArray);
                                  var $37 = Data_Functor.map(Data_Functor.functorArray)(function (x) {
                                      return new Data_Tuple.Tuple(x.relation.formatId, x);
                                  });
                                  return function ($38) {
                                      return $36($37($38));
                                  };
                              })())(Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v1) {
                                  return v1.relations;
                              })(page));
                              var tab = Data_Maybe.fromMaybe(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatId)(""))(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                                  var $39 = Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray);
                                  return function ($40) {
                                      return Data_Array.head($39(Data_Map.keys($40)));
                                  };
                              })())(Incentknow_API_Execution.toMaybe(relations))));
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $24 = {};
                                  for (var $25 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $25)) {
                                          $24[$25] = v1[$25];
                                      };
                                  };
                                  $24.page = page;
                                  $24.relations = relations;
                                  $24.tab = tab;
                                  return $24;
                              });
                          });
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Route.eqContentSpec)(v.value0.contentSpec)(state.contentSpec))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                          return handleAction(dictBehaviour)(dictMonadAff)(Initialize.value);
                      }));
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              if (v instanceof NavigateRoute) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof ChangeRelationTab) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $32 = {};
                      for (var $33 in v1) {
                          if ({}.hasOwnProperty.call(v1, $33)) {
                              $32[$33] = v1[$33];
                          };
                      };
                      $32.tab = v.value0;
                      return $32;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Pages.Content (line 111, column 16 - line 141, column 30): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($41) {
                      return Data_Maybe.Just.create(HandleInput.create($41));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.ContextMenu"] = $PS["Incentknow.Molecules.ContextMenu"] || {};
  var exports = $PS["Incentknow.Molecules.ContextMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];                
  var LinkItem = (function () {
      function LinkItem(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      LinkItem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new LinkItem(value0, value1, value2);
              };
          };
      };
      return LinkItem;
  })();
  var EventItem = (function () {
      function EventItem(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      EventItem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new EventItem(value0, value1, value2);
              };
          };
      };
      return EventItem;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ShowMenu = (function () {
      function ShowMenu() {

      };
      ShowMenu.value = new ShowMenu();
      return ShowMenu;
  })();
  var MouseEnterMenu = (function () {
      function MouseEnterMenu() {

      };
      MouseEnterMenu.value = new MouseEnterMenu();
      return MouseEnterMenu;
  })();
  var MouseLeaveMenu = (function () {
      function MouseLeaveMenu() {

      };
      MouseLeaveMenu.value = new MouseLeaveMenu();
      return MouseLeaveMenu;
  })();
  var ClickItem = (function () {
      function ClickItem(value0) {
          this.value0 = value0;
      };
      ClickItem.create = function (value0) {
          return new ClickItem(value0);
      };
      return ClickItem;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var OnBlur = (function () {
      function OnBlur() {

      };
      OnBlur.value = new OnBlur();
      return OnBlur;
  })();
  var render = function (state) {
      var renderItem = function (item) {
          return Halogen_HTML_Elements.li([ Incentknow_HTML_Utils.css("item"), Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(new ClickItem(item));
          }) ])((function () {
              if (item instanceof LinkItem) {
                  return [ Incentknow_Atoms_Icon.iconSolid(item.value0), Halogen_HTML_Core.text(item.value1) ];
              };
              if (item instanceof EventItem) {
                  return [ Incentknow_Atoms_Icon.iconSolid(item.value0), Halogen_HTML_Core.text(item.value1) ];
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.ContextMenu (line 98, column 9 - line 100, column 68): " + [ item.constructor.name ]);
          })());
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-context-menu" + (function () {
          if (state.visibleButton) {
              return "";
          };
          return " notvisible";
      })()) ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("button" + (function () {
          if (state.visibleButton) {
              return "";
          };
          return " notvisible";
      })()), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(ShowMenu.value);
      }), Halogen_HTML_Events.onBlur(function (v) {
          return new Data_Maybe.Just(OnBlur.value);
      }), Halogen_HTML_Properties.tabIndex(1) ])([ Incentknow_Atoms_Icon.iconSolid("ellipsis-h") ]), Incentknow_HTML_Utils.whenElem(state.isFocused)(function (v) {
          return Halogen_HTML_Elements.ul([ Incentknow_HTML_Utils.css("listbox"), Halogen_HTML_Events.onMouseEnter(function (v1) {
              return new Data_Maybe.Just(MouseEnterMenu.value);
          }), Halogen_HTML_Events.onMouseLeave(function (v1) {
              return new Data_Maybe.Just(MouseLeaveMenu.value);
          }) ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(state.items));
      }) ]);
  };
  var initialState = function (input) {
      return {
          items: input.items,
          isFocused: false,
          visibleButton: input.visibleButton,
          isMouseEnterMenu: false
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof ShowMenu) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $28 = {};
                      for (var $29 in v1) {
                          if ({}.hasOwnProperty.call(v1, $29)) {
                              $28[$29] = v1[$29];
                          };
                      };
                      $28.isFocused = true;
                      return $28;
                  });
              };
              if (v instanceof OnBlur) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                      if (x.isMouseEnterMenu) {
                          return x;
                      };
                      var $32 = {};
                      for (var $33 in x) {
                          if ({}.hasOwnProperty.call(x, $33)) {
                              $32[$33] = x[$33];
                          };
                      };
                      $32.isFocused = false;
                      return $32;
                  });
              };
              if (v instanceof MouseEnterMenu) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $35 = {};
                      for (var $36 in v1) {
                          if ({}.hasOwnProperty.call(v1, $36)) {
                              $35[$36] = v1[$36];
                          };
                      };
                      $35.isMouseEnterMenu = true;
                      return $35;
                  });
              };
              if (v instanceof MouseLeaveMenu) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $38 = {};
                      for (var $39 in v1) {
                          if ({}.hasOwnProperty.call(v1, $39)) {
                              $38[$39] = v1[$39];
                          };
                      };
                      $38.isMouseEnterMenu = false;
                      return $38;
                  });
              };
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof ClickItem) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("ContextMenu.ClickItem")))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $41 = {};
                              for (var $42 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $42)) {
                                      $41[$42] = v1[$42];
                                  };
                              };
                              $41.isFocused = false;
                              $41.isMouseEnterMenu = false;
                              return $41;
                          }))(function () {
                              if (v.value0 instanceof LinkItem) {
                                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0.value2);
                              };
                              if (v.value0 instanceof EventItem) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(v.value0.value2(Data_Unit.unit)))(function () {
                                      return Halogen_Query_HalogenM.raise(v.value0.value1);
                                  });
                              };
                              throw new Error("Failed pattern match at Incentknow.Molecules.ContextMenu (line 116, column 5 - line 120, column 21): " + [ v.value0.constructor.name ]);
                          });
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $52 = {};
                      for (var $53 in v1) {
                          if ({}.hasOwnProperty.call(v1, $53)) {
                              $52[$53] = v1[$53];
                          };
                      };
                      $52.items = v.value0.items;
                      $52.visibleButton = v.value0.visibleButton;
                      return $52;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.ContextMenu (line 104, column 16 - line 121, column 96): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($56) {
                      return Data_Maybe.Just.create(HandleInput.create($56));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
  exports["EventItem"] = EventItem;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.DraftExplorer"] = $PS["Incentknow.Organisms.DraftExplorer"] || {};
  var exports = $PS["Incentknow.Organisms.DraftExplorer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_ContextMenu = $PS["Incentknow.Molecules.ContextMenu"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Reload = (function () {
      function Reload(value0) {
          this.value0 = value0;
      };
      Reload.create = function (value0) {
          return new Reload(value0);
      };
      return Reload;
  })();
  var SelectItem = (function () {
      function SelectItem(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SelectItem.create = function (value0) {
          return function (value1) {
              return new SelectItem(value0, value1);
          };
      };
      return SelectItem;
  })();
  var UpdateContentDraft = (function () {
      function UpdateContentDraft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      UpdateContentDraft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new UpdateContentDraft(value0, value1, value2);
              };
          };
      };
      return UpdateContentDraft;
  })();
  var UpdateMaterialDraft = (function () {
      function UpdateMaterialDraft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      UpdateMaterialDraft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new UpdateMaterialDraft(value0, value1, value2);
              };
          };
      };
      return UpdateMaterialDraft;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var FetchedDrafts = (function () {
      function FetchedDrafts(value0) {
          this.value0 = value0;
      };
      FetchedDrafts.create = function (value0) {
          return new FetchedDrafts(value0);
      };
      return FetchedDrafts;
  })();
  var FetchedMaterialDrafts = (function () {
      function FetchedMaterialDrafts(value0) {
          this.value0 = value0;
      };
      FetchedMaterialDrafts.create = function (value0) {
          return new FetchedMaterialDrafts(value0);
      };
      return FetchedMaterialDrafts;
  })();
  var MouseEnterItem = (function () {
      function MouseEnterItem(value0) {
          this.value0 = value0;
      };
      MouseEnterItem.create = function (value0) {
          return new MouseEnterItem(value0);
      };
      return MouseEnterItem;
  })();
  var MouseLeaveItem = (function () {
      function MouseLeaveItem() {

      };
      MouseLeaveItem.value = new MouseLeaveItem();
      return MouseLeaveItem;
  })();
  var ContextMenuInvoked = (function () {
      function ContextMenuInvoked(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ContextMenuInvoked.create = function (value0) {
          return function (value1) {
              return new ContextMenuInvoked(value0, value1);
          };
      };
      return ContextMenuInvoked;
  })();
  var toDraftSets = function (drafts) {
      var formats = Data_Map_Internal.fromFoldable(Incentknow_Data_Ids.ordFormatId)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
          return new Data_Tuple.Tuple(x.format.formatId, x.format);
      })(drafts));
      var formatIds = Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map_Internal.keys(formats));
      var draftsByFormat = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
          return Data_Map_Internal.alter(Incentknow_Data_Ids.ordFormatId)(function (v) {
              return Data_Maybe.Just.create(Data_Maybe.maybe([ x ])(function (v2) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2)([ x ]);
              })(v));
          })(x.format.formatId);
      })(Data_Map_Internal.empty)(drafts);
      return Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (f) {
              return {
                  format: f,
                  drafts: v.value1
              };
          })(Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatId)(v.value0)(formats));
      })(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(draftsByFormat)));
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var toUnit = function (src) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(src)(function () {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                  });
              };
              var renderNew = Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("new-draft") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text("\u65b0\u898f\u4f5c\u6210") ]) ]);
              var renderDraft = function (draft) {
                  var common = Incentknow_Data_Content.getContentSemanticData(draft.data)(draft.format);
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("draft" + (function () {
                      var $38 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqContentDraftId)(Incentknow_Data_Ids.eqMaterialDraftId)))(new Data_Maybe.Just(new Data_Either.Left(draft.draftId)))(state.selectedDraftId);
                      if ($38) {
                          return " selected";
                      };
                      return "";
                  })()), Halogen_HTML_Events.onMouseEnter(function (v) {
                      return Data_Maybe.Just.create(MouseEnterItem.create(new Data_Either.Right(draft.draftId)));
                  }), Halogen_HTML_Events.onMouseLeave(function (v) {
                      return new Data_Maybe.Just(MouseLeaveItem.value);
                  }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetDraft(draft.draftId))))([  ])([ Halogen_HTML_Core.text(common.title) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("menu") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "contextMenuContent";
                  }))(Incentknow_Data_Ids.ordContentDraftId)(Data_Symbol.SProxy.value)(draft.draftId)(Incentknow_Molecules_ContextMenu.component(dictBehaviour)(dictMonadAff))({
                      items: [ Incentknow_Molecules_ContextMenu.EventItem.create("trash")("\u524a\u9664")(function (v) {
                          return toUnit(Incentknow_API_Execution.callCommand(Incentknow_API.cancelContentDraft(draft.draftId)));
                      }) ],
                      visibleButton: Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqMaterialDraftId)(Incentknow_Data_Ids.eqContentDraftId)))(state.hoverItem)(new Data_Maybe.Just(new Data_Either.Right(draft.draftId)))
                  })((function () {
                      var $106 = ContextMenuInvoked.create(new Data_Either.Right(draft.draftId));
                      return function ($107) {
                          return Data_Maybe.Just.create($106($107));
                      };
                  })()) ]) ]);
              };
              var renderDraftSet = function (item) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("draft-set") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Incentknow_Atoms_Icon.icon("fas fa-caret-down"), Halogen_HTML_Core.text(item.format.space.displayName + (" - " + item.format.displayName)), Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(new Data_Maybe.Just(item.format.space.spaceId), new Data_Maybe.Just(item.format.currentStructure.structureId)))))([ Incentknow_HTML_Utils.css("creation") ])([ Incentknow_Atoms_Icon.icon("far fa-plus") ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("drafts") ])(Data_Functor.map(Data_Functor.functorArray)(renderDraft)(item.drafts)) ]);
              };
              var normalizeName = function (name) {
                  var $39 = Data_String_CodePoints.length(Data_String_Common.trim(name)) === 0;
                  if ($39) {
                      return "\u7121\u540d";
                  };
                  return name;
              };
              var renderMaterialDraft = function (draft) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("draft" + (function () {
                      var $40 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqContentDraftId)(Incentknow_Data_Ids.eqMaterialDraftId)))(new Data_Maybe.Just(new Data_Either.Right(draft.draftId)))(state.selectedDraftId);
                      if ($40) {
                          return " selected";
                      };
                      return "";
                  })()), Halogen_HTML_Events.onMouseEnter(function (v) {
                      return Data_Maybe.Just.create(MouseEnterItem.create(new Data_Either.Left(draft.draftId)));
                  }), Halogen_HTML_Events.onMouseLeave(function (v) {
                      return new Data_Maybe.Just(MouseLeaveItem.value);
                  }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.MaterialTarget.create(new Incentknow_Route.MaterialTargetDraft(draft.draftId))))([  ])([ Halogen_HTML_Core.text(normalizeName(draft.displayName)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("menu") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "contextMenuMaterial";
                  }))(Incentknow_Data_Ids.ordMaterialDraftId)(Data_Symbol.SProxy.value)(draft.draftId)(Incentknow_Molecules_ContextMenu.component(dictBehaviour)(dictMonadAff))({
                      items: [ Incentknow_Molecules_ContextMenu.EventItem.create("trash")("\u524a\u9664")(function (v) {
                          return toUnit(Incentknow_API_Execution.callCommand(Incentknow_API.cancelMaterialDraft(draft.draftId)));
                      }) ],
                      visibleButton: Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqMaterialDraftId)(Incentknow_Data_Ids.eqContentDraftId)))(state.hoverItem)(new Data_Maybe.Just(new Data_Either.Left(draft.draftId)))
                  })((function () {
                      var $108 = ContextMenuInvoked.create(new Data_Either.Left(draft.draftId));
                      return function ($109) {
                          return Data_Maybe.Just.create($108($109));
                      };
                  })()) ]) ]);
              };
              var renderMaterialDraftSet = function (drafts) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("draft-set") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Incentknow_Atoms_Icon.icon("fas fa-caret-down"), Halogen_HTML_Core.text("Material"), Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.MaterialTarget.create(new Incentknow_Route.MaterialTargetBlank(Data_Maybe.Nothing.value))))([ Incentknow_HTML_Utils.css("creation") ])([ Incentknow_Atoms_Icon.icon("far fa-plus-circle") ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("drafts") ])(Data_Functor.map(Data_Functor.functorArray)(renderMaterialDraft)(drafts)) ]);
              };
              return Incentknow_Templates_Page.sectionWithHeader("org-draft-explorer")([ Halogen_HTML_Core.text("Drafts") ])([ Incentknow_HTML_Utils.whenElem(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqContentDraftId)(Incentknow_Data_Ids.eqMaterialDraftId)))(state.selectedDraftId)(Data_Maybe.Nothing.value))(function (v) {
                  return renderNew;
              }), Incentknow_Atoms_Icon.remoteWith(state.drafts)(function (drafts) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("box") ])(Data_Functor.map(Data_Functor.functorArray)(renderDraftSet)(toDraftSets(drafts)));
              }), Incentknow_Atoms_Icon.remoteWith(state.materialDrafts)(function (drafts) {
                  return Incentknow_HTML_Utils.whenElem(Data_Array.length(drafts) > 0)(function (v) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("box") ])([ renderMaterialDraftSet(drafts) ]);
                  });
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          drafts: Incentknow_API_Execution.Loading.value,
          materialDrafts: Incentknow_API_Execution.Loading.value,
          selectedDraftId: input.selectedDraftId,
          hoverItem: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedDrafts.create)(Incentknow_API.getMyContentDrafts(Data_Unit.unit)))(function () {
                      return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedMaterialDrafts.create)(Incentknow_API.getMyMaterialDrafts(Data_Unit.unit));
                  });
              };
              if (v instanceof ContextMenuInvoked && v.value0 instanceof Data_Either.Right) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedDrafts.create)(Incentknow_API.getMyContentDrafts(Data_Unit.unit)))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1 === "\u524a\u9664" && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqContentDraftId)(Incentknow_Data_Ids.eqMaterialDraftId)))(state.selectedDraftId)(Data_Maybe.Just.create(new Data_Either.Left(v.value0.value0))))(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value)))));
                      });
                  });
              };
              if (v instanceof ContextMenuInvoked && v.value0 instanceof Data_Either.Left) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedMaterialDrafts.create)(Incentknow_API.getMyMaterialDrafts(Data_Unit.unit)))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1 === "\u524a\u9664" && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Incentknow_Data_Ids.eqContentDraftId)(Incentknow_Data_Ids.eqMaterialDraftId)))(state.selectedDraftId)(Data_Maybe.Just.create(new Data_Either.Right(v.value0.value0))))(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value)))));
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $48 = {};
                      for (var $49 in v1) {
                          if ({}.hasOwnProperty.call(v1, $49)) {
                              $48[$49] = v1[$49];
                          };
                      };
                      $48.selectedDraftId = v.value0.selectedDraftId;
                      return $48;
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              if (v instanceof FetchedDrafts) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (drafts) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $54 = {};
                          for (var $55 in v1) {
                              if ({}.hasOwnProperty.call(v1, $55)) {
                                  $54[$55] = v1[$55];
                              };
                          };
                          $54.drafts = drafts;
                          return $54;
                      });
                  });
              };
              if (v instanceof FetchedMaterialDrafts) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (drafts) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $58 = {};
                          for (var $59 in v1) {
                              if ({}.hasOwnProperty.call(v1, $59)) {
                                  $58[$59] = v1[$59];
                              };
                          };
                          $58.materialDrafts = drafts;
                          return $58;
                      });
                  });
              };
              if (v instanceof MouseEnterItem) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $62 = {};
                      for (var $63 in v1) {
                          if ({}.hasOwnProperty.call(v1, $63)) {
                              $62[$63] = v1[$63];
                          };
                      };
                      $62.hoverItem = new Data_Maybe.Just(v.value0);
                      return $62;
                  });
              };
              if (v instanceof MouseLeaveItem) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $66 = {};
                      for (var $67 in v1) {
                          if ({}.hasOwnProperty.call(v1, $67)) {
                              $66[$67] = v1[$67];
                          };
                      };
                      $66.hoverItem = Data_Maybe.Nothing.value;
                      return $66;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.DraftExplorer (line 211, column 16 - line 234, column 56): " + [ v.constructor.name ]);
          };
      };
  };
  var getDisplayName = function (v) {
      if (v instanceof Incentknow_Data_Entities.PlaintextMaterialData) {
          return v.value0;
      };
      if (v instanceof Incentknow_Data_Entities.DocumentMaterialData) {
          return Data_String_Common.trim(Data_String_CodePoints.take(140)(Data_String_Common.joinWith(" ")(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function ($110) {
              return (function (v1) {
                  return v1.text;
              })(Incentknow_Data_EntityUtils.getBlockDataOptions((function (v1) {
                  return v1.data;
              })($110)));
          })(v.value0.blocks)))));
      };
      throw new Error("Failed pattern match at Incentknow.Organisms.DraftExplorer (line 257, column 18 - line 259, column 136): " + [ v.constructor.name ]);
  };
  var handleQuery = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Reload) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictMonadAff)(Initialize.value))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value0));
                  });
              };
              if (v instanceof SelectItem && v.value0 instanceof Data_Either.Right) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $74 = {};
                      for (var $75 in v1) {
                          if ({}.hasOwnProperty.call(v1, $75)) {
                              $74[$75] = v1[$75];
                          };
                      };
                      $74.selectedDraftId = Data_Maybe.Just.create(new Data_Either.Right(v.value0.value0));
                      return $74;
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedMaterialDrafts.create)(Incentknow_API.getMyMaterialDrafts(Data_Unit.unit)))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
                      });
                  });
              };
              if (v instanceof SelectItem && v.value0 instanceof Data_Either.Left) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $80 = {};
                      for (var $81 in v1) {
                          if ({}.hasOwnProperty.call(v1, $81)) {
                              $80[$81] = v1[$81];
                          };
                      };
                      $80.selectedDraftId = Data_Maybe.Just.create(new Data_Either.Left(v.value0.value0));
                      return $80;
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedDrafts.create)(Incentknow_API.getMyContentDrafts(Data_Unit.unit)))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
                      });
                  });
              };
              if (v instanceof UpdateContentDraft) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                      var $90 = {};
                      for (var $91 in x) {
                          if ({}.hasOwnProperty.call(x, $91)) {
                              $90[$91] = x[$91];
                          };
                      };
                      $90.drafts = Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (y) {
                          return Data_Functor.map(Data_Functor.functorArray)(function (draft) {
                              var $86 = Data_Eq.eq(Incentknow_Data_Ids.eqContentDraftId)(draft.draftId)(v.value0);
                              if ($86) {
                                  var $87 = {};
                                  for (var $88 in draft) {
                                      if ({}.hasOwnProperty.call(draft, $88)) {
                                          $87[$88] = draft[$88];
                                      };
                                  };
                                  $87.data = v.value1;
                                  return $87;
                              };
                              return draft;
                          })(y);
                      })(x.drafts);
                      return $90;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value2));
                  });
              };
              if (v instanceof UpdateMaterialDraft) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                      var $100 = {};
                      for (var $101 in x) {
                          if ({}.hasOwnProperty.call(x, $101)) {
                              $100[$101] = x[$101];
                          };
                      };
                      $100.materialDrafts = Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (y) {
                          return Data_Functor.map(Data_Functor.functorArray)(function (draft) {
                              var $96 = Data_Eq.eq(Incentknow_Data_Ids.eqMaterialDraftId)(draft.draftId)(v.value0);
                              if ($96) {
                                  var $97 = {};
                                  for (var $98 in draft) {
                                      if ({}.hasOwnProperty.call(draft, $98)) {
                                          $97[$98] = draft[$98];
                                      };
                                  };
                                  $97.displayName = getDisplayName(v.value1);
                                  return $97;
                              };
                              return draft;
                          })(y);
                      })(x.materialDrafts);
                      return $100;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value2));
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.DraftExplorer (line 237, column 15 - line 254, column 18): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: handleQuery(dictBehaviour)(dictMonadAff),
                      receive: function ($111) {
                          return Data_Maybe.Just.create(HandleInput.create($111));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["SelectItem"] = SelectItem;
  exports["UpdateContentDraft"] = UpdateContentDraft;
  exports["UpdateMaterialDraft"] = UpdateMaterialDraft;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.SelectMenuImpl"] = $PS["Incentknow.Molecules.SelectMenuImpl"] || {};
  var exports = $PS["Incentknow.Molecules.SelectMenuImpl"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var ChangeSearchWord = (function () {
      function ChangeSearchWord(value0) {
          this.value0 = value0;
      };
      ChangeSearchWord.create = function (value0) {
          return new ChangeSearchWord(value0);
      };
      return ChangeSearchWord;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var FocusTextArea = (function () {
      function FocusTextArea() {

      };
      FocusTextArea.value = new FocusTextArea();
      return FocusTextArea;
  })();
  var BlurTextArea = (function () {
      function BlurTextArea() {

      };
      BlurTextArea.value = new BlurTextArea();
      return BlurTextArea;
  })();
  var ClickTextArea = (function () {
      function ClickTextArea() {

      };
      ClickTextArea.value = new ClickTextArea();
      return ClickTextArea;
  })();
  var MouseEnterListBox = (function () {
      function MouseEnterListBox() {

      };
      MouseEnterListBox.value = new MouseEnterListBox();
      return MouseEnterListBox;
  })();
  var MouseLeaveListBox = (function () {
      function MouseLeaveListBox() {

      };
      MouseLeaveListBox.value = new MouseLeaveListBox();
      return MouseLeaveListBox;
  })();
  var Unselect = (function () {
      function Unselect() {

      };
      Unselect.value = new Unselect();
      return Unselect;
  })();
  var ClickItem = (function () {
      function ClickItem(value0) {
          this.value0 = value0;
      };
      ClickItem.create = function (value0) {
          return new ClickItem(value0);
      };
      return ClickItem;
  })();
  var ChangeFilter = (function () {
      function ChangeFilter(value0) {
          this.value0 = value0;
      };
      ChangeFilter.create = function (value0) {
          return new ChangeFilter(value0);
      };
      return ChangeFilter;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ClickValue = (function () {
      function ClickValue() {

      };
      ClickValue.value = new ClickValue();
      return ClickValue;
  })();
  var textbox_ = "textbox";
  var setInput = function (dictOrd) {
      return function (state) {
          return function (input) {
              return {
                  items: input.items,
                  searchWord: input.searchWord,
                  disabled: input.disabled,
                  isFocused: state.isFocused,
                  isMouseEnterListBox: state.isMouseEnterListBox,
                  textbox: state.textbox,
                  selectedItem: input.selectedItem,
                  message: state.message,
                  visibleCrossmark: input.visibleCrossmark
              };
          };
      };
  };
  var render = function (state) {
      var renderItem = function (item) {
          return Halogen_HTML_Elements.li([ Incentknow_HTML_Utils.css("item"), Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(new ClickItem(item));
          }) ])([ item.html ]);
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css((function () {
          if (state.disabled) {
              return "mol-select-menu disabled";
          };
          return "mol-select-menu";
      })()) ])([ (function () {
          var $34 = (Data_Maybe.isNothing(state.selectedItem) || state.isFocused) && !state.disabled;
          if ($34) {
              return Halogen_HTML_Elements.textarea([ Incentknow_HTML_Utils.css("filter"), Halogen_HTML_Properties.value(Data_String_Common.replaceAll("\x0a")("")(Data_Maybe.fromMaybe("")(state.searchWord))), Halogen_HTML_Events.onValueInput(function ($71) {
                  return Data_Maybe.Just.create(ChangeFilter.create($71));
              }), Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Events.onFocus(function (v) {
                  return new Data_Maybe.Just(FocusTextArea.value);
              }), Halogen_HTML_Events.onBlur(function (v) {
                  return new Data_Maybe.Just(BlurTextArea.value);
              }), Halogen_HTML_Events.onClick(function (v) {
                  return new Data_Maybe.Just(ClickTextArea.value);
              }), Halogen_HTML_Properties.ref(textbox_) ]);
          };
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("name"), Halogen_HTML_Events.onClick(function (v) {
              if (state.disabled) {
                  return Data_Maybe.Nothing.value;
              };
              return new Data_Maybe.Just(ClickValue.value);
          }) ])([ (function () {
              if (state.selectedItem instanceof Data_Maybe.Just) {
                  return Halogen_HTML_Core.text(state.selectedItem.value0.name);
              };
              if (state.selectedItem instanceof Data_Maybe.Nothing) {
                  if (state.disabled) {
                      return Halogen_HTML_Core.text("");
                  };
                  return Incentknow_Atoms_Icon.loadingWith("\u8aad\u307f\u8fbc\u307f\u4e2d");
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenuImpl (line 136, column 17 - line 138, column 88): " + [ state.selectedItem.constructor.name ]);
          })() ]), Incentknow_HTML_Utils.whenElem(!state.disabled && state.visibleCrossmark)(function (v) {
              return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("crossmark"), Halogen_HTML_Events.onClick(function (v1) {
                  return new Data_Maybe.Just(Unselect.value);
              }) ])([  ]);
          }) ]);
      })(), Incentknow_HTML_Utils.whenElem(state.isFocused && !state.disabled)(function (v) {
          return Halogen_HTML_Elements.ul([ Incentknow_HTML_Utils.css("listbox"), Halogen_HTML_Events.onMouseEnter(function (v1) {
              return new Data_Maybe.Just(MouseEnterListBox.value);
          }), Halogen_HTML_Events.onMouseLeave(function (v1) {
              return new Data_Maybe.Just(MouseLeaveListBox.value);
          }) ])((function () {
              if (state.message instanceof Data_Maybe.Just) {
                  return [ state.message.value0 ];
              };
              if (state.message instanceof Data_Maybe.Nothing) {
                  return Data_Functor.map(Data_Functor.functorArray)(renderItem)(state.items);
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenuImpl (line 154, column 13 - line 156, column 52): " + [ state.message.constructor.name ]);
          })());
      }) ]);
  };
  var initialState = function (dictEq) {
      return function (dictOrd) {
          return setInput(dictOrd)({
              message: Data_Maybe.Nothing.value,
              items: [  ],
              isFocused: false,
              isMouseEnterListBox: false,
              searchWord: Data_Maybe.Nothing.value,
              selectedItem: Data_Maybe.Nothing.value,
              textbox: Data_Maybe.Nothing.value,
              disabled: false,
              visibleCrossmark: true
          });
      };
  };
  var handleAction = function (dictEq) {
      return function (dictOrd) {
          return function (dictBehaviour) {
              return function (dictMonadAff) {
                  return function (v) {
                      if (v instanceof FocusTextArea) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $42 = {};
                              for (var $43 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $43)) {
                                      $42[$43] = v1[$43];
                                  };
                              };
                              $42.isFocused = true;
                              return $42;
                          });
                      };
                      if (v instanceof ClickTextArea) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $45 = {};
                              for (var $46 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $46)) {
                                      $45[$46] = v1[$46];
                                  };
                              };
                              $45.isMouseEnterListBox = false;
                              return $45;
                          });
                      };
                      if (v instanceof BlurTextArea) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                              if (x.isMouseEnterListBox) {
                                  return x;
                              };
                              var $49 = {};
                              for (var $50 in x) {
                                  if ({}.hasOwnProperty.call(x, $50)) {
                                      $49[$50] = x[$50];
                                  };
                              };
                              $49.isFocused = false;
                              return $49;
                          });
                      };
                      if (v instanceof MouseEnterListBox) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $52 = {};
                              for (var $53 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $53)) {
                                      $52[$53] = v1[$53];
                                  };
                              };
                              $52.isMouseEnterListBox = true;
                              return $52;
                          });
                      };
                      if (v instanceof MouseLeaveListBox) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $55 = {};
                              for (var $56 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $56)) {
                                      $55[$56] = v1[$56];
                                  };
                              };
                              $55.isMouseEnterListBox = false;
                              return $55;
                          });
                      };
                      if (v instanceof Initialize) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      if (v instanceof ClickItem) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $58 = {};
                                  for (var $59 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $59)) {
                                          $58[$59] = v1[$59];
                                      };
                                  };
                                  $58.selectedItem = new Data_Maybe.Just(v.value0);
                                  $58.isFocused = false;
                                  $58.isMouseEnterListBox = false;
                                  return $58;
                              }))(function () {
                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(dictEq))(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                      return v1.id;
                                  })(state.selectedItem))(new Data_Maybe.Just(v.value0.id)))(Halogen_Query_HalogenM.raise(ChangeValue.create(new Data_Maybe.Just(v.value0.id))));
                              });
                          });
                      };
                      if (v instanceof Unselect) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(state.selectedItem))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $62 = {};
                                  for (var $63 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $63)) {
                                          $62[$63] = v1[$63];
                                      };
                                  };
                                  $62.selectedItem = Data_Maybe.Nothing.value;
                                  return $62;
                              }))(function () {
                                  return Halogen_Query_HalogenM.raise(new ChangeValue(Data_Maybe.Nothing.value));
                              }));
                          });
                      };
                      if (v instanceof ChangeFilter) {
                          return Halogen_Query_HalogenM.raise(ChangeSearchWord.create((function () {
                              var $65 = v.value0 === "";
                              if ($65) {
                                  return Data_Maybe.Nothing.value;
                              };
                              return new Data_Maybe.Just(v.value0);
                          })()));
                      };
                      if (v instanceof HandleInput) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Function.flip(setInput(dictOrd))(v.value0));
                      };
                      if (v instanceof ClickValue) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $68 = {};
                              for (var $69 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $69)) {
                                      $68[$69] = v1[$69];
                                  };
                              };
                              $68.isMouseEnterListBox = false;
                              $68.isFocused = true;
                              return $68;
                          }))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(textbox_))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (textbox) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_HTML_HTMLElement.focus(textbox));
                              }));
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenuImpl (line 170, column 16 - line 197, column 37): " + [ v.constructor.name ]);
                  };
              };
          };
      };
  };
  var component = function (dictOrd) {
      return function (dictEq) {
          return function (dictBehaviour) {
              return function (dictMonadAff) {
                  return Halogen_Component.mkComponent({
                      initialState: initialState(dictEq)(dictOrd),
                      render: render,
                      "eval": Halogen_Component.mkEval({
                          handleAction: handleAction(dictEq)(dictOrd)(dictBehaviour)(dictMonadAff),
                          handleQuery: Halogen_Component.defaultEval.handleQuery,
                          receive: function ($72) {
                              return Data_Maybe.Just.create(HandleInput.create($72));
                          },
                          initialize: new Data_Maybe.Just(Initialize.value),
                          finalize: Halogen_Component.defaultEval.finalize
                      })
                  });
              };
          };
      };
  };
  exports["component"] = component;
  exports["ChangeValue"] = ChangeValue;
  exports["ChangeSearchWord"] = ChangeSearchWord;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.SelectMenu"] = $PS["Incentknow.Molecules.SelectMenu"] || {};
  var exports = $PS["Incentknow.Molecules.SelectMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Utils = $PS["Data.String.Utils"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Molecules_SelectMenuImpl = $PS["Incentknow.Molecules.SelectMenuImpl"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Load = (function () {
      function Load() {

      };
      Load.value = new Load();
      return Load;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ImplAction = (function () {
      function ImplAction(value0) {
          this.value0 = value0;
      };
      ImplAction.create = function (value0) {
          return new ImplAction(value0);
      };
      return ImplAction;
  })();
  var GetMultiple = (function () {
      function GetMultiple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetMultiple.create = function (value0) {
          return function (value1) {
              return new GetMultiple(value0, value1);
          };
      };
      return GetMultiple;
  })();
  var GetSingle = (function () {
      function GetSingle(value0) {
          this.value0 = value0;
      };
      GetSingle.create = function (value0) {
          return new GetSingle(value0);
      };
      return GetSingle;
  })();
  var setInput = function (dictOrd) {
      return function (state) {
          return function (input) {
              return {
                  value: input.value,
                  disabled: input.disabled,
                  fetchMultiple: input.fetchMultiple,
                  fetchSingle: input.fetchSingle,
                  fetchId: input.fetchId,
                  candidateMap: state.candidateMap,
                  searchWord: state.searchWord,
                  allItems: state.allItems,
                  visibleCrossmark: state.visibleCrossmark
              };
          };
      };
  };
  var initialState = function (dictOrd) {
      return function (input) {
          return {
              value: input.value,
              disabled: input.disabled,
              fetchMultiple: input.fetchMultiple,
              fetchSingle: input.fetchSingle,
              fetchId: input.fetchId,
              candidateMap: Data_Map_Internal.fromFoldable(Data_Maybe.ordMaybe(Data_Ord.ordString))(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(Data_Maybe.Nothing.value, input.initial) ]),
              searchWord: Data_Maybe.Nothing.value,
              allItems: Data_Map_Internal.fromFoldable(dictOrd)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return new Data_Tuple.Tuple(x.id, x);
              })(input.initial.items)),
              visibleCrossmark: input.visibleCrossmark
          };
      };
  };
  var getAllCandidates = function (m) {
      return Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          if (x.completed) {
              return new Data_Maybe.Just(x.items);
          };
          return Data_Maybe.Nothing.value;
      })(Data_Map_Internal.lookup(Data_Maybe.ordMaybe(Data_Ord.ordString))(Data_Maybe.Nothing.value)(m)));
  };
  var getCandidates = function (maybeWord) {
      return function (m) {
          var v = Data_Map_Internal.lookup(Data_Maybe.ordMaybe(Data_Ord.ordString))(maybeWord)(m);
          if (v instanceof Data_Maybe.Just) {
              return new Data_Maybe.Just(v.value0.items);
          };
          if (v instanceof Data_Maybe.Nothing) {
              var v1 = getAllCandidates(m);
              if (v1 instanceof Data_Maybe.Just) {
                  if (maybeWord instanceof Data_Maybe.Just) {
                      return Data_Maybe.Just.create(Data_Array.filter(function (x) {
                          return Data_String_Utils.includes(maybeWord.value0)(x.searchWord);
                      })(v1.value0));
                  };
                  if (maybeWord instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(v1.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenu (line 149, column 17 - line 151, column 26): " + [ maybeWord.constructor.name ]);
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenu (line 148, column 14 - line 152, column 23): " + [ v1.constructor.name ]);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenu (line 146, column 29 - line 152, column 23): " + [ v.constructor.name ]);
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictOrd) {
              return function (state) {
                  var cand = getCandidates(state.searchWord)(state.candidateMap);
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "impl";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenuImpl.component(dictOrd)(dictOrd.Eq0())(dictBehaviour)(dictMonadAff))({
                      items: Data_Maybe.fromMaybe([  ])(cand),
                      selectedItem: Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (value) {
                          return Data_Map_Internal.lookup(dictOrd)(value)(state.allItems);
                      })(state.value)),
                      message: (function () {
                          var $32 = Data_Maybe.isNothing(cand);
                          if ($32) {
                              return Data_Maybe.Just.create(Halogen_HTML_Core.text("\u5019\u88dc\u306f\u3042\u308a\u307e\u305b\u3093"));
                          };
                          return Data_Maybe.Nothing.value;
                      })(),
                      searchWord: state.searchWord,
                      disabled: state.disabled,
                      visibleCrossmark: state.visibleCrossmark
                  })(function ($56) {
                      return Data_Maybe.Just.create(ImplAction.create($56));
                  });
              };
          };
      };
  };
  var handleAction = function (dictEq) {
      return function (dictOrd) {
          return function (dictBehaviour) {
              return function (dictMonadAff) {
                  return function (v) {
                      if (v instanceof Initialize) {
                          return handleAction(dictEq)(dictOrd)(dictBehaviour)(dictMonadAff)(Load.value);
                      };
                      if (v instanceof Load) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.fetchMultiple(Data_Maybe.Nothing.value))(function (fetch) {
                                  return Incentknow_API_Execution.callbackAPI(dictMonadAff)(GetMultiple.create(Data_Maybe.Nothing.value))(fetch);
                              }))(function () {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.value)(function (value) {
                                      var v1 = Data_Map_Internal.lookup(dictOrd)(value)(state.allItems);
                                      if (v1 instanceof Data_Maybe.Nothing) {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.fetchSingle)(function (fetch) {
                                              return Incentknow_API_Execution.callbackAPI(dictMonadAff)(GetSingle.create)(fetch(value));
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  });
                              });
                          });
                      };
                      if (v instanceof HandleInput) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Function.flip(setInput(dictOrd))(v.value0)))(function () {
                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(state.fetchId !== v.value0.fetchId)(handleAction(dictEq)(dictOrd)(dictBehaviour)(dictMonadAff)(Load.value));
                              });
                          });
                      };
                      if (v instanceof ImplAction) {
                          if (v.value0 instanceof Incentknow_Molecules_SelectMenuImpl.ChangeValue) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $37 = {};
                                  for (var $38 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $38)) {
                                          $37[$38] = v1[$38];
                                      };
                                  };
                                  $37.value = v.value0.value0;
                                  return $37;
                              }))(function () {
                                  return Halogen_Query_HalogenM.raise(v.value0.value0);
                              });
                          };
                          if (v.value0 instanceof Incentknow_Molecules_SelectMenuImpl.ChangeSearchWord) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $41 = {};
                                  for (var $42 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $42)) {
                                          $41[$42] = v1[$42];
                                      };
                                  };
                                  $41.searchWord = v.value0.value0;
                                  return $41;
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                      var v1 = getAllCandidates(state.candidateMap);
                                      if (v1 instanceof Data_Maybe.Nothing) {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.fetchMultiple(v.value0.value0))(function (fetch) {
                                              return Incentknow_API_Execution.callbackAPI(dictMonadAff)(GetMultiple.create(v.value0.value0))(fetch);
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenu (line 173, column 24 - line 184, column 23): " + [ v.value0.constructor.name ]);
                      };
                      if (v instanceof GetMultiple) {
                          return Incentknow_API_Execution.forItem(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value1)(function (cands) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                                  var $47 = {};
                                  for (var $48 in x) {
                                      if ({}.hasOwnProperty.call(x, $48)) {
                                          $47[$48] = x[$48];
                                      };
                                  };
                                  $47.candidateMap = Data_Map_Internal.insert(Data_Maybe.ordMaybe(Data_Ord.ordString))(v.value0)(cands)(x.candidateMap);
                                  $47.allItems = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (item) {
                                      return Data_Map_Internal.insert(dictOrd)(item.id)(item);
                                  })(x.allItems)(cands.items);
                                  return $47;
                              });
                          });
                      };
                      if (v instanceof GetSingle) {
                          return Incentknow_API_Execution.forItem(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (item) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                                  var $52 = {};
                                  for (var $53 in x) {
                                      if ({}.hasOwnProperty.call(x, $53)) {
                                          $52[$53] = x[$53];
                                      };
                                  };
                                  $52.allItems = Data_Map_Internal.insert(dictOrd)(item.id)(item)(x.allItems);
                                  return $52;
                              });
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.SelectMenu (line 155, column 16 - line 193, column 72): " + [ v.constructor.name ]);
                  };
              };
          };
      };
  };
  var emptyCandidateSet = {
      items: [  ],
      completed: false
  };
  var component = function (dictOrd) {
      return function (dictEq) {
          return function (dictBehaviour) {
              return function (dictMonadAff) {
                  return Halogen_Component.mkComponent({
                      initialState: initialState(dictOrd),
                      render: render(dictBehaviour)(dictMonadAff)(dictOrd),
                      "eval": Halogen_Component.mkEval({
                          handleAction: handleAction(dictEq)(dictOrd)(dictBehaviour)(dictMonadAff),
                          handleQuery: Halogen_Component.defaultEval.handleQuery,
                          receive: function ($57) {
                              return Data_Maybe.Just.create(HandleInput.create($57));
                          },
                          initialize: new Data_Maybe.Just(Initialize.value),
                          finalize: Halogen_Component.defaultEval.finalize
                      })
                  });
              };
          };
      };
  };
  exports["emptyCandidateSet"] = emptyCandidateSet;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.FormatMenu"] = $PS["Incentknow.Molecules.FormatMenu"] || {};
  var exports = $PS["Incentknow.Molecules.FormatMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Formats = (function () {
      function Formats(value0) {
          this.value0 = value0;
      };
      Formats.create = function (value0) {
          return new Formats(value0);
      };
      return Formats;
  })();
  var SpaceBy = (function () {
      function SpaceBy(value0) {
          this.value0 = value0;
      };
      SpaceBy.create = function (value0) {
          return new SpaceBy(value0);
      };
      return SpaceBy;
  })();
  var SpaceByAndHasSemanticId = (function () {
      function SpaceByAndHasSemanticId(value0) {
          this.value0 = value0;
      };
      SpaceByAndHasSemanticId.create = function (value0) {
          return new SpaceByAndHasSemanticId(value0);
      };
      return SpaceByAndHasSemanticId;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var toSelectMenuItem = function (format) {
      var html = Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-format-menu-item") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("displayName") ])([ Incentknow_Atoms_Icon.formatWithIcon(format) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("displayId") ])([ Halogen_HTML_Core.text("@" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(format.displayId)) ]) ]);
      return {
          id: format.formatId,
          name: format.displayName,
          searchWord: format.displayName,
          html: html
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Ids.ordFormatId)(Incentknow_Data_Ids.eqFormatId)(dictBehaviour)(dictMonadAff))({
                  value: state.formatId,
                  disabled: state.disabled,
                  fetchMultiple: function (maybeWord) {
                      if (state.filter instanceof SpaceBy) {
                          if (maybeWord instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Just.create(Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(function (items) {
                                  return {
                                      items: items,
                                      completed: true
                                  };
                              })(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem))(Incentknow_API.getFormats(state.filter.value0)))));
                          };
                          return Data_Maybe.Nothing.value;
                      };
                      if (state.filter instanceof SpaceByAndHasSemanticId) {
                          if (maybeWord instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Just.create(Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(function (items) {
                                  return {
                                      items: items,
                                      completed: true
                                  };
                              })(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem))(Incentknow_API.getFormats(state.filter.value0)))));
                          };
                          return Data_Maybe.Nothing.value;
                      };
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Just.create(function (x) {
                      return Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(toSelectMenuItem)(Incentknow_API.getRelatedFormat(x)));
                  }),
                  fetchId: (function () {
                      if (state.filter instanceof SpaceBy) {
                          return Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId)(state.filter.value0);
                      };
                      if (state.filter instanceof SpaceByAndHasSemanticId) {
                          return "Semantic" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId)(state.filter.value0);
                      };
                      return "";
                  })(),
                  initial: Incentknow_Molecules_SelectMenu.emptyCandidateSet,
                  visibleCrossmark: false
              })(function ($42) {
                  return Data_Maybe.Just.create(ChangeValue.create($42));
              });
          };
      };
  };
  var initialState = function (input) {
      return {
          filter: input.filter,
          formatId: input.value,
          disabled: input.disabled
      };
  };
  var eqFormatFilter = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Formats && y instanceof Formats) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "usage";
              }))(Incentknow_Data_Entities.eqFormatUsage))()(new Data_Symbol.IsSymbol(function () {
                  return "space";
              }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "spaceId";
              }))(Incentknow_Data_Ids.eqSpaceId))()(new Data_Symbol.IsSymbol(function () {
                  return "published";
              }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                  return "membershipMethod";
              }))(Incentknow_Data_Entities.eqMembershipMethod))()(new Data_Symbol.IsSymbol(function () {
                  return "headerImage";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "displayId";
              }))(Incentknow_Data_Ids.eqSpaceDisplayId))()(new Data_Symbol.IsSymbol(function () {
                  return "description";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "defaultAuthority";
              }))(Incentknow_Data_Entities.eqSpaceAuthority))()(new Data_Symbol.IsSymbol(function () {
                  return "createdAt";
              }))(Data_Eq.eqNumber))))()(new Data_Symbol.IsSymbol(function () {
                  return "semanticId";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "icon";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "formatId";
              }))(Incentknow_Data_Ids.eqFormatId))()(new Data_Symbol.IsSymbol(function () {
                  return "displayName";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "displayId";
              }))(Incentknow_Data_Ids.eqFormatDisplayId))()(new Data_Symbol.IsSymbol(function () {
                  return "description";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "currentStructureId";
              }))(Incentknow_Data_Ids.eqStructureId))))(x.value0)(y.value0);
          };
          if (x instanceof SpaceBy && y instanceof SpaceBy) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0)(y.value0);
          };
          if (x instanceof SpaceByAndHasSemanticId && y instanceof SpaceByAndHasSemanticId) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceId)(x.value0)(y.value0);
          };
          if (x instanceof None && y instanceof None) {
              return true;
          };
          return false;
      };
  });
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $36 = Data_Eq.notEq(eqFormatFilter)(v.value0.filter)(state.filter);
                          if ($36) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0())(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $37 = {};
                              for (var $38 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $38)) {
                                      $37[$38] = v1[$38];
                                  };
                              };
                              $37.formatId = v.value0.value;
                              $37.disabled = v.value0.disabled;
                              return $37;
                          });
                      });
                  };
                  if (v instanceof ChangeValue) {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.FormatMenu (line 123, column 16 - line 133, column 18): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($43) {
                          return Data_Maybe.Just.create(HandleInput.create($43));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["SpaceBy"] = SpaceBy;
  exports["SpaceByAndHasSemanticId"] = SpaceByAndHasSemanticId;
  exports["None"] = None;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.SpaceMenu"] = $PS["Incentknow.Molecules.SpaceMenu"] || {};
  var exports = $PS["Incentknow.Molecules.SpaceMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var toSelectMenuItem = function (space) {
      var html = Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-space-menu-item") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("displayName") ])([ Halogen_HTML_Core.text(space.displayName) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("displayId") ])([ Halogen_HTML_Core.text("@" + Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(space.displayId)) ]) ]);
      return {
          id: space.spaceId,
          name: space.displayName,
          searchWord: space.displayName,
          html: html
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Ids.ordSpaceId)(Incentknow_Data_Ids.eqSpaceId)(dictBehaviour)(dictMonadAff))({
                  value: state.spaceId,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      if (v instanceof Data_Maybe.Just) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return Data_Maybe.Just.create(Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(function (items) {
                              return {
                                  items: items,
                                  completed: true
                              };
                          })(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem))(Incentknow_API.getCandidateSpaces(Data_Unit.unit)))));
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.SpaceMenu (line 72, column 22 - line 74, column 141): " + [ v.constructor.name ]);
                  },
                  fetchSingle: Data_Maybe.Just.create(function (x) {
                      return Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(toSelectMenuItem)(Incentknow_API.getRelatedSpace(x)));
                  }),
                  fetchId: "",
                  initial: Incentknow_Molecules_SelectMenu.emptyCandidateSet,
                  visibleCrossmark: false
              })(function ($20) {
                  return Data_Maybe.Just.create(ChangeValue.create($20));
              });
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.value,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $15 = {};
                          for (var $16 in v1) {
                              if ({}.hasOwnProperty.call(v1, $16)) {
                                  $15[$16] = v1[$16];
                              };
                          };
                          $15.spaceId = v.value0.value;
                          $15.disabled = v.value0.disabled;
                          return $15;
                      });
                  };
                  if (v instanceof ChangeValue) {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.SpaceMenu (line 98, column 16 - line 101, column 37): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($21) {
                          return Data_Maybe.Just.create(HandleInput.create($21));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.StructureMenu"] = $PS["Incentknow.Molecules.StructureMenu"] || {};
  var exports = $PS["Incentknow.Molecules.StructureMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_FormatMenu = $PS["Incentknow.Molecules.FormatMenu"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Load = (function () {
      function Load() {

      };
      Load.value = new Load();
      return Load;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeFormat = (function () {
      function ChangeFormat(value0) {
          this.value0 = value0;
      };
      ChangeFormat.create = function (value0) {
          return new ChangeFormat(value0);
      };
      return ChangeFormat;
  })();
  var ChangeStructure = (function () {
      function ChangeStructure(value0) {
          this.value0 = value0;
      };
      ChangeStructure.create = function (value0) {
          return new ChangeStructure(value0);
      };
      return ChangeStructure;
  })();
  var GetFormat = (function () {
      function GetFormat(value0) {
          this.value0 = value0;
      };
      GetFormat.create = function (value0) {
          return new GetFormat(value0);
      };
      return GetFormat;
  })();
  var GetStructure = (function () {
      function GetStructure(value0) {
          this.value0 = value0;
      };
      GetStructure.create = function (value0) {
          return new GetStructure(value0);
      };
      return GetStructure;
  })();
  var toSelectMenuItem = function (strc) {
      var html = Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-structure-menu-item") ])([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe(Data_Show.show(Data_Show.showInt)(strc.version))(strc.title)) ]);
      return {
          id: strc.structureId,
          name: Data_Show.show(Data_Show.showInt)(strc.version),
          searchWord: Data_Show.show(Data_Show.showInt)(strc.version),
          html: html
      };
  };
  var setInput = function (state) {
      return function (input) {
          return {
              structureId: input.value,
              formatId: (function () {
                  var $17 = Data_Maybe.isNothing(input.value);
                  if ($17) {
                      return Data_Maybe.Nothing.value;
                  };
                  return state.formatId;
              })(),
              filter: input.filter,
              disabled: input.disabled,
              format: state.format,
              structure: state.structure
          };
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-structure-menu") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("format-menu") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "formatMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_FormatMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  value: state.formatId,
                  filter: state.filter,
                  disabled: state.disabled
              })(function ($45) {
                  return Data_Maybe.Just.create(ChangeFormat.create($45));
              }) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("structure-menu") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Ids.ordStructureId)(Incentknow_Data_Ids.eqStructureId)(dictBehaviour)(dictMonadAff))({
                  value: state.structureId,
                  disabled: state.disabled || Data_Maybe.isNothing(state.formatId),
                  fetchMultiple: function (v) {
                      if (v instanceof Data_Maybe.Nothing) {
                          if (state.formatId instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(function (items) {
                                  return {
                                      items: items,
                                      completed: true
                                  };
                              })(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem))(Incentknow_API.getStructures(state.formatId.value0)))));
                          };
                          if (state.formatId instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Incentknow.Molecules.StructureMenu (line 116, column 28 - line 118, column 37): " + [ state.formatId.constructor.name ]);
                      };
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Nothing.value,
                  fetchId: Data_Maybe.maybe("")(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatId))(state.formatId),
                  initial: Incentknow_Molecules_SelectMenu.emptyCandidateSet,
                  visibleCrossmark: false
              })(function ($46) {
                  return Data_Maybe.Just.create(ChangeStructure.create($46));
              }) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          structureId: input.value,
          formatId: Data_Maybe.Nothing.value,
          filter: input.filter,
          disabled: input.disabled,
          format: Incentknow_API_Execution.Loading.value,
          structure: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return handleAction(dictBehaviour)(dictMonadAff)(Load.value);
              };
              if (v instanceof HandleInput) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("HandleInput")))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Data_Function.flip(setInput)(v.value0)))(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value) && Data_Eq.notEq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqStructureId))(v.value0.value)(state.structureId))(handleAction(dictBehaviour)(dictMonadAff)(Load.value));
                          });
                      });
                  });
              };
              if (v instanceof Load) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("Load")))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.structureId)(function (structureId) {
                              return Incentknow_API_Execution.callbackQuery(dictMonadAff)(GetStructure.create)(Incentknow_API.getRelatedStructure(structureId));
                          });
                      });
                  });
              };
              if (v instanceof ChangeFormat) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("ChangeFormat" + Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatId))(v.value0)))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $23 = {};
                          for (var $24 in v1) {
                              if ({}.hasOwnProperty.call(v1, $24)) {
                                  $23[$24] = v1[$24];
                              };
                          };
                          $23.formatId = v.value0;
                          return $23;
                      }))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(v.value0))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $26 = {};
                              for (var $27 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $27)) {
                                      $26[$27] = v1[$27];
                                  };
                              };
                              $26.structureId = Data_Maybe.Nothing.value;
                              return $26;
                          })))(function () {
                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value0)(function (formatId) {
                                  return Incentknow_API_Execution.callbackQuery(dictMonadAff)(GetFormat.create)(Incentknow_API.getRelatedFormat(formatId));
                              });
                          });
                      });
                  });
              };
              if (v instanceof ChangeStructure) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("ChangeStructure" + Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeStructureId))(v.value0)))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $30 = {};
                          for (var $31 in v1) {
                              if ({}.hasOwnProperty.call(v1, $31)) {
                                  $30[$31] = v1[$31];
                              };
                          };
                          $30.structureId = v.value0;
                          return $30;
                      }))(function () {
                          return Halogen_Query_HalogenM.raise(v.value0);
                      });
                  });
              };
              if (v instanceof GetFormat) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("GetFormat")))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (format) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $34 = {};
                              for (var $35 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $35)) {
                                      $34[$35] = v1[$35];
                                  };
                              };
                              $34.format = format;
                              return $34;
                          });
                      }))(function () {
                          return Incentknow_API_Execution.forItem(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (format) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $37 = {};
                                  for (var $38 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $38)) {
                                          $37[$38] = v1[$38];
                                      };
                                  };
                                  $37.structureId = new Data_Maybe.Just(format.currentStructureId);
                                  return $37;
                              }))(function () {
                                  return Halogen_Query_HalogenM.raise(new Data_Maybe.Just(format.currentStructureId));
                              });
                          });
                      });
                  });
              };
              if (v instanceof GetStructure) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("GetStructure")))(function () {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (structure) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $41 = {};
                              for (var $42 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $42)) {
                                      $41[$42] = v1[$42];
                                  };
                              };
                              $41.structure = structure;
                              $41.formatId = Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                                  return v2.formatId;
                              })(Incentknow_API_Execution.toMaybe(structure));
                              return $41;
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.StructureMenu (line 129, column 16 - line 164, column 93): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($47) {
                      return Data_Maybe.Just.create(HandleInput.create($47));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.ContentMenu"] = $PS["Incentknow.Molecules.ContentMenu"] || {};
  var exports = $PS["Incentknow.Molecules.ContentMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var initialState = function (input) {
      return {
          contentId: input.value,
          spaceId: input.spaceId,
          formatId: input.formatId,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $13 = Data_Eq.notEq(Incentknow_Data_Ids.eqFormatId)(state.formatId)(v.value0.formatId) || Data_Eq.notEq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqSpaceId))(state.spaceId)(v.value0.spaceId);
                          if ($13) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0())(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $14 = {};
                              for (var $15 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $15)) {
                                      $14[$15] = v1[$15];
                                  };
                              };
                              $14.contentId = v.value0.value;
                              $14.disabled = v.value0.disabled;
                              return $14;
                          });
                      });
                  };
                  if (v instanceof ChangeValue) {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.ContentMenu (line 110, column 16 - line 119, column 37): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var fromContentToHtml = function (src) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(src.title), Incentknow_HTML_Utils.maybeElem(src.image)(function (image) {
          return Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(image) ]);
      }) ]);
  };
  var toSelectMenuItem = function (content) {
      var semanticData = Incentknow_Data_Content.getContentSemanticData(content.data)(content.format);
      return {
          id: content.contentId,
          name: semanticData.title,
          searchWord: semanticData.title,
          html: fromContentToHtml(semanticData)
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Ids.ordContentId)(Incentknow_Data_Ids.eqContentId)(dictBehaviour)(dictMonadAff))({
                  value: state.contentId,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      if (v instanceof Data_Maybe.Nothing) {
                          if (state.spaceId instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(function (items) {
                                  return {
                                      items: items,
                                      completed: true
                                  };
                              })(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem))(Incentknow_API.getContents(state.spaceId.value0)(state.formatId)))));
                          };
                          if (state.spaceId instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Incentknow.Molecules.ContentMenu (line 80, column 20 - line 82, column 29): " + [ state.spaceId.constructor.name ]);
                      };
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Just.create(function (x) {
                      return Incentknow_API_Execution.toQueryCallback(Data_Functor.map(Incentknow_API_Execution.mapQueryAPI)(toSelectMenuItem)(Incentknow_API.getRelatedContent(x)));
                  }),
                  fetchId: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatId)(state.formatId),
                  initial: Incentknow_Molecules_SelectMenu.emptyCandidateSet,
                  visibleCrossmark: true
              })(function ($22) {
                  return Data_Maybe.Just.create(ChangeValue.create($22));
              });
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($23) {
                          return Data_Maybe.Just.create(HandleInput.create($23));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  


  exports.setCursorVisibleImpl = function (editor, show) {
      return function () {
          if (show) {
              editor.renderer.$cursorLayer.element.style.display = "block";
          } else {
              editor.renderer.$cursorLayer.element.style.display = "none";
          }
      }
  }
})(PS["Incentknow.Molecules.PlainTextEditor"] = PS["Incentknow.Molecules.PlainTextEditor"] || {});
(function(exports) {
  "use strict";

  exports.sendImpl = function (ws) {
    return function (value) {
      return function () {
        ws.send(value);
      };
    };
  };
})(PS["Web.Socket.WebSocket"] = PS["Web.Socket.WebSocket"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Socket.WebSocket"] = $PS["Web.Socket.WebSocket"] || {};
  var exports = $PS["Web.Socket.WebSocket"];
  var $foreign = $PS["Web.Socket.WebSocket"];
  var sendString = $foreign.sendImpl;
  exports["sendString"] = sendString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["JsonRPC"] = $PS["JsonRPC"] || {};
  var exports = $PS["JsonRPC"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Random = $PS["Effect.Random"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Web_Socket_WebSocket = $PS["Web.Socket.WebSocket"];
  var genId = Effect_Random.randomInt(0)(1000000000);
  var notify = function (socket) {
      return function (method) {
          return function (params) {
              return function __do() {
                  var id = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(genId)();
                  var values = [ Data_Tuple.Tuple.create("jsonrpc")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("2.0")), Data_Tuple.Tuple.create("method")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(method)), Data_Tuple.Tuple.create("params")(params), Data_Tuple.Tuple.create("id")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(id)) ];
                  var req = Data_Argonaut_Core.stringify(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson))(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(values)));
                  return Web_Socket_WebSocket.sendString(socket)(req)();
              };
          };
      };
  };
  exports["notify"] = notify;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["LSP"] = $PS["LSP"] || {};
  var exports = $PS["LSP"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Symbol = $PS["Data.Symbol"];
  var JsonRPC = $PS["JsonRPC"];
  var didChange = function (socket) {
      return function (params) {
          var paramsJson = Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))())()))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonInt)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
              return "version";
          }))())(new Data_Symbol.IsSymbol(function () {
              return "uri";
          }))())())(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function () {
              return "textDocument";
          }))())(new Data_Symbol.IsSymbol(function () {
              return "contentChanges";
          }))())())(params);
          return JsonRPC.notify(socket)("textDocument/didChange")(paramsJson);
      };
  };
  exports["didChange"] = didChange;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.PlainTextEditor"] = $PS["Incentknow.Molecules.PlainTextEditor"] || {};
  var exports = $PS["Incentknow.Molecules.PlainTextEditor"];
  var $foreign = $PS["Incentknow.Molecules.PlainTextEditor"];
  var Ace = $PS["Ace"];
  var Ace_EditSession = $PS["Ace.EditSession"];
  var Ace_Editor = $PS["Ace.Editor"];
  var Ace_Types = $PS["Ace.Types"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Global = $PS["Global"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var LSP = $PS["LSP"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize() {

      };
      Finalize.value = new Finalize();
      return Finalize;
  })();
  var HandleChange = (function () {
      function HandleChange() {

      };
      HandleChange.value = new HandleChange();
      return HandleChange;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var setCursorVisible = function (editor) {
      return function (visible) {
          return $foreign.setCursorVisibleImpl(editor, visible);
      };
  };
  var setupEditor = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.editor)(function (editor) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(state.variableHeight)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.setMaxLines(Global.infinity)(editor))))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.setReadOnly(state.readonly)(editor)))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.setHighlightActiveLine(!state.readonly)(editor)))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.setHighlightGutterLine(!state.readonly)(editor)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.setValue(state.text)(Data_Maybe.Just.create(-1 | 0))(editor))))(function () {
                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(setCursorVisible(editor)(!state.readonly));
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.ref("ace"), Incentknow_HTML_Utils.css((function () {
          if (state.variableHeight) {
              return "";
          };
          return "ace_editor-variable-height";
      })()) ])([  ]);
  };
  var initialState = function (input) {
      return {
          text: input.value,
          editor: Data_Maybe.Nothing.value,
          connection: Data_Maybe.Nothing.value,
          variableHeight: input.variableHeight,
          readonly: input.readonly
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("ace"))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (element) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace.editNode(element)(Ace.ace)))(function (editor) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.getSession(editor)))(function (session) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $19 = {};
                                      for (var $20 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $20)) {
                                              $19[$20] = v1[$20];
                                          };
                                      };
                                      $19.editor = new Data_Maybe.Just(editor);
                                      return $19;
                                  }))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setupEditor(dictMonadAff.MonadEffect0())(dictMonadAff))(function () {
                                          return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.subscribe(Halogen_Query_EventSource.effectEventSource(dictMonadAff)(function (emitter) {
                                              return function __do() {
                                                  Ace_EditSession.onChange(session)(function (v1) {
                                                      return Halogen_Query_EventSource.emit(emitter)(HandleChange.value);
                                                  })();
                                                  return Data_Monoid.mempty(Halogen_Query_EventSource.monoidFinalizer(Effect.applicativeEffect));
                                              };
                                          })));
                                      });
                                  });
                              });
                          });
                      });
                  }));
              };
              if (v instanceof Finalize) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $22 = {};
                      for (var $23 in v1) {
                          if ({}.hasOwnProperty.call(v1, $23)) {
                              $22[$23] = v1[$23];
                          };
                      };
                      $22.editor = Data_Maybe.Nothing.value;
                      return $22;
                  });
              };
              if (v instanceof HandleChange) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.editor)(function (editor) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.getValue(editor)))(function (text) {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(text !== state.text)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $25 = {};
                                  for (var $26 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $26)) {
                                          $25[$26] = v1[$26];
                                      };
                                  };
                                  $25.text = text;
                                  return $25;
                              }))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(text))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          return v1.connection;
                                      }))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (connection) {
                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(LSP.didChange(connection)({
                                              textDocument: {
                                                  uri: "main",
                                                  version: 0
                                              },
                                              contentChanges: [ {
                                                  text: text
                                              } ]
                                          }));
                                      }));
                                  });
                              }));
                          });
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0.value !== state.text)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $28 = {};
                          for (var $29 in v1) {
                              if ({}.hasOwnProperty.call(v1, $29)) {
                                  $28[$29] = v1[$29];
                              };
                          };
                          $28.text = v.value0.value;
                          return $28;
                      }))(function () {
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.editor)(function (editor) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.getCursorPosition(editor)))(function (pos) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setupEditor(dictMonadAff.MonadEffect0())(dictMonadAff))(function () {
                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Ace_Editor.moveCursorTo(Ace_Types.getRow(pos))(Data_Maybe.Just.create(Ace_Types.getColumn(pos)))(Data_Maybe.Nothing.value)(editor));
                                  });
                              });
                          });
                      }));
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.PlainTextEditor (line 133, column 16 - line 174, column 94): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff.MonadEffect0())(dictMonadAff),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: function ($38) {
                  return Data_Maybe.Just.create(HandleInput.create($38));
              },
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: new Data_Maybe.Just(Finalize.value)
          })
      });
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  
  function getOffset(node) {
      let rangeCount = 0;
      const childNodes = node.parentNode.childNodes;
      for (var i = 0; i < childNodes.length; i++) {
          if (childNodes[i] == node) {
              break;
          }
          if (childNodes[i].outerHTML)
              rangeCount += childNodes[i].outerHTML.length;
          else if (childNodes[i].nodeType == 3) {
              rangeCount += childNodes[i].textContent.length;
          }
      }
      return rangeCount;
  }

  function getBlockIdAndNode(node) {
      let blockId = null;
      for (let i = 0; i < 10; i++) {
          blockId = node.getAttribute ? node.getAttribute("data-id") : null;
          if (!blockId) {
              node = node.parentNode;
          } else {            
              return { blockId, index: getBlockIndex(node) };
          }
      }
  }

  function getBlockIndex(node) {
      let i = 0;
      for(let child of node.parentNode.childNodes) {
          if (child == node) {
              return i;
          }
          i++;
      }
      return -1;
  }

  exports.getSelection = () => {
      const selection = window.getSelection();
      let range = window.getSelection().getRangeAt(0);
      const start = getBlockIdAndNode(selection.anchorNode);
      const end = getBlockIdAndNode(selection.focusNode);
      const result = { 
          startBlockId: start.blockId,
          startOffset: range.startOffset + getOffset(selection.anchorNode),
          endBlockId: end.blockId,
          endOffset: range.endOffset + getOffset(selection.focusNode),
      };

      if (start.index > end.index) {
          const startBlockId = result.startBlockId;
          const startOffset = result.startOffset;
          result.startBlockId = result.endBlockId;
          result.startOffset = result.endOffset;
          result.endBlockId = startBlockId;
          result.endOffset = startOffset;
      }

      if (result.startBlockId == result.endBlockId && result.startOffset > result.endOffset) {
          const startOffset = result.startOffset;
          result.startOffset = result.endOffset;
          result.endOffset = startOffset;
      }

      return result;
  };

  function getEditable(element) {
      if (element.getAttribute && element.getAttribute("data-editable")) {
          return element;
      }
      if (element.childNodes) {
          for (const child of element.childNodes) {
              const editable = getEditable(child);
              if (editable) {
                  return editable;
              }
          }
      }
      return null;
  }

  exports._setCaret = blocksElement => blockId => offset => () => {
      for (const block of blocksElement.childNodes) {
          if (block.getAttribute("data-id") != blockId) {
              continue;
          }
          let editable = getEditable(block);
          if (!editable) {
              return;
          }
          editable = editable.childNodes.length > 0 ? editable.childNodes[0] : editable;
        
          var range = document.createRange();
          range.setStart(editable, offset);
          range.setEnd(editable, offset);
          var selection = window.getSelection();
          selection.removeAllRanges();
          selection.addRange(range);
      }
  };

  exports.getBlockText = blocksElement => blockId => () => {
      for (const block of blocksElement.childNodes) {
          if (block.getAttribute("data-id") != blockId) {
              continue;
          }
          const editable = getEditable(block);
          if (!editable) {
              return;
          }
        
          let innerText = editable.innerText.replace(/&nbsp;/g, " ").replace(/ /g, " ");
          console.log(innerText);
          return innerText;
      }
  }

  exports.targetValue = e => {
      const clipboardData = e.clipboardData || window.clipboardData;
      const pastedData = clipboardData.getData('Text');
      console.log("targetValue");
      console.log(pastedData);
      return pastedData;
  }
})(PS["Incentknow.Organisms.Document.Editor"] = PS["Incentknow.Organisms.Document.Editor"] || {});
(function(exports) {
    

  exports.setInnerText = text => element => () => {
      const compareHTML = element.innerHTML.replace(/ /g, "&nbsp;").replace(/ /g, "&nbsp;");
      if (compareHTML != text) {
          element.innerHTML = text;
      }
  };
})(PS["Incentknow.Organisms.Document.BlockEditor"] = PS["Incentknow.Organisms.Document.BlockEditor"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Document.BlockEditor"] = $PS["Incentknow.Organisms.Document.BlockEditor"] || {};
  var exports = $PS["Incentknow.Organisms.Document.BlockEditor"];
  var $foreign = $PS["Incentknow.Organisms.Document.BlockEditor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var toHtmlText = function (str) {
      return Data_String_Common.replaceAll(" ")("&nbsp;")(Data_String_Common.replaceAll("\xa0")("&nbsp;")(str));
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-document-block org-document-block-editor"), Halogen_HTML_Properties.attr("data-id")(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(state.id)) ])([ (function () {
                      if (state.data instanceof Incentknow_Data_Entities.ParagraphBlockData) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("paragraph"), Halogen_HTML_Properties.ref(Halogen_Query_Input.RefLabel(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(state.id))), Halogen_HTML_Properties.attr("data-editable")("true") ])([ Incentknow_HTML_Utils.whenElem(state.initial)(function (v) {
                              return Halogen_HTML_Core.text(toHtmlText(state.data.value0));
                          }) ]);
                      };
                      if (state.data instanceof Incentknow_Data_Entities.HeaderBlockData) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header header-level" + Data_Show.show(Data_Show.showInt)(state.data.value0)), Halogen_HTML_Properties.ref(Halogen_Query_Input.RefLabel(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(state.id))), Halogen_HTML_Properties.attr("data-editable")("true") ])([ Incentknow_HTML_Utils.whenElem(state.initial)(function (v) {
                              return Halogen_HTML_Core.text(toHtmlText(state.data.value1));
                          }) ]);
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.Document.BlockEditor (line 75, column 7 - line 93, column 14): " + [ state.data.constructor.name ]);
                  })() ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          id: input.value.id,
          data: input.value.data,
          initial: true
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(Halogen_Query_Input.RefLabel(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(state.id))))(function (maybeElement) {
                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)((Incentknow_Data_EntityUtils.getBlockDataOptions(state.data)).text)(function (text) {
                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.setInnerText(toHtmlText(text))(element));
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Data_Entities.eqBlockData)(state.data)(v.value0.value.data))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)((function () {
                              var v1 = initialState(v.value0);
                              return {
                                  initial: false,
                                  data: v1.data,
                                  id: v1.id
                              };
                          })()))(function () {
                              return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                          }));
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Document.BlockEditor (line 103, column 16 - line 114, column 30): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($20) {
                          return Data_Maybe.Just.create(HandleInput.create($20));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Clipboard.ClipboardEvent"] = $PS["Web.Clipboard.ClipboardEvent"] || {};
  var exports = $PS["Web.Clipboard.ClipboardEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                      
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS);
(function(exports) {
  "use strict";

  exports.code = function (e) {
    return e.code;
  };

  exports.isComposing = function (e) {
    return e.isComposing;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent"] = $PS["Web.UIEvent.KeyboardEvent"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent"];
  var $foreign = $PS["Web.UIEvent.KeyboardEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];  
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
  exports["code"] = $foreign.code;
  exports["isComposing"] = $foreign.isComposing;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Document.Editor"] = $PS["Incentknow.Organisms.Document.Editor"] || {};
  var exports = $PS["Incentknow.Organisms.Document.Editor"];
  var $foreign = $PS["Incentknow.Organisms.Document.Editor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Random = $PS["Effect.Random"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Document_BlockEditor = $PS["Incentknow.Organisms.Document.BlockEditor"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];
  var Web_Clipboard_ClipboardEvent = $PS["Web.Clipboard.ClipboardEvent"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var OnKeyDown = (function () {
      function OnKeyDown(value0) {
          this.value0 = value0;
      };
      OnKeyDown.create = function (value0) {
          return new OnKeyDown(value0);
      };
      return OnKeyDown;
  })();
  var OnKeyUp = (function () {
      function OnKeyUp(value0) {
          this.value0 = value0;
      };
      OnKeyUp.create = function (value0) {
          return new OnKeyUp(value0);
      };
      return OnKeyUp;
  })();
  var OnPase = (function () {
      function OnPase(value0) {
          this.value0 = value0;
      };
      OnPase.create = function (value0) {
          return new OnPase(value0);
      };
      return OnPase;
  })();
  var setCaret = function (blocksElement) {
      return function (blockId) {
          return function (offset) {
              return $foreign["_setCaret"](blocksElement)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(blockId))(offset);
          };
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderBlock = function (block) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "block";
                  }))(Incentknow_Data_Ids.ordDocumentBlockId)(Data_Symbol.SProxy.value)(block.id)(Incentknow_Organisms_Document_BlockEditor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: block
                  })(function (v) {
                      return Data_Maybe.Nothing.value;
                  });
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-document org-document-editor") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("blocks"), Halogen_HTML_Properties.attr("contenteditable")("true"), Halogen_HTML_Events.onKeyDown(function ($81) {
                  return Data_Maybe.Just.create(OnKeyDown.create($81));
              }), Halogen_HTML_Events.onKeyUp(function ($82) {
                  return Data_Maybe.Just.create(OnKeyUp.create($82));
              }), Halogen_HTML_Events.onPaste(function ($83) {
                  return Data_Maybe.Just.create(OnPase.create($83));
              }), Halogen_HTML_Properties.ref("blocks"), Halogen_HTML_Properties.spellcheck(false) ])(Data_Functor.map(Data_Functor.functorArray)(renderBlock)(state.document.blocks)) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          document: input.value,
          composition: false
      };
  };
  var generateDocumentBlockId = function __do() {
      var randoms = Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Array.replicate(12)(Effect_Random.randomInt(0)(Data_String_CodePoints.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1 | 0)))();
      return Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(Data_String_CodeUnits.fromCharArray(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (x) {
          return Data_String_CodeUnits.charAt(x)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
      })(randoms))));
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              var removeBetween = function (start) {
                  return function (end) {
                      return function (array) {
                          return Data_Array.catMaybes(Data_Array.mapWithIndex(function (i) {
                              return function (x) {
                                  var $27 = start <= i && i <= end;
                                  if ($27) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  return new Data_Maybe.Just(x);
                              };
                          })(array));
                      };
                  };
              };
              var normalizeBlockData = function (block) {
                  var mkHeader = function (level) {
                      return function (text) {
                          return Data_Maybe.fromMaybe(new Incentknow_Data_Entities.ParagraphBlockData(""))(Incentknow_Data_EntityUtils.buildBlockData(Incentknow_Data_Entities.Header.value)({
                              level: new Data_Maybe.Just(level),
                              text: new Data_Maybe.Just(text)
                          }));
                      };
                  };
                  if (block instanceof Incentknow_Data_Entities.ParagraphBlockData) {
                      var $29 = block.value0 === "# ";
                      if ($29) {
                          return mkHeader(1)("");
                      };
                      var $30 = block.value0 === "## ";
                      if ($30) {
                          return mkHeader(2)("");
                      };
                      var $31 = block.value0 === "### ";
                      if ($31) {
                          return mkHeader(3)("");
                      };
                      var $32 = block.value0 === "#### ";
                      if ($32) {
                          return mkHeader(4)("");
                      };
                      return block;
                  };
                  return block;
              };
              var getBlockTextFromBlocks = function (i) {
                  return function (blocks) {
                      return Data_Maybe.fromMaybe("")(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
                          return (Incentknow_Data_EntityUtils.getBlockDataOptions(x.data)).text;
                      })(Data_Array.index(blocks)(i))));
                  };
              };
              var getBlockIndex = function (id) {
                  return function (blocks) {
                      return Data_Maybe.fromMaybe(-1 | 0)(Data_Array.findIndex(function (x) {
                          return Data_Eq.eq(Incentknow_Data_Ids.eqDocumentBlockId)(x.id)(id);
                      })(blocks));
                  };
              };
              var editDataText = function (changeText) {
                  return function (block) {
                      var ty = Incentknow_Data_EntityUtils.getBlockType(block);
                      var options = Incentknow_Data_EntityUtils.getBlockDataOptions(block);
                      var $$default = Data_Maybe.fromMaybe(new Incentknow_Data_Entities.ParagraphBlockData(""))(Incentknow_Data_EntityUtils.buildBlockData(Incentknow_Data_Entities.Paragraph.value)({
                          level: Incentknow_Data_EntityUtils.defaultBlockDataOptions.level,
                          text: new Data_Maybe.Just("")
                      }));
                      return Data_Maybe.fromMaybe($$default)(Incentknow_Data_EntityUtils.buildBlockData(ty)({
                          level: options.level,
                          text: Data_Functor.map(Data_Maybe.functorMaybe)(changeText)(options.text)
                      }));
                  };
              };
              var editText = function (changeText) {
                  return function (block) {
                      return {
                          id: block.id,
                          data: editDataText(changeText)(block.data)
                      };
                  };
              };
              var editData = function (changeData) {
                  return function (block) {
                      return {
                          id: block.id,
                          data: changeData(block.data)
                      };
                  };
              };
              var changeByIndex = function (change) {
                  return function (index) {
                      return Data_Array.mapWithIndex(function (i) {
                          return function (x) {
                              var $34 = i === index;
                              if ($34) {
                                  return change(x);
                              };
                              return x;
                          };
                      });
                  };
              };
              var removeSelection = function (selection) {
                  return function (isEnter) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $35 = selection.startBlockId !== selection.endBlockId;
                          if ($35) {
                              if (isEnter) {
                                  var startIndex = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                  var endIndex = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.endBlockId))(state.document.blocks);
                                  var change3 = removeBetween(startIndex + 1 | 0)(endIndex - 1 | 0);
                                  var change2 = changeByIndex(editText(function (x) {
                                      return (Data_String_CodeUnits.splitAt(selection.endOffset)(x)).after;
                                  }))(endIndex);
                                  var change1 = changeByIndex(editText(function (x) {
                                      return (Data_String_CodeUnits.splitAt(selection.startOffset)(x)).before;
                                  }))(startIndex);
                                  var blocks = change3(change2(change1(state.document.blocks)));
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                      var $37 = {};
                                      for (var $38 in v) {
                                          if ({}.hasOwnProperty.call(v, $38)) {
                                              $37[$38] = v[$38];
                                          };
                                      };
                                      $37.document = {
                                          blocks: blocks
                                      };
                                      return $37;
                                  });
                              };
                              var startIndex = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                              var endIndex = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.endBlockId))(state.document.blocks);
                              var endText = (Data_String_CodeUnits.splitAt(selection.endOffset)(getBlockTextFromBlocks(endIndex)(state.document.blocks))).after;
                              var change2 = removeBetween(startIndex + 1 | 0)(endIndex);
                              var change1 = changeByIndex(editText(function (x) {
                                  return (Data_String_CodeUnits.splitAt(selection.startOffset)(x)).before + endText;
                              }))(startIndex);
                              var blocks = change2(change1(state.document.blocks));
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                  var $40 = {};
                                  for (var $41 in v) {
                                      if ({}.hasOwnProperty.call(v, $41)) {
                                          $40[$41] = v[$41];
                                      };
                                  };
                                  $40.document = {
                                      blocks: blocks
                                  };
                                  return $40;
                              });
                          };
                          var $43 = selection.startOffset !== selection.endOffset;
                          if ($43) {
                              var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                              var change = changeByIndex(editText(function (x) {
                                  return (Data_String_CodeUnits.splitAt(selection.startOffset)(x)).before + (Data_String_CodeUnits.splitAt(selection.endOffset)(x)).after;
                              }))(index);
                              var blocks = change(state.document.blocks);
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                  var $44 = {};
                                  for (var $45 in v) {
                                      if ({}.hasOwnProperty.call(v, $45)) {
                                          $44[$45] = v[$45];
                                      };
                                  };
                                  $44.document = {
                                      blocks: blocks
                                  };
                                  return $44;
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
              };
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                          return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                      });
                  };
                  if (v instanceof OnPase) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_Event_Event.preventDefault(Web_Clipboard_ClipboardEvent.toEvent(v.value0))))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getSelection))(function (selection) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(removeSelection(selection)(false))(function () {
                                  var lines = Data_String_Common.split("\x0a")($foreign.targetValue(v.value0));
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      var $49 = Data_Array.length(lines) === 1;
                                      if ($49) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                              var text = Data_Maybe.fromMaybe("")(Data_Array.head(lines));
                                              var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                              var change = changeByIndex(editText(function (x) {
                                                  var y = Data_String_CodeUnits.splitAt(selection.startOffset)(x);
                                                  return y.before + (text + y.after);
                                              }))(index);
                                              var blocks = change(state.document.blocks);
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $50 = {};
                                                  for (var $51 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $51)) {
                                                          $50[$51] = v1[$51];
                                                      };
                                                  };
                                                  $50.document = {
                                                      blocks: blocks
                                                  };
                                                  return $50;
                                              }))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(selection.startOffset + Data_String_CodePoints.length(text) | 0));
                                                      });
                                                  });
                                              });
                                          });
                                      };
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                          var text = Data_Maybe.fromMaybe("")(Data_Array.head(lines));
                                          var newLines = Data_Maybe.fromMaybe([  ])(Data_Array.tail(lines));
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.map(Data_Functor.functorArray)(function (text2) {
                                              return Data_Functor.map(Effect.functorEffect)(function (id) {
                                                  return {
                                                      id: id,
                                                      text: text2
                                                  };
                                              })(generateDocumentBlockId);
                                          })(newLines))))(function (newLineDatas) {
                                              var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                              var endText = getBlockTextFromBlocks(index)(state.document.blocks);
                                              var endTextAfter = (Data_String_CodeUnits.splitAt(selection.startOffset)(endText)).after;
                                              var toBlockData = function (i) {
                                                  return function (line) {
                                                      var $53 = i === (Data_Array.length(newLineDatas) - 1 | 0);
                                                      if ($53) {
                                                          return {
                                                              id: line.id,
                                                              data: Incentknow_Data_Entities.ParagraphBlockData.create(line.text + endTextAfter)
                                                          };
                                                      };
                                                      return {
                                                          id: line.id,
                                                          data: new Incentknow_Data_Entities.ParagraphBlockData(line.text)
                                                      };
                                                  };
                                              };
                                              var newBlocks = Data_Array.mapWithIndex(toBlockData)(newLineDatas);
                                              var change2 = (function () {
                                                  var $84 = Data_Functor.map(Data_Functor.functorArray)(function (x) {
                                                      var $54 = Data_Eq.eq(Incentknow_Data_Ids.eqDocumentBlockId)(x.id)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId));
                                                      if ($54) {
                                                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(newBlocks);
                                                      };
                                                      return [ x ];
                                                  });
                                                  return function ($85) {
                                                      return Data_Array.concat($84($85));
                                                  };
                                              })();
                                              var change1 = changeByIndex(editText(function (x) {
                                                  var y = Data_String_CodeUnits.splitAt(selection.startOffset)(x);
                                                  return y.before + text;
                                              }))(index);
                                              var blocks = change2(change1(state.document.blocks));
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $55 = {};
                                                  for (var $56 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $56)) {
                                                          $55[$56] = v1[$56];
                                                      };
                                                  };
                                                  $55.document = {
                                                      blocks: blocks
                                                  };
                                                  return $55;
                                              }))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Data_Array.last(newLineDatas))(function (lastLine) {
                                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(lastLine.id)(Data_String_CodePoints.length(lastLine.text)));
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  })())(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state2) {
                                          return Halogen_Query_HalogenM.raise(state2.document);
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnKeyDown) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!Web_UIEvent_KeyboardEvent.isComposing(v.value0))((function () {
                              var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                              if (v1 === "Enter") {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EnterProcess")))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0))))(function () {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getSelection))(function (selection) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(removeSelection(selection)(true))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                      var $60 = selection.startBlockId !== selection.endBlockId;
                                                      if ($60) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.endBlockId))(0));
                                                              });
                                                          });
                                                      };
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state2) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(generateDocumentBlockId))(function (newId) {
                                                              var endIndex = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.endBlockId))(state2.document.blocks);
                                                              var endText = getBlockTextFromBlocks(endIndex)(state2.document.blocks);
                                                              var endTextAfter = (Data_String_CodeUnits.splitAt(selection.startOffset)(endText)).after;
                                                              var newBlock = {
                                                                  id: newId,
                                                                  data: new Incentknow_Data_Entities.ParagraphBlockData(endTextAfter)
                                                              };
                                                              var change2 = (function () {
                                                                  var $86 = Data_Functor.map(Data_Functor.functorArray)(function (x) {
                                                                      var $61 = Data_Eq.eq(Incentknow_Data_Ids.eqDocumentBlockId)(x.id)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.endBlockId));
                                                                      if ($61) {
                                                                          return [ x, newBlock ];
                                                                      };
                                                                      return [ x ];
                                                                  });
                                                                  return function ($87) {
                                                                      return Data_Array.concat($86($87));
                                                                  };
                                                              })();
                                                              var change1 = changeByIndex(editText(function (x) {
                                                                  return (Data_String_CodeUnits.splitAt(selection.startOffset)(x)).before;
                                                              }))(endIndex);
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                                  var $62 = {};
                                                                  for (var $63 in v2) {
                                                                      if ({}.hasOwnProperty.call(v2, $63)) {
                                                                          $62[$63] = v2[$63];
                                                                      };
                                                                  };
                                                                  $62.document = {
                                                                      blocks: change2(change1(state2.document.blocks))
                                                                  };
                                                                  return $62;
                                                              }))(function () {
                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(newId)(0));
                                                                      });
                                                                  });
                                                              });
                                                          });
                                                      });
                                                  })())(function () {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state3) {
                                                          return Halogen_Query_HalogenM.raise(state3.document);
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              };
                              if (v1 === "Space") {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0))))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getSelection))(function (selection) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(removeSelection(selection)(false))(function () {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state2) {
                                                  var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                                  var change = changeByIndex(editText(function (x) {
                                                      var y = Data_String_CodeUnits.splitAt(selection.startOffset)(x);
                                                      return y.before + (" " + y.after);
                                                  }))(index);
                                                  var blocks = change(state2.document.blocks);
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                      var $65 = {};
                                                      for (var $66 in v2) {
                                                          if ({}.hasOwnProperty.call(v2, $66)) {
                                                              $65[$66] = v2[$66];
                                                          };
                                                      };
                                                      $65.document = {
                                                          blocks: blocks
                                                      };
                                                      return $65;
                                                  }))(function () {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(selection.startOffset + 1 | 0));
                                                          }))(function () {
                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state3) {
                                                                  return Halogen_Query_HalogenM.raise(state3.document);
                                                              });
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              };
                              if (v1 === "Backspace") {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0))))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getSelection))(function (selection) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                              var $68 = selection.startBlockId === selection.endBlockId && selection.startOffset === selection.endOffset;
                                              if ($68) {
                                                  var $69 = selection.startOffset === 0;
                                                  if ($69) {
                                                      var i = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                                      var deleteBlockText = getBlockTextFromBlocks(i)(state.document.blocks);
                                                      var cusorBlockText = getBlockTextFromBlocks(i - 1 | 0)(state.document.blocks);
                                                      var change2 = removeBetween(i)(i);
                                                      var change1 = changeByIndex(editText(function (x) {
                                                          return x + deleteBlockText;
                                                      }))(i - 1 | 0);
                                                      var blocks = change2(change1(state.document.blocks));
                                                      var maybeCursorBlock = Data_Array.index(blocks)(i - 1 | 0);
                                                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(i > 0)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                          var $70 = {};
                                                          for (var $71 in v2) {
                                                              if ({}.hasOwnProperty.call(v2, $71)) {
                                                                  $70[$71] = v2[$71];
                                                              };
                                                          };
                                                          $70.document = {
                                                              blocks: blocks
                                                          };
                                                          return $70;
                                                      }))(function () {
                                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeCursorBlock)(function (cursorBlock) {
                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(cursorBlock.id)(Data_String_CodePoints.length(cusorBlockText)));
                                                                  });
                                                              });
                                                          });
                                                      }));
                                                  };
                                                  var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                                  var change = changeByIndex(editText(function (x) {
                                                      return Data_String_CodeUnits.take(selection.startOffset - 1 | 0)(x) + Data_String_CodeUnits.drop(selection.startOffset)(x);
                                                  }))(index);
                                                  var blocks = change(state.document.blocks);
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                      var $73 = {};
                                                      for (var $74 in v2) {
                                                          if ({}.hasOwnProperty.call(v2, $74)) {
                                                              $73[$74] = v2[$74];
                                                          };
                                                      };
                                                      $73.document = {
                                                          blocks: blocks
                                                      };
                                                      return $73;
                                                  }))(function () {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(selection.startOffset - 1 | 0));
                                                          });
                                                      });
                                                  });
                                              };
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(removeSelection(selection)(false))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(setCaret(element)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(selection.startOffset));
                                                      });
                                                  });
                                              });
                                          })())(function () {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state2) {
                                                  return Halogen_Query_HalogenM.raise(state2.document);
                                              });
                                          });
                                      });
                                  });
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          })());
                      });
                  };
                  if (v instanceof OnKeyUp) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getSelection))(function (selection) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("blocks"))(function (maybeElement) {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeElement)(function (element) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))($foreign.getBlockText(element)(selection.startBlockId)))(function (text) {
                                          var index = getBlockIndex(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)(selection.startBlockId))(state.document.blocks);
                                          var change = changeByIndex((function () {
                                              var $88 = editData(normalizeBlockData);
                                              var $89 = editText(function (v2) {
                                                  return text;
                                              });
                                              return function ($90) {
                                                  return $88($89($90));
                                              };
                                          })())(index);
                                          var blocks = change(state.document.blocks);
                                          var document = {
                                              blocks: blocks
                                          };
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                              var $77 = {};
                                              for (var $78 in v2) {
                                                  if ({}.hasOwnProperty.call(v2, $78)) {
                                                      $77[$78] = v2[$78];
                                                  };
                                              };
                                              $77.document = document;
                                              return $77;
                                          }))(function () {
                                              return Halogen_Query_HalogenM.raise(document);
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Document.Editor (line 123, column 16 - line 296, column 27): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($91) {
                          return Data_Maybe.Just.create(HandleInput.create($91));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
  exports["generateDocumentBlockId"] = generateDocumentBlockId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Material.Editor"] = $PS["Incentknow.Organisms.Material.Editor"] || {};
  var exports = $PS["Incentknow.Organisms.Material.Editor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Molecules_PlainTextEditor = $PS["Incentknow.Molecules.PlainTextEditor"];
  var Incentknow_Organisms_Document_Editor = $PS["Incentknow.Organisms.Document.Editor"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeData = (function () {
      function ChangeData(value0) {
          this.value0 = value0;
      };
      ChangeData.create = function (value0) {
          return new ChangeData(value0);
      };
      return ChangeData;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  if (state.data instanceof Incentknow_Data_Entities.DocumentMaterialData) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "documentEditor";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Document_Editor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          value: state.data.value0
                      })(function ($21) {
                          return Data_Maybe.Just.create(ChangeData.create(Incentknow_Data_Entities.DocumentMaterialData.create($21)));
                      });
                  };
                  if (state.data instanceof Incentknow_Data_Entities.PlaintextMaterialData) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "plainTextEditor";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_PlainTextEditor.component(dictMonadAff))({
                          value: state.data.value0,
                          variableHeight: true,
                          readonly: false
                      })(function ($22) {
                          return Data_Maybe.Just.create(ChangeData.create(Incentknow_Data_Entities.PlaintextMaterialData.create($22)));
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Material.Editor (line 60, column 3 - line 66, column 56): " + [ state.data.constructor.name ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          data: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof ChangeData) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $17 = {};
                          for (var $18 in v1) {
                              if ({}.hasOwnProperty.call(v1, $18)) {
                                  $17[$18] = v1[$18];
                              };
                          };
                          $17.data = v.value0;
                          return $17;
                      }))(function () {
                          return Halogen_Query_HalogenM.raise(v.value0);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Material.Editor (line 69, column 16 - line 74, column 15): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($23) {
                          return Data_Maybe.Just.create(HandleInput.create($23));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Material.Utils"] = $PS["Incentknow.Organisms.Material.Utils"] || {};
  var exports = $PS["Incentknow.Organisms.Material.Utils"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Effect_Class = $PS["Effect.Class"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Organisms_Document_Editor = $PS["Incentknow.Organisms.Document.Editor"];                
  var createNewMaterialData = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Incentknow_Data_Entities.MaterialTypeDocument) {
              return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Incentknow_Organisms_Document_Editor.generateDocumentBlockId))(function (newId) {
                  var document = {
                      blocks: [ {
                          id: newId,
                          data: new Incentknow_Data_Entities.ParagraphBlockData("")
                      } ]
                  };
                  return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(new Incentknow_Data_Entities.DocumentMaterialData(document));
              });
          };
          if (v instanceof Incentknow_Data_Entities.MaterialTypePlaintext) {
              return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(new Incentknow_Data_Entities.PlaintextMaterialData(""));
          };
          throw new Error("Failed pattern match at Incentknow.Organisms.Material.Utils (line 11, column 25 - line 17, column 36): " + [ v.constructor.name ]);
      };
  };
  exports["createNewMaterialData"] = createNewMaterialData;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Material.EditorFromDraft"] = $PS["Incentknow.Organisms.Material.EditorFromDraft"] || {};
  var exports = $PS["Incentknow.Organisms.Material.EditorFromDraft"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Material_Editor = $PS["Incentknow.Organisms.Material.Editor"];
  var Incentknow_Organisms_Material_Utils = $PS["Incentknow.Organisms.Material.Utils"];                
  var GetUpdation = (function () {
      function GetUpdation(value0) {
          this.value0 = value0;
      };
      GetUpdation.create = function (value0) {
          return new GetUpdation(value0);
      };
      return GetUpdation;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeData = (function () {
      function ChangeData(value0) {
          this.value0 = value0;
      };
      ChangeData.create = function (value0) {
          return new ChangeData(value0);
      };
      return ChangeData;
  })();
  var CheckChange = (function () {
      function CheckChange() {

      };
      CheckChange.value = new CheckChange();
      return CheckChange;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Monad_Rec_Class.forever(Effect_Aff.monadRecAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(2000.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(CheckChange.value);
          }))))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-new-content") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "editor";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_Editor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: state.data
                  })(function ($65) {
                      return Data_Maybe.Just.create(ChangeData.create($65));
                  }) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          saveState: Incentknow_Atoms_Message.HasNotChange.value,
          loading: false,
          timerSubId: Data_Maybe.Nothing.value,
          data: Data_Maybe.fromMaybe(new Incentknow_Data_Entities.PlaintextMaterialData(""))(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return v.data;
          })(input.value)),
          draftId: Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return v.draftId;
          })(input.value),
          materialType: input.materialType
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
          var $26 = Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.NotSaved.value);
          if ($26) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(function (draftId) {
                  return v.value0(new Data_Tuple.Tuple(draftId, state.data));
              })(state.draftId));
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
      });
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              var makeSaveStateSaved = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.Saving.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                      var $28 = {};
                      for (var $29 in v) {
                          if ({}.hasOwnProperty.call(v, $29)) {
                              $28[$29] = v[$29];
                          };
                      };
                      $28.saveState = Incentknow_Atoms_Message.Saved.value;
                      return $28;
                  }));
              });
              return function (v) {
                  if (v instanceof HandleInput) {
                      return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(state.timerSubId))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (timerSubId) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $33 = {};
                                  for (var $34 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $34)) {
                                          $33[$34] = v1[$34];
                                      };
                                  };
                                  $33.timerSubId = new Data_Maybe.Just(timerSubId);
                                  return $33;
                              });
                          })))(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(state.draftId))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_Organisms_Material_Utils.createNewMaterialData(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(state.materialType))(function (newData) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $36 = {};
                                      for (var $37 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $37)) {
                                              $36[$37] = v1[$37];
                                          };
                                      };
                                      $36.data = newData;
                                      return $36;
                                  });
                              }));
                          });
                      });
                  };
                  if (v instanceof ChangeData) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (state.saveState instanceof Incentknow_Atoms_Message.Saving) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $40 = {};
                                      for (var $41 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $41)) {
                                              $40[$41] = v1[$41];
                                          };
                                      };
                                      $40.data = v.value0;
                                      $40.saveState = Incentknow_Atoms_Message.SavingButChanged.value;
                                      return $40;
                                  });
                              };
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $43 = {};
                                  for (var $44 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $44)) {
                                          $43[$44] = v1[$44];
                                      };
                                  };
                                  $43.data = v.value0;
                                  $43.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                  return $43;
                              });
                          })())(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(state.draftId))(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(CheckChange.value));
                          });
                      });
                  };
                  if (v instanceof CheckChange) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.NotSaved.value) && !state.loading)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $47 = {};
                              for (var $48 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $48)) {
                                      $47[$48] = v1[$48];
                                  };
                              };
                              $47.saveState = Incentknow_Atoms_Message.Saving.value;
                              return $47;
                          }))(function () {
                              if (state.draftId instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.editMaterialDraft(state.draftId.value0)(state.data)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return makeSaveStateSaved;
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $53 = {};
                                              for (var $54 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $54)) {
                                                      $53[$54] = v1[$54];
                                                  };
                                              };
                                              $53.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                              return $53;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.Material.EditorFromDraft (line 146, column 11 - line 148, column 62): " + [ result.constructor.name ]);
                                  });
                              };
                              if (state.draftId instanceof Data_Maybe.Nothing) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createNewMaterialDraft(Data_Maybe.Nothing.value)(state.data)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(makeSaveStateSaved)(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $58 = {};
                                                  for (var $59 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $59)) {
                                                          $58[$59] = v1[$59];
                                                      };
                                                  };
                                                  $58.draftId = new Data_Maybe.Just(result.value0.draftId);
                                                  return $58;
                                              }))(function () {
                                                  return Halogen_Query_HalogenM.raise(result.value0.draftId);
                                              });
                                          });
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $62 = {};
                                              for (var $63 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $63)) {
                                                      $62[$63] = v1[$63];
                                                  };
                                              };
                                              $62.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                              return $62;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.Material.EditorFromDraft (line 151, column 11 - line 156, column 62): " + [ result.constructor.name ]);
                                  });
                              };
                              throw new Error("Failed pattern match at Incentknow.Organisms.Material.EditorFromDraft (line 143, column 7 - line 156, column 62): " + [ state.draftId.constructor.name ]);
                          }));
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Material.EditorFromDraft (line 116, column 16 - line 156, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };                                     
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: handleQuery,
                      receive: function ($66) {
                          return Data_Maybe.Just.create(HandleInput.create($66));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["GetUpdation"] = GetUpdation;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Material.SlotEditor"] = $PS["Incentknow.Organisms.Material.SlotEditor"] || {};
  var exports = $PS["Incentknow.Organisms.Material.SlotEditor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_Organisms_Material_EditorFromDraft = $PS["Incentknow.Organisms.Material.EditorFromDraft"];                
  var GetUpdation = (function () {
      function GetUpdation(value0) {
          this.value0 = value0;
      };
      GetUpdation.create = function (value0) {
          return new GetUpdation(value0);
      };
      return GetUpdation;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeDraftId = (function () {
      function ChangeDraftId(value0) {
          this.value0 = value0;
      };
      ChangeDraftId.create = function (value0) {
          return new ChangeDraftId(value0);
      };
      return ChangeDraftId;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "editor";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_EditorFromDraft.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: (function () {
                          var v = Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Property.fromJsonToMaterialObject)(state.materialObject);
                          if (v instanceof Data_Maybe.Just && v.value0 instanceof Incentknow_Data_Property.MaterialObjectDraft) {
                              return new Data_Maybe.Just(v.value0.value0);
                          };
                          return Data_Maybe.Nothing.value;
                      })(),
                      materialType: state.materialType
                  })(function ($21) {
                      return Data_Maybe.Just.create(ChangeDraftId.create($21));
                  });
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          materialObject: input.value,
          materialType: input.materialType
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
          return "editor";
      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.request(Incentknow_Organisms_Material_EditorFromDraft.GetUpdation.create)))(function (result) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(result));
      });
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Property.getMaterialObjectId)(state.materialObject))(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Property.getMaterialObjectId)(v.value0.value)))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)));
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof ChangeDraftId) {
                      return Halogen_Query_HalogenM.raise(Data_Maybe.Just.create(Incentknow_Data_Property.fromMaterialObjectToJson(Incentknow_Data_Property.toMaterialObjectFromDraftId(v.value0))));
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Material.SlotEditor (line 78, column 16 - line 86, column 84): " + [ v.constructor.name ]);
              };
          };
      };
  };                                     
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: handleQuery,
                      receive: function ($22) {
                          return Data_Maybe.Just.create(HandleInput.create($22));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["GetUpdation"] = GetUpdation;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Content.ValueEditor"] = $PS["Incentknow.Organisms.Content.ValueEditor"] || {};
  var exports = $PS["Incentknow.Organisms.Content.ValueEditor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_ContentMenu = $PS["Incentknow.Molecules.ContentMenu"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];
  var Incentknow_Organisms_Material_SlotEditor = $PS["Incentknow.Organisms.Material.SlotEditor"];                
  var GetMaterialUpdations = (function () {
      function GetMaterialUpdations(value0) {
          this.value0 = value0;
      };
      GetMaterialUpdations.create = function (value0) {
          return new GetMaterialUpdations(value0);
      };
      return GetMaterialUpdations;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var ChangeAttribute = (function () {
      function ChangeAttribute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeAttribute.create = function (value0) {
          return function (value1) {
              return new ChangeAttribute(value0, value1);
          };
      };
      return ChangeAttribute;
  })();
  var ChangeItem = (function () {
      function ChangeItem(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeItem.create = function (value0) {
          return function (value1) {
              return new ChangeItem(value0, value1);
          };
      };
      return ChangeItem;
  })();
  var DeleteItem = (function () {
      function DeleteItem(value0) {
          this.value0 = value0;
      };
      DeleteItem.create = function (value0) {
          return new DeleteItem(value0);
      };
      return DeleteItem;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var initialState = function (input) {
      return {
          value: input.value,
          env: input.env
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
          var isMaterial = (function () {
              if (state.value instanceof Incentknow_Data_Property.DocumentTypedValue) {
                  return true;
              };
              if (state.value instanceof Incentknow_Data_Property.TextTypedValue) {
                  return true;
              };
              return false;
          })();
          if (isMaterial) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                  return "material";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.request(Incentknow_Organisms_Material_SlotEditor.GetUpdation.create)))(function (result) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                      return v.value0(Data_Map_Internal.singleton(v1.value0)(v1.value1));
                  })(result));
              });
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(Data_Map_Internal.empty)));
      });
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof ChangeValue) {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  };
                  if (v instanceof ChangeAttribute) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var newValue = (function () {
                              if (state.value instanceof Incentknow_Data_Property.ObjectTypedValue) {
                                  return Incentknow_Data_Property.ObjectTypedValue.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                                      var $32 = Data_Eq.eq(Incentknow_Data_Ids.eqPropertyId)(x.info.id)(v.value0);
                                      if ($32) {
                                          return {
                                              value: v.value1,
                                              info: x.info
                                          };
                                      };
                                      return x;
                                  })(state.value.value0));
                              };
                              return state.value;
                          })();
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $34 = {};
                              for (var $35 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $35)) {
                                      $34[$35] = v1[$35];
                                  };
                              };
                              $34.value = newValue;
                              return $34;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise(newValue);
                          });
                      });
                  };
                  if (v instanceof ChangeItem) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var array = (function () {
                              if (state.value instanceof Incentknow_Data_Property.ArrayTypedValue) {
                                  return state.value.value0;
                              };
                              return [  ];
                          })();
                          var newValue = Incentknow_Data_Property.ArrayTypedValue.create(Data_Array.mapWithIndex(function (i) {
                              return function (x) {
                                  var $41 = i === v.value0;
                                  if ($41) {
                                      return v.value1;
                                  };
                                  return x;
                              };
                          })(array));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $42 = {};
                              for (var $43 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $43)) {
                                      $42[$43] = v1[$43];
                                  };
                              };
                              $42.value = newValue;
                              return $42;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise(newValue);
                          });
                      });
                  };
                  if (v instanceof DeleteItem) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var array = (function () {
                              if (state.value instanceof Incentknow_Data_Property.ArrayTypedValue) {
                                  return state.value.value0;
                              };
                              return [  ];
                          })();
                          var newValue = Incentknow_Data_Property.ArrayTypedValue.create(Data_Maybe.fromMaybe(array)(Data_Array.deleteAt(v.value0)(array)));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $49 = {};
                              for (var $50 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $50)) {
                                      $49[$50] = v1[$50];
                                  };
                              };
                              $49.value = newValue;
                              return $49;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise(newValue);
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueEditor (line 199, column 16 - line 233, column 44): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var fromEnumeratorToSelectMenuItem = function ($$enum) {
      return {
          id: $$enum.id,
          name: $$enum.displayName,
          searchWord: $$enum.id + $$enum.displayName,
          html: Halogen_HTML_Core.text($$enum.displayName)
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var toStringOrEmpty = (function () {
                  var $79 = Data_Maybe.fromMaybe("");
                  return function ($80) {
                      return $79(Data_Argonaut_Core.toString($80));
                  };
              })();
              var toReferenceValueFromMaybe = function (v) {
                  if (v instanceof Data_Maybe.Just) {
                      return new Incentknow_Data_Property.JustReference(v.value0);
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Incentknow_Data_Property.NullReference.value;
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueEditor (line 194, column 31 - line 196, column 29): " + [ v.constructor.name ]);
              };
              var toMaybeString = function (x) {
                  var $58 = x === "";
                  if ($58) {
                      return Data_Maybe.Nothing.value;
                  };
                  return new Data_Maybe.Just(x);
              };
              var toMaybe = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueEditor (line 189, column 13 - line 191, column 22): " + [ v.constructor.name ]);
              };
              if (state.value instanceof Incentknow_Data_Property.StringTypedValue) {
                  return Incentknow_Atoms_Inputs.textarea({
                      onChange: function ($81) {
                          return ChangeValue.create(Incentknow_Data_Property.StringTypedValue.create(toMaybeString($81)));
                      },
                      placeholder: "",
                      value: Data_Maybe.fromMaybe("")(state.value.value0)
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.ImageTypedValue) {
                  return Incentknow_Atoms_Inputs.textarea({
                      onChange: function ($82) {
                          return ChangeValue.create(Incentknow_Data_Property.ImageTypedValue.create(toMaybeString($82)));
                      },
                      placeholder: "",
                      value: Data_Maybe.fromMaybe("")(state.value.value0)
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.IntTypedValue) {
                  return Incentknow_Atoms_Inputs.numberarea({
                      onChange: function ($83) {
                          return ChangeValue.create(Incentknow_Data_Property.IntTypedValue.create($83));
                      },
                      value: state.value.value0
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.EnumTypedValue) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "selectMenu";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Data_Ord.ordString)(Data_Eq.eqString)(dictBehaviour)(dictMonadAff))({
                      initial: {
                          items: Data_Functor.map(Data_Functor.functorArray)(fromEnumeratorToSelectMenuItem)(state.value.value0),
                          completed: true
                      },
                      fetchMultiple: function (v) {
                          return Data_Maybe.Nothing.value;
                      },
                      fetchSingle: Data_Maybe.Nothing.value,
                      fetchId: "",
                      value: state.value.value1,
                      disabled: false,
                      visibleCrossmark: true
                  })((function () {
                      var $84 = Incentknow_Data_Property.EnumTypedValue.create(state.value.value0);
                      return function ($85) {
                          return Data_Maybe.Just.create(ChangeValue.create($84($85)));
                      };
                  })());
              };
              if (state.value instanceof Incentknow_Data_Property.BoolTypedValue) {
                  return Incentknow_Atoms_Inputs.checkbox("")(Data_Maybe.fromMaybe(false)(state.value.value0))(function ($86) {
                      return ChangeValue.create(Incentknow_Data_Property.BoolTypedValue.create(Data_Maybe.Just.create($86)));
                  })(false);
              };
              if (state.value instanceof Incentknow_Data_Property.TextTypedValue) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "material";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_SlotEditor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toMaybeFromReferenceValue(state.value.value0),
                      materialType: Incentknow_Data_Entities.MaterialTypePlaintext.value
                  })(function ($87) {
                      return Data_Maybe.Just.create(ChangeValue.create(Incentknow_Data_Property.DocumentTypedValue.create(toReferenceValueFromMaybe($87))));
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.ContentTypedValue) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "contentMenu";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_ContentMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      spaceId: (function () {
                          var $70 = Data_Eq.eq(Incentknow_Data_Entities.eqFormatUsage)(state.value.value0.usage)(Incentknow_Data_Entities.Internal.value);
                          if ($70) {
                              return new Data_Maybe.Just(state.value.value0.space.spaceId);
                          };
                          return state.env.spaceId;
                      })(),
                      value: Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                          return v.contentId;
                      })(Incentknow_Data_Property.toMaybeFromReferenceValue(state.value.value1)),
                      formatId: state.value.value0.formatId,
                      disabled: false
                  })((function () {
                      var $88 = Incentknow_Data_Property.ContentTypedValue.create(state.value.value0);
                      var $89 = Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Property.toRelatedContentFromContentId);
                      return function ($90) {
                          return Data_Maybe.Just.create(ChangeValue.create($88(toReferenceValueFromMaybe($89($90)))));
                      };
                  })());
              };
              if (state.value instanceof Incentknow_Data_Property.EntityTypedValue) {
                  return Halogen_HTML_Core.text("");
              };
              if (state.value instanceof Incentknow_Data_Property.DocumentTypedValue) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "material";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_SlotEditor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toMaybeFromReferenceValue(state.value.value0),
                      materialType: Incentknow_Data_Entities.MaterialTypeDocument.value
                  })(function ($91) {
                      return Data_Maybe.Just.create(ChangeValue.create(Incentknow_Data_Property.DocumentTypedValue.create(toReferenceValueFromMaybe($91))));
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.UrlTypedValue) {
                  return Incentknow_Atoms_Inputs.textarea({
                      onChange: function ($92) {
                          return ChangeValue.create(Incentknow_Data_Property.UrlTypedValue.create(toMaybeString($92)));
                      },
                      placeholder: "",
                      value: Data_Maybe.fromMaybe("")(state.value.value0)
                  });
              };
              if (state.value instanceof Incentknow_Data_Property.ArrayTypedValue) {
                  var renderItem = function (num) {
                      return function (item) {
                          return Halogen_HTML_Elements.div([  ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "value";
                          }))(Data_Ord.ordInt)(Data_Symbol.SProxy.value)(num)(component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                              value: item,
                              env: state.env
                          })((function () {
                              var $93 = ChangeItem.create(num);
                              return function ($94) {
                                  return Data_Maybe.Just.create($93($94));
                              };
                          })()), Incentknow_Atoms_Inputs.button("\u524a\u9664")(new DeleteItem(num)) ]);
                      };
                  };
                  return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div_(Data_Array.mapWithIndex(renderItem)(state.value.value0)) ]);
              };
              if (state.value instanceof Incentknow_Data_Property.ObjectTypedValue) {
                  var renderProperty = function (prop) {
                      return Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("property-type") ])([ Incentknow_Atoms_Icon.propertyIcon(prop.info), Halogen_HTML_Core.text(prop.info.displayName) ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("property-value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "property";
                      }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.info.id)(component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          value: prop.value,
                          env: state.env
                      })((function () {
                          var $95 = ChangeAttribute.create(prop.info.id);
                          return function ($96) {
                              return Data_Maybe.Just.create($95($96));
                          };
                      })()) ]) ]);
                  };
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-value-editor-object") ])(Data_Functor.map(Data_Functor.functorArray)(renderProperty)(state.value.value0));
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.Content.ValueEditor (line 103, column 16 - line 183, column 10): " + [ state.value.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: handleQuery,
                      receive: function ($97) {
                          return Data_Maybe.Just.create(HandleInput.create($97));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["GetMaterialUpdations"] = GetMaterialUpdations;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Content.Editor"] = $PS["Incentknow.Organisms.Content.Editor"] || {};
  var exports = $PS["Incentknow.Organisms.Content.Editor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Content_ValueEditor = $PS["Incentknow.Organisms.Content.ValueEditor"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var GetMaterialUpdations = (function () {
      function GetMaterialUpdations(value0) {
          this.value0 = value0;
      };
      GetMaterialUpdations.create = function (value0) {
          return new GetMaterialUpdations(value0);
      };
      return GetMaterialUpdations;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeInfo = (function () {
      function ChangeInfo(value0) {
          this.value0 = value0;
      };
      ChangeInfo.create = function (value0) {
          return new ChangeInfo(value0);
      };
      return ChangeInfo;
  })();
  var ChangeSection = (function () {
      function ChangeSection(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeSection.create = function (value0) {
          return function (value1) {
              return new ChangeSection(value0, value1);
          };
      };
      return ChangeSection;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderSection = function (prop) {
                  return Incentknow_Templates_Page.sectionWithHeader("section")([ Halogen_HTML_Core.text(prop.info.displayName) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("section-value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "value";
                  }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.info.id))(Incentknow_Organisms_Content_ValueEditor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: Incentknow_Data_Property.toTypedValue(prop.value)(prop.info.type),
                      env: state.env
                  })((function () {
                      var $27 = ChangeSection.create(prop.info.id);
                      return function ($28) {
                          return Data_Maybe.Just.create($27($28));
                      };
                  })()) ]) ]);
              };
              var comp = Incentknow_Data_Property.toPropertyComposition(true)(Incentknow_Data_Property.mkProperties(state.value)(state.format.currentStructure.properties));
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-content-editor") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Incentknow_Templates_Page.section("top")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "value";
              }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)("top")(Incentknow_Organisms_Content_ValueEditor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                  value: Incentknow_Data_Property.toTypedValue(state.value)(Incentknow_Data_Entities.ObjectType.create(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                      return v.info;
                  })(comp.info))),
                  env: state.env
              })(function ($29) {
                  return Data_Maybe.Just.create(ChangeInfo.create($29));
              }) ]) ])(Data_Functor.map(Data_Functor.functorArray)(renderSection)(comp.sections)));
          };
      };
  };
  var initialState = function (input) {
      return {
          format: input.format,
          value: input.value,
          env: input.env
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
          var comp = Incentknow_Data_Property.toPropertyComposition(true)(Incentknow_Data_Property.mkProperties(state.value)(state.format.currentStructure.properties));
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Traversable["for"](Halogen_Query_HalogenM.applicativeHalogenM)(Data_Traversable.traversableArray)(comp.sections)(function (prop) {
              return Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                  return "value";
              }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.info.id))(Halogen_Query.request(Incentknow_Organisms_Content_ValueEditor.GetMaterialUpdations.create));
          }))(function (results) {
              var result = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Map_Internal.union(Incentknow_Data_Ids.ordMaterialDraftId))(Data_Map_Internal.empty)(Data_Array.catMaybes(results));
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(result)));
          });
      });
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof ChangeInfo) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var newValue = Incentknow_Data_Property.assignJson(state.value)(Incentknow_Data_Property.toJsonFromTypedValue(v.value0));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $18 = {};
                              for (var $19 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $19)) {
                                      $18[$19] = v1[$19];
                                  };
                              };
                              $18.value = newValue;
                              return $18;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise(newValue);
                          });
                      });
                  };
                  if (v instanceof ChangeSection) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var newValue = Incentknow_Data_Property.insertJson(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(v.value0))(Incentknow_Data_Property.toJsonFromTypedValue(v.value1))(state.value);
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $22 = {};
                              for (var $23 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $23)) {
                                      $22[$23] = v1[$23];
                                  };
                              };
                              $22.value = newValue;
                              return $22;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise(newValue);
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.Content.Editor (line 94, column 16 - line 105, column 21): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: handleQuery,
                      receive: function ($30) {
                          return Data_Maybe.Just.create(HandleInput.create($30));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["GetMaterialUpdations"] = GetMaterialUpdations;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.EditContent"] = $PS["Incentknow.Organisms.EditContent"] || {};
  var exports = $PS["Incentknow.Organisms.EditContent"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_FormatMenu = $PS["Incentknow.Molecules.FormatMenu"];
  var Incentknow_Molecules_SpaceMenu = $PS["Incentknow.Molecules.SpaceMenu"];
  var Incentknow_Molecules_StructureMenu = $PS["Incentknow.Molecules.StructureMenu"];
  var Incentknow_Organisms_Content_Editor = $PS["Incentknow.Organisms.Content.Editor"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];                
  var CreatedDraft = (function () {
      function CreatedDraft(value0) {
          this.value0 = value0;
      };
      CreatedDraft.create = function (value0) {
          return new CreatedDraft(value0);
      };
      return CreatedDraft;
  })();
  var UpdatedDraft = (function () {
      function UpdatedDraft(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UpdatedDraft.create = function (value0) {
          return function (value1) {
              return new UpdatedDraft(value0, value1);
          };
      };
      return UpdatedDraft;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize() {

      };
      Finalize.value = new Finalize();
      return Finalize;
  })();
  var Load = (function () {
      function Load() {

      };
      Load.value = new Load();
      return Load;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeSpace = (function () {
      function ChangeSpace(value0) {
          this.value0 = value0;
      };
      ChangeSpace.create = function (value0) {
          return new ChangeSpace(value0);
      };
      return ChangeSpace;
  })();
  var ChangeStructure = (function () {
      function ChangeStructure(value0) {
          this.value0 = value0;
      };
      ChangeStructure.create = function (value0) {
          return new ChangeStructure(value0);
      };
      return ChangeStructure;
  })();
  var ChangeValue = (function () {
      function ChangeValue(value0) {
          this.value0 = value0;
      };
      ChangeValue.create = function (value0) {
          return new ChangeValue(value0);
      };
      return ChangeValue;
  })();
  var CheckChange = (function () {
      function CheckChange(value0) {
          this.value0 = value0;
      };
      CheckChange.create = function (value0) {
          return new CheckChange(value0);
      };
      return CheckChange;
  })();
  var FetchedFormat = (function () {
      function FetchedFormat(value0) {
          this.value0 = value0;
      };
      FetchedFormat.create = function (value0) {
          return new FetchedFormat(value0);
      };
      return FetchedFormat;
  })();
  var FetchedDraft = (function () {
      function FetchedDraft(value0) {
          this.value0 = value0;
      };
      FetchedDraft.create = function (value0) {
          return new FetchedDraft(value0);
      };
      return FetchedDraft;
  })();
  var Commit = (function () {
      function Commit() {

      };
      Commit.value = new Commit();
      return Commit;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Monad_Rec_Class.forever(Effect_Aff.monadRecAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(2000.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(new CheckChange(false));
          }))))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var initialState = function (input) {
      return {
          format: Data_Maybe.Nothing.value,
          value: Data_Argonaut_Core.jsonNull,
          target: input,
          saveState: Incentknow_Atoms_Message.HasNotChange.value,
          loading: false,
          timerSubId: Data_Maybe.Nothing.value,
          draft: Incentknow_API_Execution.Loading.value,
          draftInfo: Data_Maybe.Nothing.value,
          committed: false
      };
  };
  var editor_ = Data_Symbol.SProxy.value;
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              var makeSaveStateSaved = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.Saving.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                      var $32 = {};
                      for (var $33 in v) {
                          if ({}.hasOwnProperty.call(v, $33)) {
                              $32[$33] = v[$33];
                          };
                      };
                      $32.saveState = Incentknow_Atoms_Message.Saved.value;
                      return $32;
                  }));
              });
              var getMaterials = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                  return "editor";
              }))(Data_Ord.ordUnit)(editor_)(Data_Unit.unit)(Halogen_Query.request(Incentknow_Organisms_Content_Editor.GetMaterialUpdations.create)))(function (maybeMaterialMap) {
                  var materialMap = Data_Maybe.fromMaybe(Data_Map_Internal.empty)(maybeMaterialMap);
                  var materials = Data_Functor.map(Data_Functor.functorArray)(function (v) {
                      return {
                          draftId: v.value0,
                          data: v.value1
                      };
                  })(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(materialMap));
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(materials);
              });
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EditContent.HandleInput")))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Route.eqEditContentTarget)(state.target)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(new CheckChange(true)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                      return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Load.value);
                                  });
                              }));
                          });
                      });
                  };
                  if (v instanceof Finalize) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EditContent.Finalize start")))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(new CheckChange(true)))(function () {
                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EditContent.Finalize end"));
                          });
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Load.value))(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(state.timerSubId))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (timerSubId) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $40 = {};
                                      for (var $41 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $41)) {
                                              $40[$41] = v1[$41];
                                          };
                                      };
                                      $40.timerSubId = new Data_Maybe.Just(timerSubId);
                                      return $40;
                                  });
                              }));
                          });
                      });
                  };
                  if (v instanceof Load) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.TargetBlank) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $44 = {};
                                  for (var $45 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $45)) {
                                          $44[$45] = v1[$45];
                                      };
                                  };
                                  $44.target = new Incentknow_Route.TargetBlank(state.target.value0, state.target.value1);
                                  return $44;
                              }))(function () {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.target.value1)(function (structureId2) {
                                      return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormat.create)(Incentknow_API.getFocusedFormatByStructure(structureId2));
                                  });
                              });
                          };
                          if (state.target instanceof Incentknow_Route.TargetDraft) {
                              return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedDraft.create)(Incentknow_API.getContentDraft(state.target.value0));
                          };
                          if (state.target instanceof Incentknow_Route.TargetContent) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.startContentEditing(state.target.value0)(Data_Maybe.Nothing.value)))(function (maybeDraftId) {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeDraftId)(function (draftId) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetDraft(draftId)))))(function () {
                                          return Halogen_Query_HalogenM.raise(new CreatedDraft(draftId));
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 271, column 5 - line 286, column 41): " + [ state.target.constructor.name ]);
                      });
                  };
                  if (v instanceof FetchedFormat) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (format) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $51 = {};
                              for (var $52 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $52)) {
                                      $51[$52] = v1[$52];
                                  };
                              };
                              $51.format = Incentknow_API_Execution.toMaybe(format);
                              $51.value = Data_Maybe.fromMaybe(Data_Argonaut_Core.jsonNull)(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_Property.getDefaultValue)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                                  return v2.currentStructure.properties;
                              })(Incentknow_API_Execution.toMaybe(format))));
                              return $51;
                          });
                      });
                  };
                  if (v instanceof FetchedDraft) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (draft) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $55 = {};
                              for (var $56 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $56)) {
                                      $55[$56] = v1[$56];
                                  };
                              };
                              $55.format = Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                                  return v2.format;
                              })(Incentknow_API_Execution.toMaybe(draft));
                              $55.value = Data_Maybe.fromMaybe(Data_Argonaut_Core.jsonNull)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                                  return v2.data;
                              })(Incentknow_API_Execution.toMaybe(draft)));
                              $55.draft = draft;
                              return $55;
                          });
                      });
                  };
                  if (v instanceof ChangeSpace) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.TargetBlank) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $60 = {};
                                  for (var $61 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $61)) {
                                          $60[$61] = v1[$61];
                                      };
                                  };
                                  $60.target = new Incentknow_Route.TargetBlank(v.value0, state.target.value1);
                                  return $60;
                              }))(function () {
                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqSpaceId))(v.value0)(state.target.value0))(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(v.value0, state.target.value1)))));
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof ChangeStructure) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (state.target instanceof Incentknow_Route.TargetBlank) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $67 = {};
                                      for (var $68 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $68)) {
                                              $67[$68] = v1[$68];
                                          };
                                      };
                                      $67.target = new Incentknow_Route.TargetBlank(state.target.value0, v.value0);
                                      return $67;
                                  }))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EditContent.ChangeStructure.modify" + (Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                                          var $134 = Data_Show.show(Data_Show.showString);
                                          var $135 = Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceId);
                                          return function ($136) {
                                              return $134($135($136));
                                          };
                                      })())(state.target.value0)) + ("," + Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                                          var $137 = Data_Show.show(Data_Show.showString);
                                          var $138 = Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeStructureId);
                                          return function ($139) {
                                              return $137($138($139));
                                          };
                                      })())(v.value0)))))))(function () {
                                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqStructureId))(v.value0)(state.target.value1))(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(state.target.value0, v.value0)))));
                                      });
                                  });
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          })())(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $72 = {};
                                  for (var $73 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $73)) {
                                          $72[$73] = v1[$73];
                                      };
                                  };
                                  $72.format = Data_Maybe.Nothing.value;
                                  return $72;
                              }))(function () {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value0)(function (structureId2) {
                                      return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormat.create)(Incentknow_API.getFocusedFormatByStructure(structureId2));
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof ChangeValue) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (state.saveState instanceof Incentknow_Atoms_Message.Saving) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $77 = {};
                                      for (var $78 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $78)) {
                                              $77[$78] = v1[$78];
                                          };
                                      };
                                      $77.value = v.value0;
                                      $77.saveState = Incentknow_Atoms_Message.SavingButChanged.value;
                                      return $77;
                                  });
                              };
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $80 = {};
                                  for (var $81 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $81)) {
                                          $80[$81] = v1[$81];
                                      };
                                  };
                                  $80.value = v.value0;
                                  $80.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                  return $80;
                              });
                          })())(function () {
                              if (state.target instanceof Incentknow_Route.TargetDraft) {
                                  return Halogen_Query_HalogenM.raise(new UpdatedDraft(state.target.value0, v.value0));
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      });
                  };
                  if (v instanceof CheckChange) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!state.committed)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (v.value0) {
                                  return getMaterials;
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)([  ]);
                          })())(function (materials) {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.NotSaved.value) && !state.loading || Data_Array.length(materials) > 0)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.format)(function (format) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $87 = {};
                                      for (var $88 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $88)) {
                                              $87[$88] = v1[$88];
                                          };
                                      };
                                      $87.saveState = Incentknow_Atoms_Message.Saving.value;
                                      return $87;
                                  }))(function () {
                                      if (state.target instanceof Incentknow_Route.TargetBlank) {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.target.value1)(function (structureId2) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createNewContentDraft(structureId2)(state.target.value0)(state.value)))(function (result) {
                                                  if (result instanceof Data_Maybe.Just) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.pushState(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetDraft(result.value0)))))(function () {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                              var $92 = {};
                                                              for (var $93 in v1) {
                                                                  if ({}.hasOwnProperty.call(v1, $93)) {
                                                                      $92[$93] = v1[$93];
                                                                  };
                                                              };
                                                              $92.target = new Incentknow_Route.TargetDraft(result.value0);
                                                              $92.draftInfo = new Data_Maybe.Just(new Data_Tuple.Tuple(state.target.value0, structureId2));
                                                              return $92;
                                                          }))(function () {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(makeSaveStateSaved)(function () {
                                                                  return Halogen_Query_HalogenM.raise(new CreatedDraft(result.value0));
                                                              });
                                                          });
                                                      });
                                                  };
                                                  if (result instanceof Data_Maybe.Nothing) {
                                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                          var $96 = {};
                                                          for (var $97 in v1) {
                                                              if ({}.hasOwnProperty.call(v1, $97)) {
                                                                  $96[$97] = v1[$97];
                                                              };
                                                          };
                                                          $96.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                                          return $96;
                                                      });
                                                  };
                                                  throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 341, column 17 - line 347, column 66): " + [ result.constructor.name ]);
                                              });
                                          });
                                      };
                                      if (state.target instanceof Incentknow_Route.TargetDraft) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.editContentDraft(state.target.value0)(state.value)(materials)))(function (result) {
                                              if (result instanceof Data_Maybe.Just) {
                                                  return makeSaveStateSaved;
                                              };
                                              if (result instanceof Data_Maybe.Nothing) {
                                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                      var $103 = {};
                                                      for (var $104 in v1) {
                                                          if ({}.hasOwnProperty.call(v1, $104)) {
                                                              $103[$104] = v1[$104];
                                                          };
                                                      };
                                                      $103.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                                      return $103;
                                                  });
                                              };
                                              throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 350, column 15 - line 352, column 64): " + [ result.constructor.name ]);
                                          });
                                      };
                                      if (state.target instanceof Incentknow_Route.TargetContent) {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 337, column 11 - line 353, column 41): " + [ state.target.constructor.name ]);
                                  });
                              }));
                          }));
                      });
                  };
                  if (v instanceof Commit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.TargetDraft) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $110 = {};
                                  for (var $111 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $111)) {
                                          $110[$111] = v1[$111];
                                      };
                                  };
                                  $110.loading = true;
                                  $110.committed = true;
                                  return $110;
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getMaterials)(function (materials) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.commitContent(state.target.value0)(state.value)(materials)))(function (maybeContentId) {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeContentId)(function (contentId) {
                                              return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.Content(contentId));
                                          });
                                      });
                                  });
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 249, column 16 - line 364, column 21): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-edit-content") ])([ Incentknow_Templates_Page.section("top" + (function () {
                      var $114 = Data_Maybe.isJust(state.format);
                      if ($114) {
                          return " top-with-info";
                      };
                      return "";
                  })())([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ (function () {
                      if (state.target instanceof Incentknow_Route.TargetBlank) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("createto createto-blank") ])([ Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30b9\u30da\u30fc\u30b9") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "spaceMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SpaceMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: state.target.value0,
                              disabled: false
                          })(function ($140) {
                              return Data_Maybe.Just.create(ChangeSpace.create($140));
                          }) ]) ]), Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30d5\u30a9\u30fc\u30de\u30c3\u30c8") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "structureMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_StructureMenu.component(dictBehaviour)(dictMonadAff))({
                              value: state.target.value1,
                              filter: Data_Maybe.maybe(Incentknow_Molecules_FormatMenu.None.value)(Incentknow_Molecules_FormatMenu.SpaceBy.create)(state.target.value0),
                              disabled: false
                          })(function ($141) {
                              return Data_Maybe.Just.create(ChangeStructure.create($141));
                          }) ]) ]) ]);
                      };
                      if (state.draftInfo instanceof Data_Maybe.Just) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("createto createto-draft") ])([ Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30b9\u30da\u30fc\u30b9") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "spaceMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SpaceMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: state.draftInfo.value0.value0,
                              disabled: true
                          })(function ($142) {
                              return Data_Maybe.Just.create(ChangeSpace.create($142));
                          }) ]) ]), Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30d5\u30a9\u30fc\u30de\u30c3\u30c8") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "structureMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_StructureMenu.component(dictBehaviour)(dictMonadAff))({
                              value: new Data_Maybe.Just(state.draftInfo.value0.value1),
                              filter: Data_Maybe.maybe(Incentknow_Molecules_FormatMenu.None.value)(Incentknow_Molecules_FormatMenu.SpaceBy.create)(state.draftInfo.value0.value0),
                              disabled: true
                          })(function ($143) {
                              return Data_Maybe.Just.create(ChangeStructure.create($143));
                          }) ]) ]) ]);
                      };
                      return Incentknow_Atoms_Icon.remoteWith(state.draft)(function (draft) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("createto createto-draft") ])([ Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30b9\u30da\u30fc\u30b9") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "spaceMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SpaceMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: new Data_Maybe.Just(draft.format.space.spaceId),
                              disabled: true
                          })(function ($144) {
                              return Data_Maybe.Just.create(ChangeSpace.create($144));
                          }) ]) ]), Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("type") ])([ Halogen_HTML_Core.text("\u30d5\u30a9\u30fc\u30de\u30c3\u30c8") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("value") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "structureMenu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_StructureMenu.component(dictBehaviour)(dictMonadAff))({
                              value: new Data_Maybe.Just(draft.format.currentStructure.structureId),
                              filter: new Incentknow_Molecules_FormatMenu.SpaceBy(draft.format.space.spaceId),
                              disabled: true
                          })(function ($145) {
                              return Data_Maybe.Just.create(ChangeStructure.create($145));
                          }) ]) ]) ]);
                      });
                  })() ]) ]), Incentknow_HTML_Utils.maybeElem(state.format)(function (format) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "editor";
                      }))(Data_Ord.ordUnit)(editor_)(Data_Unit.unit)(Incentknow_Organisms_Content_Editor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                          format: format,
                          value: state.value,
                          env: {
                              spaceId: (function () {
                                  if (state.target instanceof Incentknow_Route.TargetBlank) {
                                      return state.target.value0;
                                  };
                                  return Data_Maybe.Nothing.value;
                              })()
                          }
                      })(function ($146) {
                          return Data_Maybe.Just.create(ChangeValue.create($146));
                      });
                  }), (function () {
                      if (state.target instanceof Incentknow_Route.TargetBlank) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (state.target instanceof Incentknow_Route.TargetDraft && state.draft instanceof Incentknow_API_Execution.Holding) {
                          var $129 = Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqContentId))(state.draft.value0.contentId)(Data_Maybe.Nothing.value);
                          if ($129) {
                              return Incentknow_Atoms_Inputs.submitButton({
                                  isDisabled: state.loading,
                                  isLoading: state.loading,
                                  text: "\u4f5c\u6210",
                                  loadingText: "\u4f5c\u6210\u4e2d",
                                  onClick: Commit.value
                              });
                          };
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      if (state.target instanceof Incentknow_Route.TargetDraft) {
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      if (state.target instanceof Incentknow_Route.TargetContent) {
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.EditContent (line 195, column 9 - line 229, column 16): " + [ state.target.constructor.name, state.draft.constructor.name ]);
                  })() ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($147) {
                          return Data_Maybe.Just.create(HandleInput.create($147));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: new Data_Maybe.Just(Finalize.value)
                  })
              });
          };
      };
  };
  exports["CreatedDraft"] = CreatedDraft;
  exports["UpdatedDraft"] = UpdatedDraft;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.EditMaterial"] = $PS["Incentknow.Organisms.EditMaterial"] || {};
  var exports = $PS["Incentknow.Organisms.EditMaterial"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_Material_Editor = $PS["Incentknow.Organisms.Material.Editor"];
  var Incentknow_Organisms_Material_Utils = $PS["Incentknow.Organisms.Material.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];                
  var CreatedDraft = (function () {
      function CreatedDraft(value0) {
          this.value0 = value0;
      };
      CreatedDraft.create = function (value0) {
          return new CreatedDraft(value0);
      };
      return CreatedDraft;
  })();
  var UpdatedDraft = (function () {
      function UpdatedDraft(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UpdatedDraft.create = function (value0) {
          return function (value1) {
              return new UpdatedDraft(value0, value1);
          };
      };
      return UpdatedDraft;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize() {

      };
      Finalize.value = new Finalize();
      return Finalize;
  })();
  var Load = (function () {
      function Load() {

      };
      Load.value = new Load();
      return Load;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeSpace = (function () {
      function ChangeSpace(value0) {
          this.value0 = value0;
      };
      ChangeSpace.create = function (value0) {
          return new ChangeSpace(value0);
      };
      return ChangeSpace;
  })();
  var ChangeData = (function () {
      function ChangeData(value0) {
          this.value0 = value0;
      };
      ChangeData.create = function (value0) {
          return new ChangeData(value0);
      };
      return ChangeData;
  })();
  var CheckChange = (function () {
      function CheckChange() {

      };
      CheckChange.value = new CheckChange();
      return CheckChange;
  })();
  var FetchedDraft = (function () {
      function FetchedDraft(value0) {
          this.value0 = value0;
      };
      FetchedDraft.create = function (value0) {
          return new FetchedDraft(value0);
      };
      return FetchedDraft;
  })();
  var Commit = (function () {
      function Commit() {

      };
      Commit.value = new Commit();
      return Commit;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Monad_Rec_Class.forever(Effect_Aff.monadRecAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(2000.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(CheckChange.value);
          }))))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var render = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-edit-material") ])([ Incentknow_Templates_Page.section("top")([ (function () {
                      if (state.target instanceof Incentknow_Route.MaterialTargetBlank) {
                          return Halogen_HTML_Core.text("");
                      };
                      return Halogen_HTML_Core.text("");
                  })(), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "editor";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Material_Editor.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: state.data
                  })(function ($100) {
                      return Data_Maybe.Just.create(ChangeData.create($100));
                  }), (function () {
                      if (state.target instanceof Incentknow_Route.MaterialTargetBlank) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (state.target instanceof Incentknow_Route.MaterialTargetDraft && state.draft instanceof Incentknow_API_Execution.Holding) {
                          var $32 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                              return "updaterUser";
                          }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                              return "userId";
                          }))(Incentknow_Data_Ids.eqUserId))()(new Data_Symbol.IsSymbol(function () {
                              return "iconImage";
                          }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                              return "displayName";
                          }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                              return "displayId";
                          }))(Incentknow_Data_Ids.eqUserDisplayId))()(new Data_Symbol.IsSymbol(function () {
                              return "createdAt";
                          }))(Data_Eq.eqNumber))))()(new Data_Symbol.IsSymbol(function () {
                              return "updatedAt";
                          }))(Data_Eq.eqNumber))()(new Data_Symbol.IsSymbol(function () {
                              return "materialType";
                          }))(Incentknow_Data_Entities.eqMaterialType))()(new Data_Symbol.IsSymbol(function () {
                              return "materialId";
                          }))(Incentknow_Data_Ids.eqMaterialId))()(new Data_Symbol.IsSymbol(function () {
                              return "displayName";
                          }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                              return "creatorUser";
                          }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                              return "userId";
                          }))(Incentknow_Data_Ids.eqUserId))()(new Data_Symbol.IsSymbol(function () {
                              return "iconImage";
                          }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                              return "displayName";
                          }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                              return "displayId";
                          }))(Incentknow_Data_Ids.eqUserDisplayId))()(new Data_Symbol.IsSymbol(function () {
                              return "createdAt";
                          }))(Data_Eq.eqNumber))))()(new Data_Symbol.IsSymbol(function () {
                              return "createdAt";
                          }))(Data_Eq.eqNumber))()(new Data_Symbol.IsSymbol(function () {
                              return "contentId";
                          }))(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqContentId)))))(state.draft.value0.material)(Data_Maybe.Nothing.value);
                          if ($32) {
                              return Incentknow_Atoms_Inputs.submitButton({
                                  isDisabled: state.loading,
                                  isLoading: state.loading,
                                  text: "\u4f5c\u6210",
                                  loadingText: "\u4f5c\u6210\u4e2d",
                                  onClick: Commit.value
                              });
                          };
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      if (state.target instanceof Incentknow_Route.MaterialTargetDraft) {
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      if (state.target instanceof Incentknow_Route.MaterialTargetMaterial) {
                          return Incentknow_Atoms_Inputs.submitButton({
                              isDisabled: state.loading,
                              isLoading: state.loading,
                              text: "\u5909\u66f4",
                              loadingText: "\u5909\u66f4\u4e2d",
                              onClick: Commit.value
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 112, column 9 - line 146, column 16): " + [ state.target.constructor.name, state.draft.constructor.name ]);
                  })() ]) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          target: input,
          saveState: Incentknow_Atoms_Message.HasNotChange.value,
          loading: false,
          timerSubId: Data_Maybe.Nothing.value,
          data: new Incentknow_Data_Entities.DocumentMaterialData({
              blocks: [  ]
          }),
          draft: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              var makeSaveStateSaved = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.Saving.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                      var $37 = {};
                      for (var $38 in v) {
                          if ({}.hasOwnProperty.call(v, $38)) {
                              $37[$38] = v[$38];
                          };
                      };
                      $37.saveState = Incentknow_Atoms_Message.Saved.value;
                      return $37;
                  }));
              });
              return function (v) {
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Route.eqEditMaterialTarget)(state.target)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                              return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Load.value);
                          }));
                      });
                  };
                  if (v instanceof Finalize) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(CheckChange.value))(function () {
                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("EditMaterial.Finalize"));
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Load.value))(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(state.timerSubId))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (timerSubId) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $42 = {};
                                      for (var $43 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $43)) {
                                              $42[$43] = v1[$43];
                                          };
                                      };
                                      $42.timerSubId = new Data_Maybe.Just(timerSubId);
                                      return $42;
                                  });
                              }));
                          });
                      });
                  };
                  if (v instanceof Load) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.MaterialTargetBlank) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_Organisms_Material_Utils.createNewMaterialData(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_Data_Entities.MaterialTypeDocument.value))(function (newData) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $46 = {};
                                      for (var $47 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $47)) {
                                              $46[$47] = v1[$47];
                                          };
                                      };
                                      $46.target = new Incentknow_Route.MaterialTargetBlank(state.target.value0);
                                      $46.data = newData;
                                      return $46;
                                  });
                              });
                          };
                          if (state.target instanceof Incentknow_Route.MaterialTargetDraft) {
                              return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedDraft.create)(Incentknow_API.getMaterialDraft(state.target.value0));
                          };
                          if (state.target instanceof Incentknow_Route.MaterialTargetMaterial) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.startMaterialEditing(state.target.value0)(Data_Maybe.Nothing.value)))(function (maybeDraft) {
                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeDraft)(function (draft) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.MaterialTarget.create(new Incentknow_Route.MaterialTargetDraft(draft.draftId)))))(function () {
                                          return Halogen_Query_HalogenM.raise(new CreatedDraft(draft.draftId));
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 187, column 5 - line 200, column 47): " + [ state.target.constructor.name ]);
                      });
                  };
                  if (v instanceof FetchedDraft) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (draft) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $52 = {};
                              for (var $53 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $53)) {
                                      $52[$53] = v1[$53];
                                  };
                              };
                              $52.data = Data_Maybe.fromMaybe(new Incentknow_Data_Entities.DocumentMaterialData({
                                  blocks: [ {
                                      id: Data_Newtype.wrap(Incentknow_Data_Ids.newtypeDocumentBlockId)("frew"),
                                      data: new Incentknow_Data_Entities.ParagraphBlockData("\u3046\u3093\u3053")
                                  } ]
                              }))(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                                  return v2.data;
                              })(Incentknow_API_Execution.toMaybe(draft)));
                              $52.draft = draft;
                              return $52;
                          });
                      });
                  };
                  if (v instanceof ChangeSpace) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.MaterialTargetBlank) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $57 = {};
                                  for (var $58 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $58)) {
                                          $57[$58] = v1[$58];
                                      };
                                  };
                                  $57.target = new Incentknow_Route.MaterialTargetBlank(v.value0);
                                  return $57;
                              }))(function () {
                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqSpaceId))(v.value0)(state.target.value0))(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.MaterialTarget.create(new Incentknow_Route.MaterialTargetBlank(v.value0)))));
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof ChangeData) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (state.saveState instanceof Incentknow_Atoms_Message.Saving) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $63 = {};
                                      for (var $64 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $64)) {
                                              $63[$64] = v1[$64];
                                          };
                                      };
                                      $63.data = v.value0;
                                      $63.saveState = Incentknow_Atoms_Message.SavingButChanged.value;
                                      return $63;
                                  });
                              };
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $66 = {};
                                  for (var $67 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $67)) {
                                          $66[$67] = v1[$67];
                                      };
                                  };
                                  $66.data = v.value0;
                                  $66.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                  return $66;
                              });
                          })())(function () {
                              if (state.target instanceof Incentknow_Route.MaterialTargetDraft) {
                                  return Halogen_Query_HalogenM.raise(new UpdatedDraft(state.target.value0, v.value0));
                              };
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      });
                  };
                  if (v instanceof CheckChange) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(Incentknow_Atoms_Message.eqSaveState)(state.saveState)(Incentknow_Atoms_Message.NotSaved.value) && !state.loading)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $72 = {};
                              for (var $73 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $73)) {
                                      $72[$73] = v1[$73];
                                  };
                              };
                              $72.saveState = Incentknow_Atoms_Message.Saving.value;
                              return $72;
                          }))(function () {
                              if (state.target instanceof Incentknow_Route.MaterialTargetBlank) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createNewMaterialDraft(state.target.value0)(state.data)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.pushState(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.EditDraft.create(Incentknow_Route.MaterialTarget.create(new Incentknow_Route.MaterialTargetDraft(result.value0.draftId)))))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $77 = {};
                                                  for (var $78 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $78)) {
                                                          $77[$78] = v1[$78];
                                                      };
                                                  };
                                                  $77.target = new Incentknow_Route.MaterialTargetDraft(result.value0.draftId);
                                                  return $77;
                                              }))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(makeSaveStateSaved)(function () {
                                                      return Halogen_Query_HalogenM.raise(new CreatedDraft(result.value0.draftId));
                                                  });
                                              });
                                          });
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $81 = {};
                                              for (var $82 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $82)) {
                                                      $81[$82] = v1[$82];
                                                  };
                                              };
                                              $81.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                              return $81;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 234, column 11 - line 240, column 60): " + [ result.constructor.name ]);
                                  });
                              };
                              if (state.target instanceof Incentknow_Route.MaterialTargetDraft) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.editMaterialDraft(state.target.value0)(state.data)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return makeSaveStateSaved;
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $87 = {};
                                              for (var $88 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $88)) {
                                                      $87[$88] = v1[$88];
                                                  };
                                              };
                                              $87.saveState = Incentknow_Atoms_Message.NotSaved.value;
                                              return $87;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 243, column 11 - line 245, column 60): " + [ result.constructor.name ]);
                                  });
                              };
                              if (state.target instanceof Incentknow_Route.MaterialTargetMaterial) {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                              };
                              throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 231, column 7 - line 246, column 46): " + [ state.target.constructor.name ]);
                          }));
                      });
                  };
                  if (v instanceof Commit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          if (state.target instanceof Incentknow_Route.MaterialTargetDraft) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $93 = {};
                                  for (var $94 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $94)) {
                                          $93[$94] = v1[$94];
                                      };
                                  };
                                  $93.loading = true;
                                  return $93;
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.commitMaterial(state.target.value0)(state.data)))(function (result) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $96 = {};
                                          for (var $97 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $97)) {
                                                  $96[$97] = v1[$97];
                                              };
                                          };
                                          $96.loading = false;
                                          return $96;
                                      });
                                  });
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.EditMaterial (line 167, column 16 - line 256, column 21): " + [ v.constructor.name ]);
              };
          };
      };
  };                                     
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($101) {
                          return Data_Maybe.Just.create(HandleInput.create($101));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: new Data_Maybe.Just(Finalize.value)
                  })
              });
          };
      };
  };
  exports["CreatedDraft"] = CreatedDraft;
  exports["UpdatedDraft"] = UpdatedDraft;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.EditDraft"] = $PS["Incentknow.Pages.EditDraft"] || {};
  var exports = $PS["Incentknow.Pages.EditDraft"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Organisms_DraftExplorer = $PS["Incentknow.Organisms.DraftExplorer"];
  var Incentknow_Organisms_EditContent = $PS["Incentknow.Organisms.EditContent"];
  var Incentknow_Organisms_EditMaterial = $PS["Incentknow.Organisms.EditMaterial"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var ContentEvent = (function () {
      function ContentEvent(value0) {
          this.value0 = value0;
      };
      ContentEvent.create = function (value0) {
          return new ContentEvent(value0);
      };
      return ContentEvent;
  })();
  var MaterialEvent = (function () {
      function MaterialEvent(value0) {
          this.value0 = value0;
      };
      MaterialEvent.create = function (value0) {
          return new MaterialEvent(value0);
      };
      return MaterialEvent;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  var isContent = (function () {
                      if (state.target instanceof Incentknow_Route.ContentTarget) {
                          return true;
                      };
                      if (state.target instanceof Incentknow_Route.MaterialTarget) {
                          return false;
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.EditDraft (line 96, column 5 - line 98, column 32): " + [ state.target.constructor.name ]);
                  })();
                  return Incentknow_Templates_Main.centerLayout({
                      css: "page-edit-draft",
                      leftSide: [ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "draftExplorer";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_DraftExplorer.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          selectedDraftId: (function () {
                              if (state.target instanceof Incentknow_Route.ContentTarget && state.target.value0 instanceof Incentknow_Route.TargetDraft) {
                                  return new Data_Maybe.Just(new Data_Either.Left(state.target.value0.value0));
                              };
                              if (state.target instanceof Incentknow_Route.MaterialTarget && state.target.value0 instanceof Incentknow_Route.MaterialTargetDraft) {
                                  return new Data_Maybe.Just(new Data_Either.Right(state.target.value0.value0));
                              };
                              return Data_Maybe.Nothing.value;
                          })()
                      })(Data_Void.absurd) ],
                      rightSide: [  ]
                  })([ Incentknow_Templates_Page.section("page-edit-draft-selector" + (function () {
                      if (isContent) {
                          return " selector-content";
                      };
                      return " selector-material";
                  })())([ Incentknow_Atoms_Inputs.button("New")(Navigate.create(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value))))) ]), (function () {
                      if (state.target instanceof Incentknow_Route.ContentTarget) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "editContent";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_EditContent.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))(state.target.value0)(function ($40) {
                              return Data_Maybe.Just.create(ContentEvent.create($40));
                          });
                      };
                      if (state.target instanceof Incentknow_Route.MaterialTarget) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "editMaterial";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_EditMaterial.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))(state.target.value0)(function ($41) {
                              return Data_Maybe.Just.create(MaterialEvent.create($41));
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.EditDraft (line 88, column 9 - line 92, column 114): " + [ state.target.constructor.name ]);
                  })() ]);
              };
          };
      };
  };
  var initialState = function (target) {
      return {
          target: target
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $25 = {};
                          for (var $26 in v1) {
                              if ({}.hasOwnProperty.call(v1, $26)) {
                                  $25[$26] = v1[$26];
                              };
                          };
                          $25.target = v.value0;
                          return $25;
                      });
                  };
                  if (v instanceof ContentEvent && v.value0 instanceof Incentknow_Organisms_EditContent.UpdatedDraft) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "draftExplorer";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Organisms_DraftExplorer.UpdateContentDraft.create(v.value0.value0)(v.value0.value1))))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof MaterialEvent && v.value0 instanceof Incentknow_Organisms_EditMaterial.UpdatedDraft) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "draftExplorer";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Organisms_DraftExplorer.UpdateMaterialDraft.create(v.value0.value0)(v.value0.value1))))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof ContentEvent && v.value0 instanceof Incentknow_Organisms_EditContent.CreatedDraft) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "draftExplorer";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Organisms_DraftExplorer.SelectItem.create(new Data_Either.Left(v.value0.value0)))))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof MaterialEvent && v.value0 instanceof Incentknow_Organisms_EditMaterial.CreatedDraft) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "draftExplorer";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Organisms_DraftExplorer.SelectItem.create(new Data_Either.Right(v.value0.value0)))))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.EditDraft (line 101, column 16 - line 117, column 35): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($42) {
                          return Data_Maybe.Just.create(HandleInput.create($42));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.SpaceCardView"] = $PS["Incentknow.Organisms.SpaceCardView"] || {};
  var exports = $PS["Incentknow.Organisms.SpaceCardView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var render = function (dictBehaviour) {
      return function (state) {
          var renderItem = function (space) {
              return Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Space(space.displayId, Incentknow_Route.SpaceHome.value))([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("upper") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getHeaderImageUrl(space.headerImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("lower") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text(space.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML_Core.text(space.description) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("scope") ])([ Incentknow_Atoms_Icon.spaceScopeIcon(space) ]) ]) ]) ]);
          };
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-space-cardview") ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(state.spaces));
      };
  };
  var initialState = function (input) {
      return {
          spaces: input.value
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (dictBehaviour) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.SpaceCardView (line 75, column 16 - line 78, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadEffect) {
      return function (dictBehaviour) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour.MonadEffect0())(dictBehaviour),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($11) {
                      return Data_Maybe.Just.create(HandleInput.create($11));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.SearchMenu"] = $PS["Incentknow.Organisms.SearchMenu"] || {};
  var exports = $PS["Incentknow.Organisms.SearchMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeText = (function () {
      function ChangeText(value0) {
          this.value0 = value0;
      };
      ChangeText.create = function (value0) {
          return new ChangeText(value0);
      };
      return ChangeText;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-search-menu") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("search-box") ])([ Incentknow_Atoms_Icon.iconSolid("search"), Halogen_HTML_Elements.textarea([ Halogen_HTML_Properties.spellcheck(false), Halogen_HTML_Properties.value(state.text), Halogen_HTML_Events.onValueInput(function ($16) {
                  return Data_Maybe.Just.create(ChangeText.create($16));
              }), Halogen_HTML_Events.onKeyDown(Incentknow_Atoms_Inputs.cancelReturn) ]) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          text: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof ChangeText) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $12 = {};
                      for (var $13 in v1) {
                          if ({}.hasOwnProperty.call(v1, $13)) {
                              $12[$13] = v1[$13];
                          };
                      };
                      $12.text = v.value0;
                      return $12;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(v.value0);
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.SearchMenu (line 69, column 16 - line 74, column 17): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($17) {
                          return Data_Maybe.Just.create(HandleInput.create($17));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.SearchView"] = $PS["Incentknow.Organisms.SearchView"] || {};
  var exports = $PS["Incentknow.Organisms.SearchView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_RawHTML = $PS["Incentknow.HTML.RawHTML"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var SearchAllQuery = (function () {
      function SearchAllQuery(value0) {
          this.value0 = value0;
      };
      SearchAllQuery.create = function (value0) {
          return new SearchAllQuery(value0);
      };
      return SearchAllQuery;
  })();
  var SearchByContainerQuery = (function () {
      function SearchByContainerQuery(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SearchByContainerQuery.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SearchByContainerQuery(value0, value1, value2);
              };
          };
      };
      return SearchByContainerQuery;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var FetchedContent = (function () {
      function FetchedContent(value0) {
          this.value0 = value0;
      };
      FetchedContent.create = function (value0) {
          return new FetchedContent(value0);
      };
      return FetchedContent;
  })();
  var Load = (function () {
      function Load() {

      };
      Load.value = new Load();
      return Load;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Monad_Rec_Class.forever(Effect_Aff.monadRecAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(300.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(Load.value);
          }))))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderItem = function (item) {
                  var showProperty = function (prop) {
                      var str = (function () {
                          var v = Incentknow_Data_Property.toTypedValue(prop.value)(prop.info.type);
                          if (v instanceof Incentknow_Data_Property.IntTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Data_Show.show(Data_Show.showInt)(v.value0.value0));
                          };
                          if (v instanceof Incentknow_Data_Property.BoolTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return Data_Maybe.Just.create(Data_Show.show(Data_Show.showBoolean)(v.value0.value0));
                          };
                          if (v instanceof Incentknow_Data_Property.StringTypedValue && v.value0 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(v.value0.value0);
                          };
                          if (v instanceof Incentknow_Data_Property.TextTypedValue && v.value0 instanceof Incentknow_Data_Property.JustReference) {
                              var v1 = Incentknow_Data_Property.fromJsonToMaterialObject(v.value0.value0);
                              if (v1 instanceof Incentknow_Data_Property.MaterialObjectRelated) {
                                  return new Data_Maybe.Just(v1.value0.displayName);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          if (v instanceof Incentknow_Data_Property.EnumTypedValue && v.value1 instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                  return v1.displayName;
                              })(Data_Array.head(Data_Array.filter(function (en) {
                                  return en.id === v.value1.value0;
                              })(v.value0)));
                          };
                          if (v instanceof Incentknow_Data_Property.ContentTypedValue && v.value1 instanceof Incentknow_Data_Property.JustReference) {
                              var sm = Incentknow_Data_Content.getContentSemanticData(v.value1.value0.data)(v.value1.value0.format);
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                                  return v1.text;
                              })(sm.titleProperty);
                          };
                          if (v instanceof Incentknow_Data_Property.DocumentTypedValue && v.value0 instanceof Incentknow_Data_Property.JustReference) {
                              var v1 = Incentknow_Data_Property.fromJsonToMaterialObject(v.value0.value0);
                              if (v1 instanceof Incentknow_Data_Property.MaterialObjectRelated) {
                                  return new Data_Maybe.Just(v1.value0.displayName);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          return Data_Maybe.Nothing.value;
                      })();
                      return Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
                          var $50 = Data_String_CodePoints.length(x) > 15;
                          if ($50) {
                              return (Data_String_CodeUnits.splitAt(15)(x)).before + "...";
                          };
                          return x;
                      })(str);
                  };
                  var semantic = Incentknow_Data_Content.getContentSemanticData(item.content.data)(item.content.format);
                  var renderProperty = function (v) {
                      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("property") ])([ Incentknow_Atoms_Icon.propertyIcon(v.prop.info), Halogen_HTML_Core.text(v.str) ]);
                  };
                  var properties = Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(function (prop) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(function (str) {
                          return {
                              str: str,
                              prop: prop
                          };
                      })(showProperty(prop));
                  })(Data_Array.filter(function (x) {
                      return Data_Maybe.fromMaybe(true)(Data_Functor.map(Data_Maybe.functorMaybe)(function (title) {
                          return Data_Eq.notEq(Incentknow_Data_Ids.eqPropertyId)(title.info.id)(x.info.id);
                      })(semantic.titleProperty));
                  })(Incentknow_Data_Property.mkProperties(item.content.data)(item.content.format.currentStructure.properties))));
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("user") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.User(item.content.creatorUser.displayId, Incentknow_Route.UserMain.value))([  ])([ Incentknow_Atoms_Icon.userPlate(item.content.creatorUser) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Content(item.content.contentId))([  ])([ Halogen_HTML_Core.text(semantic.title) ]) ]), (function () {
                      if (state.query instanceof SearchAllQuery) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("format") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Container(item.content.format.space.displayId, item.content.format.displayId))([  ])([ Incentknow_Atoms_Icon.formatWithIcon(item.content.format) ]) ]);
                      };
                      return Halogen_HTML_Core.text("");
                  })() ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("properties") ])(Data_Functor.map(Data_Functor.functorArray)(renderProperty)(properties)), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("timestamp") ])([ Incentknow_HTML_DateTime.dateTime(item.content.createdAt) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("highlight") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "rawHtml";
                  }))(Incentknow_Data_Ids.ordContentId)(Data_Symbol.SProxy.value)(item.content.contentId)(Incentknow_HTML_RawHTML.component(dictBehaviour.MonadEffect0()))({
                      html: Data_String_Common.joinWith("...")(item.highlights)
                  })(Data_Void.absurd) ]) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-search-view") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.items)(function (items) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("result") ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(items));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          query: input.value,
          items: Incentknow_API_Execution.Loading.value,
          timerSubId: Data_Maybe.Nothing.value
      };
  };
  var eqSearchQuery = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof SearchAllQuery && y instanceof SearchAllQuery) {
              return x.value0 === y.value0;
          };
          if (x instanceof SearchByContainerQuery && y instanceof SearchByContainerQuery) {
              return Data_Eq.eq(Incentknow_Data_Ids.eqSpaceDisplayId)(x.value0)(y.value0) && Data_Eq.eq(Incentknow_Data_Ids.eqFormatDisplayId)(x.value1)(y.value1) && x.value2 === y.value2;
          };
          return false;
      };
  });
  var handleAction = function ($copy_dictBehaviour) {
      return function ($copy_dictMonadAff) {
          return function ($copy_v) {
              var $tco_var_dictBehaviour = $copy_dictBehaviour;
              var $tco_var_dictMonadAff = $copy_dictMonadAff;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictBehaviour, dictMonadAff, v) {
                  if (v instanceof Initialize) {
                      $tco_var_dictBehaviour = dictBehaviour;
                      $tco_var_dictMonadAff = dictMonadAff;
                      $copy_v = Load.value;
                      return;
                  };
                  if (v instanceof HandleInput) {
                      $tco_done = true;
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqSearchQuery)(v.value0.value)(state.query))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $67 = {};
                              for (var $68 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $68)) {
                                      $67[$68] = v1[$68];
                                  };
                              };
                              $67.query = v.value0.value;
                              $67.items = Incentknow_API_Execution.Loading.value;
                              return $67;
                          }))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.timerSubId)(function (subId) {
                                  return Halogen_Query_HalogenM.unsubscribe(subId);
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (timerSubId) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $70 = {};
                                          for (var $71 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $71)) {
                                                  $70[$71] = v1[$71];
                                              };
                                          };
                                          $70.timerSubId = new Data_Maybe.Just(timerSubId);
                                          return $70;
                                      });
                                  });
                              });
                          }));
                      });
                  };
                  if (v instanceof Navigate) {
                      $tco_done = true;
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  if (v instanceof FetchedContent) {
                      $tco_done = true;
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (items) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $76 = {};
                              for (var $77 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $77)) {
                                      $76[$77] = v1[$77];
                                  };
                              };
                              $76.items = items;
                              return $76;
                          });
                      });
                  };
                  if (v instanceof Load) {
                      $tco_done = true;
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.timerSubId)(function (subId) {
                              return Halogen_Query_HalogenM.unsubscribe(subId);
                          }))(function () {
                              if (state.query instanceof SearchAllQuery) {
                                  return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedContent.create)(Incentknow_API.getSearchedAllContents(state.query.value0));
                              };
                              if (state.query instanceof SearchByContainerQuery) {
                                  return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedContent.create)(Incentknow_API.getSearchedContentsInContainer(state.query.value0)(state.query.value1)(state.query.value2));
                              };
                              throw new Error("Failed pattern match at Incentknow.Organisms.SearchView (line 191, column 5 - line 195, column 92): " + [ state.query.constructor.name ]);
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.SearchView (line 172, column 16 - line 195, column 92): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictBehaviour, $tco_var_dictMonadAff, $copy_v);
              };
              return $tco_result;
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($85) {
                          return Data_Maybe.Just.create(HandleInput.create($85));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["SearchAllQuery"] = SearchAllQuery;
  exports["SearchByContainerQuery"] = SearchByContainerQuery;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Container"] = $PS["Incentknow.Pages.Container"] || {};
  var exports = $PS["Incentknow.Pages.Container"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_ContentList = $PS["Incentknow.Organisms.ContentList"];
  var Incentknow_Organisms_SearchMenu = $PS["Incentknow.Organisms.SearchMenu"];
  var Incentknow_Organisms_SearchView = $PS["Incentknow.Organisms.SearchView"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var FetchedContents = (function () {
      function FetchedContents(value0) {
          this.value0 = value0;
      };
      FetchedContents.create = function (value0) {
          return new FetchedContents(value0);
      };
      return FetchedContents;
  })();
  var ChangeSearchQuery = (function () {
      function ChangeSearchQuery(value0) {
          this.value0 = value0;
      };
      ChangeSearchQuery.create = function (value0) {
          return new ChangeSearchQuery(value0);
      };
      return ChangeSearchQuery;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-container") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "searchMenu";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SearchMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      value: state.query
                  })(function ($24) {
                      return Data_Maybe.Just.create(ChangeSearchQuery.create($24));
                  }), (function () {
                      var $13 = Data_String_CodePoints.length(state.query) === 0;
                      if ($13) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "contentList";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_ContentList.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              value: state.contents,
                              query: Data_Maybe.Just.create(new Incentknow_Organisms_ContentList.QueryByContainer(state.spaceId, state.formatId))
                          })(Data_Void.absurd);
                      };
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "searchView";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SearchView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: new Incentknow_Organisms_SearchView.SearchByContainerQuery(state.spaceId, state.formatId, state.query)
                      })(Data_Void.absurd);
                  })() ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          formatId: input.formatId,
          contents: Incentknow_API_Execution.Loading.value,
          query: ""
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedContents.create)(Incentknow_API.getContentsByDisplayId(state.spaceId)(state.formatId));
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceDisplayId)(state.spaceId)(v.value0.spaceId) || Data_Eq.notEq(Incentknow_Data_Ids.eqFormatDisplayId)(state.formatId)(v.value0.formatId))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                              return handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0())(Initialize.value);
                          }));
                      });
                  };
                  if (v instanceof FetchedContents) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (contents) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $16 = {};
                              for (var $17 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $17)) {
                                      $16[$17] = v1[$17];
                                  };
                              };
                              $16.contents = contents;
                              return $16;
                          });
                      });
                  };
                  if (v instanceof ChangeSearchQuery) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $20 = {};
                          for (var $21 in v1) {
                              if ({}.hasOwnProperty.call(v1, $21)) {
                                  $20[$21] = v1[$21];
                              };
                          };
                          $20.query = v.value0;
                          return $20;
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Container (line 76, column 16 - line 88, column 59): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($25) {
                          return Data_Maybe.Just.create(HandleInput.create($25));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.Utils"] = $PS["Incentknow.Pages.Space.Utils"] || {};
  var exports = $PS["Incentknow.Pages.Space.Utils"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var renderMode = function (isLeft) {
      return function (spaceId) {
          return function (navigate) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mode") ])([ Incentknow_HTML_Utils.link(navigate)(new Incentknow_Route.Space(spaceId, Incentknow_Route.SpaceHome.value))([ Incentknow_HTML_Utils.css("left item" + (function () {
                  if (isLeft) {
                      return " selected";
                  };
                  return "";
              })()) ])([ Incentknow_Atoms_Icon.icon("fas fa-info-circle") ]), Incentknow_HTML_Utils.link(navigate)(new Incentknow_Route.ContainerList(spaceId))([ Incentknow_HTML_Utils.css("right item" + (function () {
                  if (isLeft) {
                      return "";
                  };
                  return " selected";
              })()) ])([ Incentknow_Atoms_Icon.icon("fas fa-bars") ]) ]);
          };
      };
  };
  exports["renderMode"] = renderMode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.SpaceContainers"] = $PS["Incentknow.Pages.Space.SpaceContainers"] || {};
  var exports = $PS["Incentknow.Pages.Space.SpaceContainers"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Pages_Container = $PS["Incentknow.Pages.Container"];
  var Incentknow_Pages_Space_Utils = $PS["Incentknow.Pages.Space.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangeTab = (function () {
      function ChangeTab(value0) {
          this.value0 = value0;
      };
      ChangeTab.create = function (value0) {
          return new ChangeTab(value0);
      };
      return ChangeTab;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var FetchedFormats = (function () {
      function FetchedFormats(value0) {
          this.value0 = value0;
      };
      FetchedFormats.create = function (value0) {
          return new FetchedFormats(value0);
      };
      return FetchedFormats;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  var formats = Data_Maybe.fromMaybe([  ])(Incentknow_API_Execution.toMaybe(state.formats));
                  var maybeFormatId = (function () {
                      var $16 = Data_Maybe.isNothing(state.formatId);
                      if ($16) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                              return v.displayId;
                          })(Data_Array.head(formats));
                      };
                      return state.formatId;
                  })();
                  var formatMap = Data_Map_Internal.fromFoldable(Incentknow_Data_Ids.ordFormatDisplayId)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return new Data_Tuple.Tuple(x.displayId, x);
                  })(formats));
                  var maybeFormat = Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (id) {
                      return Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatDisplayId)(id)(formatMap);
                  })(maybeFormatId));
                  return Incentknow_Templates_Page.tabPage(Incentknow_Data_Ids.eqFormatDisplayId)({
                      tabs: Data_Functor.map(Data_Functor.functorArray)(function (v) {
                          return v.displayId;
                      })(formats),
                      currentTab: Data_Maybe.fromMaybe(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(""))(maybeFormatId),
                      onChangeTab: ChangeTab.create,
                      isTabAlphabet: false,
                      showTab: function (id) {
                          return [ Data_Maybe.fromMaybe(Halogen_HTML_Core.text(""))(Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Atoms_Icon.formatWithIcon)(Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatDisplayId)(id)(formatMap))) ];
                      }
                  })([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-space-header page-space-header-containers"), Halogen_HTML_Events.onDoubleClick(function (v) {
                      return Data_Maybe.Just.create(Navigate.create(new Incentknow_Route.Space(state.space.displayId, Incentknow_Route.SpaceHome.value)));
                  }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("backward") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getFullsizeHeaderImageUrl(state.space.headerImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("forward") ])([ Incentknow_Pages_Space_Utils.renderMode(false)(state.space.displayId)(NavigateRoute.create), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(state.space.displayName) ]) ]) ]) ])([ Incentknow_HTML_Utils.maybeElem(maybeFormatId)(function (formatId) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "container";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Container.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          spaceId: state.space.displayId,
                          formatId: formatId
                      })(Data_Void.absurd);
                  }) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          space: input.space,
          formatId: input.formatId,
          formats: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormats.create)(Incentknow_API.getFormats(state.space.spaceId));
                      });
                  };
                  if (v instanceof FetchedFormats) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (formats) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $18 = {};
                              for (var $19 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $19)) {
                                      $18[$19] = v1[$19];
                                  };
                              };
                              $18.formats = formats;
                              return $18;
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $22 = Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceId)(state.space.spaceId)(v.value0.space.spaceId);
                          if ($22) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $23 = {};
                              for (var $24 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $24)) {
                                      $23[$24] = v1[$24];
                                  };
                              };
                              $23.formatId = v.value0.formatId;
                              return $23;
                          });
                      });
                  };
                  if (v instanceof ChangeTab) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.Container(state.space.displayId, v.value0));
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof NavigateRoute) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.SpaceContainers (line 115, column 16 - line 133, column 57): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($31) {
                          return Data_Maybe.Just.create(HandleInput.create($31));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.FormatList"] = $PS["Incentknow.Organisms.FormatList"] || {};
  var exports = $PS["Incentknow.Organisms.FormatList"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var Navigate2 = (function () {
      function Navigate2(value0) {
          this.value0 = value0;
      };
      Navigate2.create = function (value0) {
          return new Navigate2(value0);
      };
      return Navigate2;
  })();
  var FetchedContainers = (function () {
      function FetchedContainers(value0) {
          this.value0 = value0;
      };
      FetchedContainers.create = function (value0) {
          return new FetchedContainers(value0);
      };
      return FetchedContainers;
  })();
  var FetchedFormats = (function () {
      function FetchedFormats(value0) {
          this.value0 = value0;
      };
      FetchedFormats.create = function (value0) {
          return new FetchedFormats(value0);
      };
      return FetchedFormats;
  })();
  var zipContainerAndFormat = function (containers) {
      return function (formats) {
          var formatMap = Data_Map_Internal.fromFoldable(Incentknow_Data_Ids.ordFormatId)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return new Data_Tuple.Tuple(x.formatId, x);
          })(formats));
          var formatIds = Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Incentknow_Data_Ids.ordFormatId)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return v.format.formatId;
          })(containers))(Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return v.formatId;
          })(formats))));
          var containerMap = Data_Map_Internal.fromFoldable(Incentknow_Data_Ids.ordFormatId)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return new Data_Tuple.Tuple(x.format.formatId, x);
          })(containers));
          return Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return new Data_Tuple.Tuple(Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatId)(x)(containerMap), Data_Map_Internal.lookup(Incentknow_Data_Ids.ordFormatId)(x)(formatMap));
          })(formatIds);
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderItem = function (v) {
                  var maybeFormat = (function () {
                      var $18 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                          return "usage";
                      }))(Incentknow_Data_Entities.eqFormatUsage))()(new Data_Symbol.IsSymbol(function () {
                          return "space";
                      }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                          return "spaceId";
                      }))(Incentknow_Data_Ids.eqSpaceId))()(new Data_Symbol.IsSymbol(function () {
                          return "published";
                      }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                          return "membershipMethod";
                      }))(Incentknow_Data_Entities.eqMembershipMethod))()(new Data_Symbol.IsSymbol(function () {
                          return "headerImage";
                      }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                          return "displayName";
                      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                          return "displayId";
                      }))(Incentknow_Data_Ids.eqSpaceDisplayId))()(new Data_Symbol.IsSymbol(function () {
                          return "description";
                      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                          return "defaultAuthority";
                      }))(Incentknow_Data_Entities.eqSpaceAuthority))()(new Data_Symbol.IsSymbol(function () {
                          return "createdAt";
                      }))(Data_Eq.eqNumber))))()(new Data_Symbol.IsSymbol(function () {
                          return "semanticId";
                      }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                          return "icon";
                      }))(Data_Maybe.eqMaybe(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                          return "formatId";
                      }))(Incentknow_Data_Ids.eqFormatId))()(new Data_Symbol.IsSymbol(function () {
                          return "displayName";
                      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                          return "displayId";
                      }))(Incentknow_Data_Ids.eqFormatDisplayId))()(new Data_Symbol.IsSymbol(function () {
                          return "description";
                      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                          return "currentStructureId";
                      }))(Incentknow_Data_Ids.eqStructureId))))(v.value1)(Data_Maybe.Nothing.value);
                      if ($18) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                              return v1.format;
                          })(v.value0);
                      };
                      return v.value1;
                  })();
                  return Halogen_HTML_Elements.tr([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.th([  ])([ (function () {
                      if (v.value0 instanceof Data_Maybe.Just) {
                          return Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.Container(v.value0.value0.space.displayId, v.value0.value0.format.displayId))([ Incentknow_HTML_Utils.css("name") ])([ Incentknow_Atoms_Icon.formatWithIcon(v.value0.value0.format) ]);
                      };
                      if (maybeFormat instanceof Data_Maybe.Just) {
                          return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("name") ])([ Incentknow_Atoms_Icon.formatWithIcon(maybeFormat.value0) ]);
                      };
                      return Halogen_HTML_Core.text("");
                  })() ]), Halogen_HTML_Elements.th([  ])([ Incentknow_HTML_Utils.maybeElem(v.value0)(function (container) {
                      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(container.contentCount) + "\u4ef6\u306e\u30b3\u30f3\u30c6\u30f3\u30c4") ]);
                  }) ]), Halogen_HTML_Elements.th([  ])([ Incentknow_HTML_Utils.maybeElem(v.value0)(function (container) {
                      return Incentknow_HTML_Utils.maybeElem(container.latestUpdatedAt)(function (timestamp) {
                          return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("timestamp") ])([ Incentknow_HTML_DateTime.dateTime(timestamp) ]);
                      });
                  }) ]), Halogen_HTML_Elements.th([ Incentknow_HTML_Utils.css("icons") ])([ Incentknow_HTML_Utils.maybeElem(v.value1)(function (format) {
                      return Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.Space.create(state.spaceDisplayId)(new Incentknow_Route.SpaceFormat(format.displayId, Incentknow_Route.FormatMain.value)))([ Incentknow_HTML_Utils.css("setting" + (function () {
                          var $23 = Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqFormatDisplayId))(new Data_Maybe.Just(format.displayId))(state.selectedFormatid);
                          if ($23) {
                              return " selected-setting";
                          };
                          return "";
                      })()) ])([ Incentknow_Atoms_Icon.icon("fas fa-cog") ]);
                  }), Incentknow_HTML_Utils.maybeElem(maybeFormat)(function (format) {
                      return Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.EditDraft.create(Incentknow_Route.ContentTarget.create(new Incentknow_Route.TargetBlank(new Data_Maybe.Just(state.spaceId), new Data_Maybe.Just(format.currentStructureId)))))([ Incentknow_HTML_Utils.css("creation") ])([ Incentknow_Atoms_Icon.icon("far fa-plus-circle") ]);
                  }) ]) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-format-list") ])([ Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.thead([  ])([ Halogen_HTML_Elements.td([  ])([ Halogen_HTML_Core.text("Name") ]), Halogen_HTML_Elements.td([  ])([ Halogen_HTML_Core.text("Information") ]), Halogen_HTML_Elements.td([  ])([ Halogen_HTML_Core.text("Last Updated") ]), Halogen_HTML_Elements.td([ Incentknow_HTML_Utils.css("last") ])([ Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.NewFormat(state.spaceId))([ Incentknow_HTML_Utils.css("creation") ])([ Halogen_HTML_Core.text("\u65b0\u3057\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 "), Incentknow_Atoms_Icon.icon("fas fa-plus-circle") ]) ]) ]), Incentknow_Atoms_Icon.remoteArrayWith(Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v) {
                  return zipContainerAndFormat(v.value0)(v.value1);
              })(Incentknow_API_Execution.zip(state.containers)(state.formats)))(function (items) {
                  return Halogen_HTML_Elements.tbody([  ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(items));
              }) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          spaceDisplayId: input.spaceDisplayId,
          containers: Incentknow_API_Execution.Loading.value,
          formats: Incentknow_API_Execution.Loading.value,
          selectedFormatid: input.selectedFormatid
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedContainers.create)(Incentknow_API.getContainers(state.spaceId)))(function () {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormats.create)(Incentknow_API.getFormats(state.spaceId));
                      });
                  });
              };
              if (v instanceof HandleInput) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $30 = {};
                          for (var $31 in v1) {
                              if ({}.hasOwnProperty.call(v1, $31)) {
                                  $30[$31] = v1[$31];
                              };
                          };
                          $30.selectedFormatid = v.value0.selectedFormatid;
                          return $30;
                      }))(function () {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceId)(state.spaceId)(v.value0.spaceId))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                              return handleAction(dictBehaviour)(dictMonadAff)(Initialize.value);
                          }));
                      });
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              if (v instanceof Navigate2) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof FetchedContainers) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (containers) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $37 = {};
                          for (var $38 in v1) {
                              if ({}.hasOwnProperty.call(v1, $38)) {
                                  $37[$38] = v1[$38];
                              };
                          };
                          $37.containers = containers;
                          return $37;
                      });
                  });
              };
              if (v instanceof FetchedFormats) {
                  return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (formats) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $41 = {};
                          for (var $42 in v1) {
                              if ({}.hasOwnProperty.call(v1, $42)) {
                                  $41[$42] = v1[$42];
                              };
                          };
                          $41.formats = formats;
                          return $41;
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.FormatList (line 135, column 16 - line 153, column 40): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($45) {
                          return Data_Maybe.Just.create(HandleInput.create($45));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.DangerChange"] = $PS["Incentknow.Molecules.DangerChange"] || {};
  var exports = $PS["Incentknow.Molecules.DangerChange"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var ClickButton = (function () {
      function ClickButton() {

      };
      ClickButton.value = new ClickButton();
      return ClickButton;
  })();
  var Cancel = (function () {
      function Cancel() {

      };
      Cancel.value = new Cancel();
      return Cancel;
  })();
  var Execute = (function () {
      function Execute() {

      };
      Execute.value = new Execute();
      return Execute;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.div([  ])([ Incentknow_Atoms_Inputs.dangerButton(state.text)(ClickButton.value), Incentknow_HTML_Utils.whenElem(state.isFocused)(function (v) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-danger-change") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text(state.title) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("message") ])([ Halogen_HTML_Core.text(state.message) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("button") ])([ Incentknow_Atoms_Inputs.button("\u30ad\u30e3\u30f3\u30bb\u30eb")(Cancel.value), Incentknow_Atoms_Inputs.dangerButton("\u5b9f\u884c")(Execute.value) ]) ]);
      }) ]);
  };
  var initialState = function (input) {
      return {
          text: input.text,
          title: input.title,
          message: input.message,
          isFocused: false
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof ClickButton) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $8 = {};
                  for (var $9 in v1) {
                      if ({}.hasOwnProperty.call(v1, $9)) {
                          $8[$9] = v1[$9];
                      };
                  };
                  $8.isFocused = true;
                  return $8;
              });
          };
          if (v instanceof Cancel) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $11 = {};
                  for (var $12 in v1) {
                      if ({}.hasOwnProperty.call(v1, $12)) {
                          $11[$12] = v1[$12];
                      };
                  };
                  $11.isFocused = false;
                  return $11;
              });
          };
          if (v instanceof Execute) {
              return Halogen_Query_HalogenM.raise(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.DangerChange (line 60, column 16 - line 63, column 26): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictMonadEffect) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadEffect),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  
  exports.getIcons = (() => { return async function() {
      const response = await fetch("/assets/fontawesome.json");
      return await response.json();
  }})();
})(PS["Incentknow.Molecules.IconMenu"] = PS["Incentknow.Molecules.IconMenu"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.IconMenu"] = $PS["Incentknow.Molecules.IconMenu"] || {};
  var exports = $PS["Incentknow.Molecules.IconMenu"];
  var $foreign = $PS["Incentknow.Molecules.IconMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Promise = $PS["Control.Promise"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Utils = $PS["Data.String.Utils"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenuImpl = $PS["Incentknow.Molecules.SelectMenuImpl"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ImplAction = (function () {
      function ImplAction(value0) {
          this.value0 = value0;
      };
      ImplAction.create = function (value0) {
          return new ImplAction(value0);
      };
      return ImplAction;
  })();
  var toSelectMenuItem = function (i) {
      return {
          id: i.name,
          name: i.label,
          searchWord: i.name + (" " + Data_String_Common.joinWith(" ")(i.searchwords)),
          html: Halogen_HTML_Elements.span([  ])([ Incentknow_Atoms_Icon.iconSolid(i.name), Halogen_HTML_Core.text(i.label) ])
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("iconMenu") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "impl";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenuImpl.component(Data_Ord.ordString)(Data_Eq.eqString)(dictBehaviour)(dictMonadAff))({
                  items: (function () {
                      if (state.searchWord instanceof Data_Maybe.Just) {
                          return Data_Array.filter(function (x) {
                              return Data_String_Utils.includes(state.searchWord.value0)(x.searchWord);
                          })(state.icons);
                      };
                      if (state.searchWord instanceof Data_Maybe.Nothing) {
                          return state.icons;
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.IconMenu (line 96, column 13 - line 98, column 37): " + [ state.searchWord.constructor.name ]);
                  })(),
                  selectedItem: Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(function (value) {
                      return Data_Map_Internal.lookup(Data_Ord.ordString)(value)(state.allItems);
                  })(state.value)),
                  message: Data_Maybe.Nothing.value,
                  searchWord: state.searchWord,
                  disabled: state.disabled,
                  visibleCrossmark: true
              })(function ($35) {
                  return Data_Maybe.Just.create(ImplAction.create($35));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          value: input.value,
          icons: [  ],
          searchWord: Data_Maybe.Nothing.value,
          disabled: input.disabled,
          allItems: Data_Map_Internal.empty
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))($foreign.getIcons))(function (promise) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Control_Promise.toAff(promise)))(function (icons) {
                      var items = Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem)(icons);
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $15 = {};
                          for (var $16 in v1) {
                              if ({}.hasOwnProperty.call(v1, $16)) {
                                  $15[$16] = v1[$16];
                              };
                          };
                          $15.icons = items;
                          $15.allItems = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                              return new Data_Tuple.Tuple(x.id, x);
                          })(items));
                          return $15;
                      });
                  });
              });
          };
          if (v instanceof HandleInput) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $18 = {};
                  for (var $19 in v1) {
                      if ({}.hasOwnProperty.call(v1, $19)) {
                          $18[$19] = v1[$19];
                      };
                  };
                  $18.disabled = v.value0.disabled;
                  return $18;
              }))(function () {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $21 = {};
                      for (var $22 in v1) {
                          if ({}.hasOwnProperty.call(v1, $22)) {
                              $21[$22] = v1[$22];
                          };
                      };
                      $21.value = v.value0.value;
                      return $21;
                  }));
              });
          };
          if (v instanceof ImplAction) {
              if (v.value0 instanceof Incentknow_Molecules_SelectMenuImpl.ChangeValue) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $26 = {};
                      for (var $27 in v1) {
                          if ({}.hasOwnProperty.call(v1, $27)) {
                              $26[$27] = v1[$27];
                          };
                      };
                      $26.value = v.value0.value0;
                      return $26;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(v.value0.value0);
                  });
              };
              if (v.value0 instanceof Incentknow_Molecules_SelectMenuImpl.ChangeSearchWord) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $30 = {};
                      for (var $31 in v1) {
                          if ({}.hasOwnProperty.call(v1, $31)) {
                              $30[$31] = v1[$31];
                          };
                      };
                      $30.searchWord = v.value0.value0;
                      return $30;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.IconMenu (line 119, column 24 - line 124, column 40): " + [ v.value0.constructor.name ]);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.IconMenu (line 109, column 16 - line 124, column 40): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($36) {
                      return Data_Maybe.Just.create(HandleInput.create($36));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  
  exports.toRelatedFormat = formatId => ({ formatId });
})(PS["Incentknow.Molecules.TypeMenu"] = PS["Incentknow.Molecules.TypeMenu"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.TypeMenu"] = $PS["Incentknow.Molecules.TypeMenu"] || {};
  var exports = $PS["Incentknow.Molecules.TypeMenu"];
  var $foreign = $PS["Incentknow.Molecules.TypeMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_FormatMenu = $PS["Incentknow.Molecules.FormatMenu"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];
  var Incentknow_Molecules_SpaceMenu = $PS["Incentknow.Molecules.SpaceMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeTypeName = (function () {
      function ChangeTypeName(value0) {
          this.value0 = value0;
      };
      ChangeTypeName.create = function (value0) {
          return new ChangeTypeName(value0);
      };
      return ChangeTypeName;
  })();
  var ChangeFormat = (function () {
      function ChangeFormat(value0) {
          this.value0 = value0;
      };
      ChangeFormat.create = function (value0) {
          return new ChangeFormat(value0);
      };
      return ChangeFormat;
  })();
  var ChangeLangName = (function () {
      function ChangeLangName(value0) {
          this.value0 = value0;
      };
      ChangeLangName.create = function (value0) {
          return new ChangeLangName(value0);
      };
      return ChangeLangName;
  })();
  var ChangeArgType = (function () {
      function ChangeArgType(value0) {
          this.value0 = value0;
      };
      ChangeArgType.create = function (value0) {
          return new ChangeArgType(value0);
      };
      return ChangeArgType;
  })();
  var ChangeSpace = (function () {
      function ChangeSpace(value0) {
          this.value0 = value0;
      };
      ChangeSpace.create = function (value0) {
          return new ChangeSpace(value0);
      };
      return ChangeSpace;
  })();
  var typeItems = [ {
      id: Incentknow_Data_Entities.TypeNameInt.value,
      name: "Integer",
      desc: "\u6574\u6570"
  }, {
      id: Incentknow_Data_Entities.TypeNameString.value,
      name: "String",
      desc: "\u6587\u5b57\u5217(\u6539\u884c\u306a\u3057)"
  }, {
      id: Incentknow_Data_Entities.TypeNameText.value,
      name: "Text",
      desc: "\u6587\u5b57\u5217(\u6539\u884c\u3042\u308a)"
  }, {
      id: Incentknow_Data_Entities.TypeNameBool.value,
      name: "Boolean",
      desc: "\u30d6\u30fc\u30eb\u5024"
  }, {
      id: Incentknow_Data_Entities.TypeNameEnum.value,
      name: "Enum",
      desc: "\u5217\u6319\u4f53"
  }, {
      id: Incentknow_Data_Entities.TypeNameContent.value,
      name: "Content",
      desc: "\u30b3\u30f3\u30c6\u30f3\u30c4"
  }, {
      id: Incentknow_Data_Entities.TypeNameUrl.value,
      name: "URL",
      desc: "URL"
  }, {
      id: Incentknow_Data_Entities.TypeNameArray.value,
      name: "Array",
      desc: "\u914d\u5217"
  }, {
      id: Incentknow_Data_Entities.TypeNameObject.value,
      name: "Object",
      desc: "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"
  }, {
      id: Incentknow_Data_Entities.TypeNameDocument.value,
      name: "Document",
      desc: "\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"
  }, {
      id: Incentknow_Data_Entities.TypeNameEntity.value,
      name: "Entity",
      desc: "\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3"
  }, {
      id: Incentknow_Data_Entities.TypeNameImage.value,
      name: "Image",
      desc: "\u753b\u50cf"
  } ];
  var toSelectMenuItemFromType = function (format) {
      var html = Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-type-menu-item") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("name") ])([ Incentknow_Atoms_Icon.typeIcon(format.id), Halogen_HTML_Core.text(format.desc) ]) ]);
      return {
          id: format.id,
          name: format.name,
          searchWord: format.name,
          html: html
      };
  };
  var toSelectMenuItem = function (format) {
      var html = Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(format.name) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(format.desc) ]) ]);
      return {
          id: format.id,
          name: format.name,
          searchWord: format.name,
          html: html
      };
  };
  var langItems = [ {
      id: Incentknow_Data_Entities.Python.value,
      name: "Python",
      desc: ""
  }, {
      id: Incentknow_Data_Entities.Javascript.value,
      name: "JavaScript",
      desc: ""
  } ];
  var initialState = function (input) {
      return {
          typeNameItems: Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItemFromType)(Data_Array.filter(function (x) {
              return Data_Foldable.notElem(Data_Foldable.foldableArray)(Incentknow_Data_Entities.eqTypeName)(x.id)(input.exceptions);
          })(typeItems)),
          langNameItems: Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem)(langItems),
          typeName: Data_Functor.map(Data_Maybe.functorMaybe)(Incentknow_Data_EntityUtils.getTypeName)(input.value),
          typeOptions: Data_Maybe.maybe(Incentknow_Data_EntityUtils.defaultTypeOptions)(Incentknow_Data_EntityUtils.getTypeOptions)(input.value),
          exceptions: input.exceptions,
          spaceId: input.spaceId,
          selectedSpaceId: new Data_Maybe.Just(input.spaceId),
          disabled: input.disabled
      };
  };
  var buildReturnType = function (state) {
      if (state.typeName instanceof Data_Maybe.Just) {
          var v = Incentknow_Data_EntityUtils.buildType(state.typeName.value0)(state.typeOptions);
          if (v instanceof Data_Maybe.Just) {
              return Data_Maybe.Just.create(new Data_Maybe.Just(v.value0));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.TypeMenu (line 193, column 16 - line 195, column 23): " + [ v.constructor.name ]);
      };
      if (state.typeName instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(Data_Maybe.Nothing.value);
      };
      throw new Error("Failed pattern match at Incentknow.Molecules.TypeMenu (line 192, column 25 - line 196, column 26): " + [ state.typeName.constructor.name ]);
  };
  var raiseOrModify = function (state) {
      var v = buildReturnType(state);
      if (v instanceof Data_Maybe.Just) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(v.value0))(function () {
              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isNothing(v.value0))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(state));
          });
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(state);
      };
      throw new Error("Failed pattern match at Incentknow.Molecules.TypeMenu (line 202, column 23 - line 206, column 25): " + [ v.constructor.name ]);
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)));
          };
          if (v instanceof ChangeFormat) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return raiseOrModify({
                      typeNameItems: state.typeNameItems,
                      langNameItems: state.langNameItems,
                      typeName: state.typeName,
                      typeOptions: {
                          format: Data_Functor.map(Data_Maybe.functorMaybe)($foreign.toRelatedFormat)(v.value0),
                          subType: state.typeOptions.subType,
                          language: state.typeOptions.language,
                          properties: state.typeOptions.properties,
                          enumerators: state.typeOptions.enumerators
                      },
                      exceptions: state.exceptions,
                      spaceId: state.spaceId,
                      selectedSpaceId: state.selectedSpaceId,
                      disabled: state.disabled
                  });
              });
          };
          if (v instanceof ChangeTypeName) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return raiseOrModify({
                      typeNameItems: state.typeNameItems,
                      langNameItems: state.langNameItems,
                      typeName: v.value0,
                      typeOptions: state.typeOptions,
                      exceptions: state.exceptions,
                      spaceId: state.spaceId,
                      selectedSpaceId: state.selectedSpaceId,
                      disabled: state.disabled
                  });
              });
          };
          if (v instanceof ChangeLangName) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return raiseOrModify({
                      typeNameItems: state.typeNameItems,
                      langNameItems: state.langNameItems,
                      typeName: state.typeName,
                      typeOptions: {
                          format: state.typeOptions.format,
                          subType: state.typeOptions.subType,
                          language: v.value0,
                          properties: state.typeOptions.properties,
                          enumerators: state.typeOptions.enumerators
                      },
                      exceptions: state.exceptions,
                      spaceId: state.spaceId,
                      selectedSpaceId: state.selectedSpaceId,
                      disabled: state.disabled
                  });
              });
          };
          if (v instanceof ChangeArgType) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return raiseOrModify({
                      typeNameItems: state.typeNameItems,
                      langNameItems: state.langNameItems,
                      typeName: state.typeName,
                      typeOptions: {
                          format: state.typeOptions.format,
                          subType: v.value0,
                          language: state.typeOptions.language,
                          properties: state.typeOptions.properties,
                          enumerators: state.typeOptions.enumerators
                      },
                      exceptions: state.exceptions,
                      spaceId: state.spaceId,
                      selectedSpaceId: state.selectedSpaceId,
                      disabled: state.disabled
                  });
              });
          };
          if (v instanceof ChangeSpace) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return raiseOrModify({
                      typeNameItems: state.typeNameItems,
                      langNameItems: state.langNameItems,
                      typeName: state.typeName,
                      typeOptions: state.typeOptions,
                      exceptions: state.exceptions,
                      spaceId: state.spaceId,
                      selectedSpaceId: v.value0,
                      disabled: state.disabled
                  });
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.TypeMenu (line 211, column 16 - line 229, column 54): " + [ v.constructor.name ]);
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Entities.ordTypeName)(Incentknow_Data_Entities.eqTypeName)(dictBehaviour)(dictMonadAff))({
                  value: state.typeName,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Nothing.value,
                  fetchId: "",
                  initial: {
                      items: state.typeNameItems,
                      completed: true
                  },
                  visibleCrossmark: false
              })(function ($37) {
                  return Data_Maybe.Just.create(ChangeTypeName.create($37));
              }), (function () {
                  if (state.typeName instanceof Data_Maybe.Just && state.typeName.value0 instanceof Incentknow_Data_Entities.TypeNameContent) {
                      return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "spaceMenu";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SpaceMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: state.selectedSpaceId,
                          disabled: state.disabled
                      })(function ($38) {
                          return Data_Maybe.Just.create(ChangeSpace.create($38));
                      }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "formatMenu";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_FormatMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                              return v.formatId;
                          })(state.typeOptions.format),
                          filter: Data_Maybe.maybe(Incentknow_Molecules_FormatMenu.None.value)(Incentknow_Molecules_FormatMenu.SpaceBy.create)(state.selectedSpaceId),
                          disabled: state.disabled
                      })(function ($39) {
                          return Data_Maybe.Just.create(ChangeFormat.create($39));
                      }) ]);
                  };
                  if (state.typeName instanceof Data_Maybe.Just && state.typeName.value0 instanceof Incentknow_Data_Entities.TypeNameEntity) {
                      return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "spaceMenu";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SpaceMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: state.selectedSpaceId,
                          disabled: state.disabled
                      })(function ($40) {
                          return Data_Maybe.Just.create(ChangeSpace.create($40));
                      }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "formatMenu";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_FormatMenu.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          value: Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                              return v.formatId;
                          })(state.typeOptions.format),
                          filter: Data_Maybe.maybe(Incentknow_Molecules_FormatMenu.None.value)(Incentknow_Molecules_FormatMenu.SpaceByAndHasSemanticId.create)(state.selectedSpaceId),
                          disabled: state.disabled
                      })(function ($41) {
                          return Data_Maybe.Just.create(ChangeFormat.create($41));
                      }) ]);
                  };
                  if (state.typeName instanceof Data_Maybe.Just && state.typeName.value0 instanceof Incentknow_Data_Entities.TypeNameArray) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "typeMenu";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(component(dictBehaviour)(dictMonadAff))({
                          value: state.typeOptions.subType,
                          exceptions: [ Incentknow_Data_Entities.TypeNameArray.value ],
                          spaceId: state.spaceId,
                          disabled: state.disabled
                      })(function ($42) {
                          return Data_Maybe.Just.create(ChangeArgType.create($42));
                      });
                  };
                  return Halogen_HTML_Core.text("");
              })() ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour.MonadEffect0()),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($43) {
                      return Data_Maybe.Just.create(HandleInput.create($43));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Enumeration"] = $PS["Incentknow.Organisms.Enumeration"] || {};
  var exports = $PS["Incentknow.Organisms.Enumeration"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Utils = $PS["Incentknow.Data.Utils"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_DangerChange = $PS["Incentknow.Molecules.DangerChange"];                
  var GetValue = (function () {
      function GetValue(value0) {
          this.value0 = value0;
      };
      GetValue.create = function (value0) {
          return new GetValue(value0);
      };
      return GetValue;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeDisplayName = (function () {
      function ChangeDisplayName(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeDisplayName.create = function (value0) {
          return function (value1) {
              return new ChangeDisplayName(value0, value1);
          };
      };
      return ChangeDisplayName;
  })();
  var ChangeFieldName = (function () {
      function ChangeFieldName(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeFieldName.create = function (value0) {
          return function (value1) {
              return new ChangeFieldName(value0, value1);
          };
      };
      return ChangeFieldName;
  })();
  var DeleteEnumerator = (function () {
      function DeleteEnumerator(value0) {
          this.value0 = value0;
      };
      DeleteEnumerator.create = function (value0) {
          return new DeleteEnumerator(value0);
      };
      return DeleteEnumerator;
  })();
  var AddEnumerator = (function () {
      function AddEnumerator() {

      };
      AddEnumerator.value = new AddEnumerator();
      return AddEnumerator;
  })();
  var validateEnumerator = function ($$enum) {
      var $13 = $$enum.displayName === "";
      if ($13) {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just($$enum);
  };
  var render = function (dictMonadEffect) {
      return function (state) {
          var renderEnumerator = function ($$enum) {
              return Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([  ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "delete";
              }))(Data_Ord.ordString)(Data_Symbol.SProxy.value)($$enum.id)(Incentknow_Molecules_DangerChange.component(dictMonadEffect))({
                  text: "\u524a\u9664",
                  title: "\u5217\u6319\u5b50\u306e\u524a\u9664",
                  message: "\u5217\u6319\u5b50\u300c" + ((function () {
                      var $14 = $$enum.displayName === "";
                      if ($14) {
                          return $$enum.id;
                      };
                      return $$enum.displayName;
                  })() + ("\u300d" + "\u3092\u672c\u5f53\u306b\u524a\u9664\u3057\u307e\u3059\u304b\uff1f"))
              })(function (v) {
                  return Data_Maybe.Just.create(new DeleteEnumerator($$enum.id));
              }) ]), Halogen_HTML_Elements.td([  ])([ Halogen_HTML_Core.text($$enum.id) ]), Halogen_HTML_Elements.td([  ])([ (function () {
                  if (state.readonly) {
                      return Halogen_HTML_Core.text(Data_Maybe.fromMaybe("")($$enum.fieldName));
                  };
                  return Halogen_HTML_Elements.textarea([ Halogen_HTML_Properties.value(Data_Maybe.fromMaybe("")($$enum.fieldName)), Halogen_HTML_Events.onValueChange((function () {
                      var $41 = ChangeFieldName.create($$enum.id);
                      return function ($42) {
                          return Data_Maybe.Just.create($41($42));
                      };
                  })()) ]);
              })() ]), Halogen_HTML_Elements.td([  ])([ (function () {
                  if (state.readonly) {
                      return Halogen_HTML_Core.text($$enum.displayName);
                  };
                  return Halogen_HTML_Elements.textarea([ Halogen_HTML_Properties.value($$enum.displayName), Halogen_HTML_Events.onValueChange((function () {
                      var $43 = ChangeDisplayName.create($$enum.id);
                      return function ($44) {
                          return Data_Maybe.Just.create($43($44));
                      };
                  })()) ]);
              })() ]) ]);
          };
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-enumeration") ])([ (function () {
              var $17 = !state.readonly;
              if ($17) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("buttons-area") ])([ Incentknow_Atoms_Inputs.button("\u8ffd\u52a0")(AddEnumerator.value) ]);
              };
              return Halogen_HTML_Core.text("");
          })(), Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.thead([  ])([ Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("ID") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("\u30d5\u30a3\u30fc\u30eb\u30c9\u540d") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("\u8868\u793a\u540d") ]) ]) ]), Halogen_HTML_Elements.tbody([  ])(Data_Functor.map(Data_Functor.functorArray)(renderEnumerator)(state.enums)) ]) ]);
      };
  };
  var initialState = function (input) {
      return {
          enums: input.value,
          readonly: input.readonly
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
          var enums = Data_Functor.map(Data_Functor.functorArray)(validateEnumerator)(state.enums);
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(Data_Maybe_Utils.allJust(enums)));
      });
  };
  var handleAction = function (dictMonadEffect) {
      var modifyEnum = function (id) {
          return function (modify) {
              return Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  var $20 = x.id === id;
                  if ($20) {
                      return modify(x);
                  };
                  return x;
              });
          };
      };
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
          };
          if (v instanceof ChangeDisplayName) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $23 = {};
                  for (var $24 in x) {
                      if ({}.hasOwnProperty.call(x, $24)) {
                          $23[$24] = x[$24];
                      };
                  };
                  $23.enums = modifyEnum(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          displayName: v.value1,
                          fieldName: v2.fieldName
                      };
                  })(x.enums);
                  return $23;
              });
          };
          if (v instanceof ChangeFieldName) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $29 = {};
                  for (var $30 in x) {
                      if ({}.hasOwnProperty.call(x, $30)) {
                          $29[$30] = x[$30];
                      };
                  };
                  $29.enums = modifyEnum(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          displayName: v2.displayName,
                          fieldName: (function () {
                              var $28 = v.value1 === "";
                              if ($28) {
                                  return Data_Maybe.Nothing.value;
                              };
                              return new Data_Maybe.Just(v.value1);
                          })()
                      };
                  })(x.enums);
                  return $29;
              });
          };
          if (v instanceof DeleteEnumerator) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $34 = {};
                  for (var $35 in x) {
                      if ({}.hasOwnProperty.call(x, $35)) {
                          $34[$35] = x[$35];
                      };
                  };
                  $34.enums = Data_Array.filter(function (y) {
                      return y.id !== v.value0;
                  })(x.enums);
                  return $34;
              });
          };
          if (v instanceof AddEnumerator) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_Data_Utils.generateId(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(4))(function (newId) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                      var $38 = {};
                      for (var $39 in x) {
                          if ({}.hasOwnProperty.call(x, $39)) {
                              $38[$39] = x[$39];
                          };
                      };
                      $38.enums = Data_Semigroup.append(Data_Semigroup.semigroupArray)(x.enums)([ {
                          displayName: "",
                          fieldName: Data_Maybe.Nothing.value,
                          id: newId
                      } ]);
                      return $38;
                  });
              });
          };
          throw new Error("Failed pattern match at Incentknow.Organisms.Enumeration (line 121, column 16 - line 131, column 102): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictMonadEffect) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadEffect),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadEffect),
              handleQuery: handleQuery,
              receive: function ($45) {
                  return Data_Maybe.Just.create(HandleInput.create($45));
              },
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["GetValue"] = GetValue;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.Structure"] = $PS["Incentknow.Organisms.Structure"] || {};
  var exports = $PS["Incentknow.Organisms.Structure"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Utils = $PS["Incentknow.Data.Utils"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_DangerChange = $PS["Incentknow.Molecules.DangerChange"];
  var Incentknow_Molecules_IconMenu = $PS["Incentknow.Molecules.IconMenu"];
  var Incentknow_Molecules_TypeMenu = $PS["Incentknow.Molecules.TypeMenu"];
  var Incentknow_Organisms_Enumeration = $PS["Incentknow.Organisms.Enumeration"];                
  var GetValue = (function () {
      function GetValue(value0) {
          this.value0 = value0;
      };
      GetValue.create = function (value0) {
          return new GetValue(value0);
      };
      return GetValue;
  })();
  var SetValue = (function () {
      function SetValue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetValue.create = function (value0) {
          return function (value1) {
              return new SetValue(value0, value1);
          };
      };
      return SetValue;
  })();
  var ChangeDisplayName = (function () {
      function ChangeDisplayName(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeDisplayName.create = function (value0) {
          return function (value1) {
              return new ChangeDisplayName(value0, value1);
          };
      };
      return ChangeDisplayName;
  })();
  var ChangeFieldName = (function () {
      function ChangeFieldName(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeFieldName.create = function (value0) {
          return function (value1) {
              return new ChangeFieldName(value0, value1);
          };
      };
      return ChangeFieldName;
  })();
  var ChangeType = (function () {
      function ChangeType(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeType.create = function (value0) {
          return function (value1) {
              return new ChangeType(value0, value1);
          };
      };
      return ChangeType;
  })();
  var ChangeSemantic = (function () {
      function ChangeSemantic(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeSemantic.create = function (value0) {
          return function (value1) {
              return new ChangeSemantic(value0, value1);
          };
      };
      return ChangeSemantic;
  })();
  var ChangeOptional = (function () {
      function ChangeOptional(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeOptional.create = function (value0) {
          return function (value1) {
              return new ChangeOptional(value0, value1);
          };
      };
      return ChangeOptional;
  })();
  var ChangeIcon = (function () {
      function ChangeIcon(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeIcon.create = function (value0) {
          return function (value1) {
              return new ChangeIcon(value0, value1);
          };
      };
      return ChangeIcon;
  })();
  var AddProperty = (function () {
      function AddProperty() {

      };
      AddProperty.value = new AddProperty();
      return AddProperty;
  })();
  var DeleteProperty = (function () {
      function DeleteProperty(value0) {
          this.value0 = value0;
      };
      DeleteProperty.create = function (value0) {
          return new DeleteProperty(value0);
      };
      return DeleteProperty;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var toPropertyInfo = function (prop) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(prop.displayName)(function (name) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(prop.type)(function (ty) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                  id: prop.id,
                  icon: prop.icon,
                  displayName: name,
                  fieldName: prop.fieldName,
                  type: ty,
                  semantic: prop.semantic,
                  optional: prop.optional,
                  metaProperties: [  ]
              });
          });
      });
  };
  var toMaybeString = function (x) {
      var $30 = x === "";
      if ($30) {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just(x);
  };
  var structure_ = Data_Symbol.SProxy.value;
  var setSubStructure = function (properties) {
      return function (ty) {
          if (ty instanceof Incentknow_Data_Entities.ArrayType) {
              if (ty.value0 instanceof Incentknow_Data_Entities.ObjectType) {
                  return Incentknow_Data_Entities.ArrayType.create(new Incentknow_Data_Entities.ObjectType(ty.value0.value0));
              };
              return ty;
          };
          return ty;
      };
  };
  var setInput = function (input) {
      return function (state) {
          return {
              props: state.props,
              readonly: input.readonly,
              spaceId: input.spaceId
          };
      };
  };
  var setEnumerators = function (enums) {
      return function (ty) {
          if (ty instanceof Incentknow_Data_Entities.EnumType) {
              return new Incentknow_Data_Entities.EnumType(enums);
          };
          return ty;
      };
  };
  var initialState = function (input) {
      return setInput(input)({
          props: [  ],
          readonly: true,
          spaceId: Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceId)("")
      });
  };
  var handleAction = function (dictMonadEffect) {
      var modifyProp = function (id) {
          return function (modify) {
              return Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  var $37 = Data_Eq.eq(Incentknow_Data_Ids.eqPropertyId)(x.id)(id);
                  if ($37) {
                      return modify(x);
                  };
                  return x;
              });
          };
      };
      return function (v) {
          if (v instanceof ChangeDisplayName) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $39 = {};
                  for (var $40 in x) {
                      if ({}.hasOwnProperty.call(x, $40)) {
                          $39[$40] = x[$40];
                      };
                  };
                  $39.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v2.icon,
                          displayName: toMaybeString(v.value1),
                          fieldName: v2.fieldName,
                          type: v2.type,
                          semantic: v2.semantic,
                          optional: v2.optional
                      };
                  })(x.props);
                  return $39;
              });
          };
          if (v instanceof ChangeFieldName) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $44 = {};
                  for (var $45 in x) {
                      if ({}.hasOwnProperty.call(x, $45)) {
                          $44[$45] = x[$45];
                      };
                  };
                  $44.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v2.icon,
                          displayName: v2.displayName,
                          fieldName: toMaybeString(v.value1),
                          type: v2.type,
                          semantic: v2.semantic,
                          optional: v2.optional
                      };
                  })(x.props);
                  return $44;
              });
          };
          if (v instanceof ChangeIcon) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $49 = {};
                  for (var $50 in x) {
                      if ({}.hasOwnProperty.call(x, $50)) {
                          $49[$50] = x[$50];
                      };
                  };
                  $49.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v.value1,
                          displayName: v2.displayName,
                          fieldName: v2.fieldName,
                          type: v2.type,
                          semantic: v2.semantic,
                          optional: v2.optional
                      };
                  })(x.props);
                  return $49;
              });
          };
          if (v instanceof ChangeType) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $54 = {};
                  for (var $55 in x) {
                      if ({}.hasOwnProperty.call(x, $55)) {
                          $54[$55] = x[$55];
                      };
                  };
                  $54.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v2.icon,
                          displayName: v2.displayName,
                          fieldName: v2.fieldName,
                          type: v.value1,
                          semantic: v2.semantic,
                          optional: v2.optional
                      };
                  })(x.props);
                  return $54;
              });
          };
          if (v instanceof ChangeSemantic) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $59 = {};
                  for (var $60 in x) {
                      if ({}.hasOwnProperty.call(x, $60)) {
                          $59[$60] = x[$60];
                      };
                  };
                  $59.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v2.icon,
                          displayName: v2.displayName,
                          fieldName: v2.fieldName,
                          type: v2.type,
                          semantic: toMaybeString(v.value1),
                          optional: v2.optional
                      };
                  })(x.props);
                  return $59;
              });
          };
          if (v instanceof ChangeOptional) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $64 = {};
                  for (var $65 in x) {
                      if ({}.hasOwnProperty.call(x, $65)) {
                          $64[$65] = x[$65];
                      };
                  };
                  $64.props = modifyProp(v.value0)(function (v2) {
                      return {
                          id: v2.id,
                          icon: v2.icon,
                          displayName: v2.displayName,
                          fieldName: v2.fieldName,
                          type: v2.type,
                          semantic: v2.semantic,
                          optional: v.value1
                      };
                  })(x.props);
                  return $64;
              });
          };
          if (v instanceof AddProperty) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_Data_Utils.generateId(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(4))(function (newId) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                      var $69 = {};
                      for (var $70 in x) {
                          if ({}.hasOwnProperty.call(x, $70)) {
                              $69[$70] = x[$70];
                          };
                      };
                      $69.props = Data_Semigroup.append(Data_Semigroup.semigroupArray)(x.props)([ {
                          icon: Data_Maybe.Nothing.value,
                          displayName: Data_Maybe.Nothing.value,
                          fieldName: Data_Maybe.Nothing.value,
                          semantic: Data_Maybe.Nothing.value,
                          id: Data_Newtype.wrap(Incentknow_Data_Ids.newtypePropertyId)(newId),
                          type: Data_Maybe.Nothing.value,
                          optional: false
                      } ]);
                      return $69;
                  });
              });
          };
          if (v instanceof DeleteProperty) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (x) {
                  var $72 = {};
                  for (var $73 in x) {
                      if ({}.hasOwnProperty.call(x, $73)) {
                          $72[$73] = x[$73];
                      };
                  };
                  $72.props = Data_Array.filter(function (y) {
                      return Data_Eq.notEq(Incentknow_Data_Ids.eqPropertyId)(y.id)(v.value0);
                  })(x.props);
                  return $72;
              });
          };
          if (v instanceof HandleInput) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setInput(v.value0));
          };
          throw new Error("Failed pattern match at Incentknow.Organisms.Structure (line 241, column 16 - line 259, column 50): " + [ v.constructor.name ]);
      };
  };
  var getSubStructure = function (ty) {
      if (ty instanceof Incentknow_Data_Entities.ArrayType) {
          if (ty.value0 instanceof Incentknow_Data_Entities.ObjectType) {
              return new Data_Maybe.Just(ty.value0.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Maybe.Nothing.value;
  };
  var getEnumerators = function (ty) {
      if (ty instanceof Incentknow_Data_Entities.EnumType) {
          return new Data_Maybe.Just(ty.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var enumeration_ = Data_Symbol.SProxy.value;
  var getTypeArguments = function (prop) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
          return "structure";
      }))(Incentknow_Data_Ids.ordPropertyId)(structure_)(prop.id)(Halogen_Query.request(GetValue.create)))(function (argProps) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
              return "enumeration";
          }))(Incentknow_Data_Ids.ordPropertyId)(enumeration_)(prop.id)(Halogen_Query.request(Incentknow_Organisms_Enumeration.GetValue.create)))(function (argEnum) {
              if (argProps instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)({
                      type: Data_Functor.map(Data_Maybe.functorMaybe)(setSubStructure(argProps.value0))(prop.type),
                      displayName: prop.displayName,
                      fieldName: prop.fieldName,
                      icon: prop.icon,
                      id: prop.id,
                      optional: prop.optional,
                      semantic: prop.semantic
                  });
              };
              if (argEnum instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)({
                      type: Data_Functor.map(Data_Maybe.functorMaybe)(setEnumerators(argEnum.value0))(prop.type),
                      displayName: prop.displayName,
                      fieldName: prop.fieldName,
                      icon: prop.icon,
                      id: prop.id,
                      optional: prop.optional,
                      semantic: prop.semantic
                  });
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(prop);
          });
      });
  };
  var handleQuery = function (v) {
      if (v instanceof GetValue) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Traversable["for"](Halogen_Query_HalogenM.applicativeHalogenM)(Data_Traversable.traversableArray)(state.props)(getTypeArguments))(function (newProps) {
                  var props = Data_Functor.map(Data_Functor.functorArray)(toPropertyInfo)(newProps);
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Functor.map(Data_Maybe.functorMaybe)(v.value0)(Data_Maybe_Utils.allJust(props)));
              });
          });
      };
      if (v instanceof SetValue) {
          var convert = function (prop) {
              return {
                  id: prop.id,
                  displayName: new Data_Maybe.Just(prop.displayName),
                  icon: prop.icon,
                  fieldName: prop.fieldName,
                  type: new Data_Maybe.Just(prop.type),
                  semantic: prop.semantic,
                  optional: prop.optional
              };
          };
          var props = Data_Functor.map(Data_Functor.functorArray)(convert)(v.value0);
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $89 = {};
              for (var $90 in v1) {
                  if ({}.hasOwnProperty.call(v1, $90)) {
                      $89[$90] = v1[$90];
                  };
              };
              $89.props = props;
              return $89;
          }))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableArray)(props)(function (prop) {
                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(getSubStructure)(prop.type)))(function (childProps) {
                      return Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "structure";
                      }))(Incentknow_Data_Ids.ordPropertyId)(structure_)(prop.id)(Halogen_Query.tell(SetValue.create(childProps)));
                  });
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
              });
          });
      };
      throw new Error("Failed pattern match at Incentknow.Organisms.Structure (line 289, column 15 - line 315, column 8): " + [ v.constructor.name ]);
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var property = function (prop) {
                  return [ Halogen_HTML_Elements.tr([  ])([ Incentknow_HTML_Utils.whenElem(!state.readonly)(function (v) {
                      return Halogen_HTML_Elements.td([  ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "delete";
                      }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.id)(Incentknow_Molecules_DangerChange.component(dictBehaviour.MonadEffect0()))({
                          text: "\u524a\u9664",
                          title: "\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u524a\u9664",
                          message: "\u30d7\u30ed\u30d1\u30c6\u30a3\u300c" + (Data_Maybe.fromMaybe(Data_Newtype.unwrap(Incentknow_Data_Ids.newtypePropertyId)(prop.id))(prop.displayName) + ("\u300d" + "\u3092\u672c\u5f53\u306b\u524a\u9664\u3057\u307e\u3059\u304b\uff1f"))
                      })(function (v1) {
                          return Data_Maybe.Just.create(new DeleteProperty(prop.id));
                      }) ]);
                  }), Halogen_HTML_Elements.td([  ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "icon";
                  }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.id)(Incentknow_Molecules_IconMenu.component(dictBehaviour)(dictMonadAff))({
                      value: prop.icon,
                      disabled: state.readonly
                  })((function () {
                      var $97 = ChangeIcon.create(prop.id);
                      return function ($98) {
                          return Data_Maybe.Just.create($97($98));
                      };
                  })()) ]), Halogen_HTML_Elements.td([  ])([ (function () {
                      if (state.readonly) {
                          return Halogen_HTML_Core.text(Data_Maybe.fromMaybe("")(prop.displayName));
                      };
                      return Incentknow_Atoms_Inputs.textarea({
                          value: Data_Maybe.fromMaybe("")(prop.displayName),
                          placeholder: "",
                          onChange: ChangeDisplayName.create(prop.id)
                      });
                  })() ]), Halogen_HTML_Elements.td([  ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "typeMenu";
                  }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.id)(Incentknow_Molecules_TypeMenu.component(dictBehaviour)(dictMonadAff))({
                      value: prop.type,
                      exceptions: [ Incentknow_Data_Entities.TypeNameObject.value ],
                      spaceId: state.spaceId,
                      disabled: state.readonly
                  })((function () {
                      var $99 = ChangeType.create(prop.id);
                      return function ($100) {
                          return Data_Maybe.Just.create($99($100));
                      };
                  })()) ]), Halogen_HTML_Elements.td([  ])([ (function () {
                      if (state.readonly) {
                          return Halogen_HTML_Core.text(Data_Maybe.fromMaybe("")(prop.semantic));
                      };
                      return Incentknow_Atoms_Inputs.checkbox("")(prop.optional)(ChangeOptional.create(prop.id))(false);
                  })() ]) ]), Incentknow_HTML_Utils.maybeElem(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(getSubStructure)(prop.type)))(function (props) {
                      return Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Halogen_HTML_Properties.colSpan(4) ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "structure";
                      }))(Incentknow_Data_Ids.ordPropertyId)(structure_)(prop.id)(component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          readonly: state.readonly,
                          spaceId: state.spaceId
                      })(Data_Void.absurd) ]) ]);
                  }), Incentknow_HTML_Utils.maybeElem(Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(getEnumerators)(prop.type)))(function (enums) {
                      return Halogen_HTML_Elements.tr([  ])([ Halogen_HTML_Elements.td([ Halogen_HTML_Properties.colSpan(4) ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "enumeration";
                      }))(Incentknow_Data_Ids.ordPropertyId)(Data_Symbol.SProxy.value)(prop.id)(Incentknow_Organisms_Enumeration.component(dictBehaviour.MonadEffect0()))({
                          value: enums,
                          readonly: state.readonly
                      })(Data_Void.absurd) ]) ]);
                  }) ];
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-structure") ])([ (function () {
                  var $96 = !state.readonly;
                  if ($96) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("buttons-area") ])([ Incentknow_Atoms_Inputs.button("\u8ffd\u52a0")(AddProperty.value) ]);
                  };
                  return Halogen_HTML_Core.text("");
              })(), Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.thead([  ])([ Halogen_HTML_Elements.tr([  ])([ Incentknow_HTML_Utils.whenElem(!state.readonly)(function (v) {
                  return Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("") ]);
              }), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("\u30a2\u30a4\u30b3\u30f3") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("\u8868\u793a\u540d") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("\u578b") ]), Halogen_HTML_Elements.th([  ])([ Halogen_HTML_Core.text("Optional") ]) ]) ]), Halogen_HTML_Elements.tbody([  ])(Data_Array.concat(Data_Functor.map(Data_Functor.functorArray)(property)(state.props))) ]) ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour.MonadEffect0()),
                      handleQuery: handleQuery,
                      receive: function ($101) {
                          return Data_Maybe.Just.create(HandleInput.create($101));
                      },
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["GetValue"] = GetValue;
  exports["SetValue"] = SetValue;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Format.Main"] = $PS["Incentknow.Pages.Format.Main"] || {};
  var exports = $PS["Incentknow.Pages.Format.Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Property = $PS["Incentknow.Data.Property"];
  var Incentknow_Organisms_Structure = $PS["Incentknow.Organisms.Structure"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Edit = (function () {
      function Edit() {

      };
      Edit.value = new Edit();
      return Edit;
  })();
  var Discard = (function () {
      function Discard() {

      };
      Discard.value = new Discard();
      return Discard;
  })();
  var SubmitEdit = (function () {
      function SubmitEdit() {

      };
      SubmitEdit.value = new SubmitEdit();
      return SubmitEdit;
  })();
  var structure_ = Data_Symbol.SProxy.value;
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Halogen_HTML_Elements.div_([ (function () {
                      var $17 = !state.editMode;
                      if ($17) {
                          return Incentknow_Atoms_Inputs.button("\u7de8\u96c6\u3059\u308b")(Edit.value);
                      };
                      return Halogen_HTML_Core.text("");
                  })(), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "structure";
                  }))(Data_Ord.ordUnit)(structure_)(Data_Unit.unit)(Incentknow_Organisms_Structure.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      readonly: !state.editMode,
                      spaceId: state.format.space.spaceId
                  })(Data_Void.absurd), (function () {
                      if (state.editMode) {
                          return Halogen_HTML_Elements.div_([ Incentknow_Atoms_Inputs.submitButton({
                              text: "\u66f4\u65b0\u3059\u308b",
                              loadingText: "\u66f4\u65b0\u4e2d",
                              isDisabled: state.updating,
                              isLoading: state.updating,
                              onClick: SubmitEdit.value
                          }), Incentknow_Atoms_Inputs.button("\u5909\u66f4\u3092\u7834\u68c4")(Discard.value) ]);
                      };
                      return Halogen_HTML_Core.text("");
                  })() ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          format: input.format,
          editMode: false,
          updating: false
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "structure";
                          }))(Data_Ord.ordUnit)(structure_)(Data_Unit.unit)(Halogen_Query.tell(Incentknow_Organisms_Structure.SetValue.create(state.format.currentStructure.properties))))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $20 = {};
                          for (var $21 in v1) {
                              if ({}.hasOwnProperty.call(v1, $21)) {
                                  $20[$21] = v1[$21];
                              };
                          };
                          $20.format = v.value0.format;
                          return $20;
                      }))(function () {
                          return handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0())(Initialize.value);
                      });
                  };
                  if (v instanceof Edit) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $24 = {};
                          for (var $25 in v1) {
                              if ({}.hasOwnProperty.call(v1, $25)) {
                                  $24[$25] = v1[$25];
                              };
                          };
                          $24.editMode = true;
                          return $24;
                      });
                  };
                  if (v instanceof Discard) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $27 = {};
                          for (var $28 in v1) {
                              if ({}.hasOwnProperty.call(v1, $28)) {
                                  $27[$28] = v1[$28];
                              };
                          };
                          $27.editMode = false;
                          return $27;
                      });
                  };
                  if (v instanceof SubmitEdit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "structure";
                          }))(Data_Ord.ordUnit)(structure_)(Data_Unit.unit)(Halogen_Query.request(Incentknow_Organisms_Structure.GetValue.create)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (props) {
                              var diff = Incentknow_Data_Property.difference(state.format.currentStructure.properties)(props);
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Data_Property.eqChangeType)(diff.changeType)(Incentknow_Data_Property.NoneChange.value))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $30 = {};
                                  for (var $31 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $31)) {
                                          $30[$31] = v1[$31];
                                      };
                                  };
                                  $30.updating = true;
                                  return $30;
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.updateFormatStructure(state.format.formatId)(props)))(function (result) {
                                      if (result instanceof Data_Maybe.Just) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $40 = {};
                                              for (var $41 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $41)) {
                                                      $40[$41] = v1[$41];
                                                  };
                                              };
                                              $40.updating = false;
                                              $40.editMode = false;
                                              $40.format = (function () {
                                                  var $37 = {};
                                                  for (var $38 in v1.format) {
                                                      if ({}.hasOwnProperty.call(v1.format, $38)) {
                                                          $37[$38] = v1["format"][$38];
                                                      };
                                                  };
                                                  $37.currentStructure = (function () {
                                                      var $34 = {};
                                                      for (var $35 in v1.format.currentStructure) {
                                                          if ({}.hasOwnProperty.call(v1.format.currentStructure, $35)) {
                                                              $34[$35] = v1["format"]["currentStructure"][$35];
                                                          };
                                                      };
                                                      $34.properties = props;
                                                      return $34;
                                                  })();
                                                  return $37;
                                              })();
                                              return $40;
                                          });
                                      };
                                      if (result instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $44 = {};
                                              for (var $45 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $45)) {
                                                      $44[$45] = v1[$45];
                                                  };
                                              };
                                              $44.updating = false;
                                              return $44;
                                          });
                                      };
                                      throw new Error("Failed pattern match at Incentknow.Pages.Format.Main (line 103, column 13 - line 105, column 58): " + [ result.constructor.name ]);
                                  });
                              }));
                          }));
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Format.Main (line 82, column 16 - line 105, column 58): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($47) {
                          return Data_Maybe.Just.create(HandleInput.create($47));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.DisplayId"] = $PS["Incentknow.Molecules.DisplayId"] || {};
  var exports = $PS["Incentknow.Molecules.DisplayId"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var Typing = (function () {
      function Typing() {

      };
      Typing.value = new Typing();
      return Typing;
  })();
  var Available = (function () {
      function Available() {

      };
      Available.value = new Available();
      return Available;
  })();
  var Checking = (function () {
      function Checking() {

      };
      Checking.value = new Checking();
      return Checking;
  })();
  var AlreadyUsed = (function () {
      function AlreadyUsed() {

      };
      AlreadyUsed.value = new AlreadyUsed();
      return AlreadyUsed;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var Check = (function () {
      function Check() {

      };
      Check.value = new Check();
      return Check;
  })();
  var timer = function (dictMonadAff) {
      return Halogen_Query_EventSource.affEventSource(dictMonadAff)(function (emitter) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(300.0))(function () {
              return Halogen_Query_EventSource.emit(emitter)(Check.value);
          })))(function (fiber) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Effect_Aff.killFiber(Effect_Exception.error("Event source finalized"))(fiber));
          });
      });
  };
  var setInput = function (input) {
      return function (state) {
          return {
              displayId: input.value.displayId,
              disabled: input.disabled,
              checkId: input.checkId,
              checkState: input.value.checkState,
              timerSubId: state.timerSubId
          };
      };
  };
  var render = function (dictMonadAff) {
      return function (state) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("mol-display-id") ])([ Halogen_HTML_Elements.input([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.value(state.displayId), Halogen_HTML_Properties.disabled(state.disabled), Halogen_HTML_Events.onValueInput(function ($27) {
              return Data_Maybe.Just.create(Change.create($27));
          }) ]), (function () {
              if (state.checkState instanceof Typing) {
                  return Halogen_HTML_Core.text("");
              };
              if (state.checkState instanceof Available) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("available") ])([ Halogen_HTML_Core.text("\u3053\u306eID\u306f\u4f7f\u7528\u53ef\u80fd\u3067\u3059") ]);
              };
              if (state.checkState instanceof Checking) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("checking") ])([ Incentknow_Atoms_Icon.loadingWith("\u78ba\u8a8d\u4e2d") ]);
              };
              if (state.checkState instanceof AlreadyUsed) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("used") ])([ Halogen_HTML_Core.text("\u3053\u306eID\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059") ]);
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.DisplayId (line 93, column 7 - line 97, column 75): " + [ state.checkState.constructor.name ]);
          })() ]);
      };
  };
  var initialState = function (input) {
      return {
          displayId: input.value.displayId,
          disabled: input.disabled,
          checkId: input.checkId,
          checkState: input.value.checkState,
          timerSubId: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setInput(v.value0));
          };
          if (v instanceof Change) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.timerSubId)(function (subId) {
                      return Halogen_Query_HalogenM.unsubscribe(subId);
                  }))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(timer(dictMonadAff)))(function (newSubId) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $14 = {};
                              for (var $15 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $15)) {
                                      $14[$15] = v1[$15];
                                  };
                              };
                              $14.timerSubId = new Data_Maybe.Just(newSubId);
                              $14.displayId = v.value0;
                              $14.checkState = Typing.value;
                              return $14;
                          }))(function () {
                              return Halogen_Query_HalogenM.raise({
                                  displayId: v.value0,
                                  checkState: Typing.value
                              });
                          });
                      });
                  });
              });
          };
          if (v instanceof Check) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $18 = {};
                      for (var $19 in v1) {
                          if ({}.hasOwnProperty.call(v1, $19)) {
                              $18[$19] = v1[$19];
                          };
                      };
                      $18.checkState = Checking.value;
                      return $18;
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise({
                          displayId: state.displayId,
                          checkState: Checking.value
                      }))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(state.checkId(state.displayId)))(function (result) {
                              var checkState = Data_Either.either(Data_Function["const"](AlreadyUsed.value))(function (x) {
                                  if (x) {
                                      return Available.value;
                                  };
                                  return AlreadyUsed.value;
                              })(result);
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (latestState) {
                                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(latestState.displayId === state.displayId)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $22 = {};
                                      for (var $23 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $23)) {
                                              $22[$23] = v1[$23];
                                          };
                                      };
                                      $22.checkState = checkState;
                                      return $22;
                                  }))(function () {
                                      return Halogen_Query_HalogenM.raise({
                                          displayId: state.displayId,
                                          checkState: checkState
                                      });
                                  }));
                              });
                          });
                      });
                  });
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.DisplayId (line 112, column 16 - line 133, column 57): " + [ v.constructor.name ]);
      };
  };
  var eqCheckState = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Typing && y instanceof Typing) {
              return true;
          };
          if (x instanceof Available && y instanceof Available) {
              return true;
          };
          if (x instanceof Checking && y instanceof Checking) {
              return true;
          };
          if (x instanceof AlreadyUsed && y instanceof AlreadyUsed) {
              return true;
          };
          return false;
      };
  });
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render(dictMonadAff),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: function ($28) {
                  return Data_Maybe.Just.create(HandleInput.create($28));
              },
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["Typing"] = Typing;
  exports["Available"] = Available;
  exports["component"] = component;
  exports["eqCheckState"] = eqCheckState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting"] = $PS["Incentknow.Molecules.Setting"] || {};
  var exports = $PS["Incentknow.Molecules.Setting"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Edited = (function () {
      function Edited() {

      };
      Edited.value = new Edited();
      return Edited;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Changing = (function () {
      function Changing() {

      };
      Changing.value = new Changing();
      return Changing;
  })();
  var Sending = (function () {
      function Sending() {

      };
      Sending.value = new Sending();
      return Sending;
  })();
  var Changed = (function () {
      function Changed() {

      };
      Changed.value = new Changed();
      return Changed;
  })();
  var Failed = (function () {
      function Failed(value0) {
          this.value0 = value0;
      };
      Failed.create = function (value0) {
          return new Failed(value0);
      };
      return Failed;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var Edit = (function () {
      function Edit() {

      };
      Edit.value = new Edit();
      return Edit;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var Cancel = (function () {
      function Cancel() {

      };
      Cancel.value = new Cancel();
      return Cancel;
  })();
  var DoubleClicked = (function () {
      function DoubleClicked() {

      };
      DoubleClicked.value = new DoubleClicked();
      return DoubleClicked;
  })();
  var toState = function (response) {
      if (response instanceof Data_Either.Right) {
          return Changed.value;
      };
      if (response instanceof Data_Either.Left) {
          return new Failed(response.value0);
      };
      throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 148, column 20 - line 150, column 25): " + [ response.constructor.name ]);
  };
  var setInput = function (input) {
      return function (state) {
          return {
              state: state.state,
              typingValue: input.value,
              nowValue: input.value,
              title: input.title,
              desc: input.desc,
              submit: input.submit,
              disabled: input.disabled
          };
      };
  };
  var renderMessage = function (successMsg) {
      return function (state) {
          if (state instanceof None) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Sending) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Changing) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Changed) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("message message-success") ])([ Incentknow_Atoms_Icon.icon("fas fa-check"), Halogen_HTML_Core.text(successMsg) ]);
          };
          if (state instanceof Failed) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("message message-error") ])([ Incentknow_Atoms_Icon.icon("fas fa-exclamation-circle"), Halogen_HTML_Core.text(state.value0) ]);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 153, column 34 - line 158, column 105): " + [ state.constructor.name ]);
      };
  };
  var renderEditButton = function (state) {
      return function (edit) {
          if (state instanceof None) {
              return Incentknow_Atoms_Inputs.button("\u5909\u66f4")(edit);
          };
          if (state instanceof Sending) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Changing) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Failed) {
              return Halogen_HTML_Core.text("");
          };
          if (state instanceof Changed) {
              return Incentknow_Atoms_Inputs.button("\u5909\u66f4")(edit);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 161, column 31 - line 166, column 30): " + [ state.constructor.name ]);
      };
  };
  var renderCancelButton = function (cancel) {
      return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("cancel"), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(cancel);
      }) ])([ Halogen_HTML_Core.text("\u30ad\u30e3\u30f3\u30bb\u30eb") ]);
  };
  var renderSubmitButton = function (state) {
      return function (submit) {
          return function (cancel) {
              return function (disabled) {
                  if (state instanceof None) {
                      return Halogen_HTML_Core.text("");
                  };
                  if (state instanceof Changing) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("button") ])([ Incentknow_Atoms_Inputs.submitButton({
                          text: "\u6c7a\u5b9a",
                          loadingText: "\u5909\u66f4\u4e2d",
                          isDisabled: disabled,
                          isLoading: false,
                          onClick: submit
                      }), renderCancelButton(cancel) ]);
                  };
                  if (state instanceof Sending) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("button") ])([ Incentknow_Atoms_Inputs.submitButton({
                          text: "\u6c7a\u5b9a",
                          loadingText: "\u5909\u66f4\u4e2d",
                          isDisabled: true,
                          isLoading: true,
                          onClick: submit
                      }) ]);
                  };
                  if (state instanceof Failed) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("button") ])([ Incentknow_Atoms_Inputs.submitButton({
                          text: "\u6c7a\u5b9a",
                          loadingText: "\u5909\u66f4\u4e2d",
                          isDisabled: disabled,
                          isLoading: false,
                          onClick: submit
                      }), renderCancelButton(cancel) ]);
                  };
                  if (state instanceof Changed) {
                      return Halogen_HTML_Core.text("");
                  };
                  throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 169, column 51 - line 203, column 24): " + [ state.constructor.name ]);
              };
          };
      };
  };
  var render = function (dictEq) {
      return function (dictMonadAff) {
          return function ($$static) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item"), Halogen_HTML_Events.onDoubleClick(function (v) {
                      return new Data_Maybe.Just(DoubleClicked.value);
                  }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text(state.title) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("value") ])([ (function () {
                      if (state.state instanceof None) {
                          return $$static.viewer(state.nowValue);
                      };
                      if (state.state instanceof Changing) {
                          return $$static.editor(Change.create)(false)(state.typingValue);
                      };
                      if (state.state instanceof Sending) {
                          return $$static.editor(Change.create)(true)(state.typingValue);
                      };
                      if (state.state instanceof Failed) {
                          return $$static.editor(Change.create)(false)(state.typingValue);
                      };
                      if (state.state instanceof Changed) {
                          return $$static.viewer(state.nowValue);
                      };
                      throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 96, column 19 - line 101, column 60): " + [ state.state.constructor.name ]);
                  })() ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(state.desc) ]) ]), Incentknow_HTML_Utils.whenElem(!state.disabled)(function (v) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ renderEditButton(state.state)(Edit.value) ]);
                  }) ]), renderSubmitButton(state.state)(Submit.value)(Cancel.value)(!$$static.validate(state.typingValue) || Data_Eq.eq(dictEq)(state.nowValue)(state.typingValue)), renderMessage("\u5909\u66f4\u3057\u307e\u3057\u305f")(state.state) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          state: None.value,
          typingValue: input.value,
          nowValue: input.value,
          title: input.title,
          desc: input.desc,
          submit: input.submit,
          disabled: input.disabled
      };
  };
  var handleSettingQuery = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $34 = {};
          for (var $35 in v1) {
              if ({}.hasOwnProperty.call(v1, $35)) {
                  $34[$35] = v1[$35];
              };
          };
          $34.state = None.value;
          return $34;
      }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
      });
  };
  var handleAction = function (dictMonadAff) {
      return function ($$static) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setInput(v.value0));
              };
              if (v instanceof Change) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $40 = {};
                      for (var $41 in v1) {
                          if ({}.hasOwnProperty.call(v1, $41)) {
                              $40[$41] = v1[$41];
                          };
                      };
                      $40.typingValue = v.value0;
                      return $40;
                  });
              };
              if (v instanceof DoubleClicked) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $44 = {};
                      for (var $45 in v1) {
                          if ({}.hasOwnProperty.call(v1, $45)) {
                              $44[$45] = v1[$45];
                          };
                      };
                      $44.state = Changing.value;
                      return $44;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(Edited.value);
                  });
              };
              if (v instanceof Edit) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $47 = {};
                      for (var $48 in v1) {
                          if ({}.hasOwnProperty.call(v1, $48)) {
                              $47[$48] = v1[$48];
                          };
                      };
                      $47.state = Changing.value;
                      return $47;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(Edited.value);
                  });
              };
              if (v instanceof Submit) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $50 = {};
                      for (var $51 in v1) {
                          if ({}.hasOwnProperty.call(v1, $51)) {
                              $50[$51] = v1[$51];
                          };
                      };
                      $50.state = Sending.value;
                      return $50;
                  }))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(state.submit(state.typingValue)))(function (resposne) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $53 = {};
                                  for (var $54 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $54)) {
                                          $53[$54] = v1[$54];
                                      };
                                  };
                                  $53.state = toState(resposne);
                                  return $53;
                              });
                          });
                      });
                  });
              };
              if (v instanceof Cancel) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $56 = {};
                      for (var $57 in v1) {
                          if ({}.hasOwnProperty.call(v1, $57)) {
                              $56[$57] = v1[$57];
                          };
                      };
                      $56.state = None.value;
                      return $56;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.Setting (line 115, column 23 - line 130, column 41): " + [ v.constructor.name ]);
          };
      };
  }; 
  var component = function (dictEq) {
      return function (dictMonadAff) {
          return function ($$static) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictEq)(dictMonadAff)($$static),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadAff)($$static),
                      handleQuery: handleSettingQuery,
                      receive: function ($63) {
                          return Data_Maybe.Just.create(HandleInput.create($63));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
  exports["None"] = None;
  exports["Changing"] = Changing;
  exports["Sending"] = Sending;
  exports["Changed"] = Changed;
  exports["Failed"] = Failed;
  exports["Edited"] = Edited;
  exports["toState"] = toState;
  exports["renderMessage"] = renderMessage;
  exports["renderEditButton"] = renderEditButton;
  exports["renderSubmitButton"] = renderSubmitButton;
  exports["handleSettingQuery"] = handleSettingQuery;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.DisplayId"] = $PS["Incentknow.Molecules.Setting.DisplayId"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.DisplayId"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Incentknow_Molecules_DisplayId = $PS["Incentknow.Molecules.DisplayId"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      return function (check) {
          return Incentknow_Molecules_Setting.component(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "displayId";
          }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
              return "checkState";
          }))(Incentknow_Molecules_DisplayId.eqCheckState)))(dictMonadAff)({
              editor: function (change) {
                  return function (disabled) {
                      return function (val) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "edit";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_DisplayId.component(dictMonadAff))({
                              checkId: check,
                              disabled: disabled,
                              value: val
                          })(function ($1) {
                              return Data_Maybe.Just.create(change($1));
                          });
                      };
                  };
              },
              viewer: function (val) {
                  return Halogen_HTML_Core.text(val.displayId);
              },
              validate: function (val) {
                  return Data_Eq.eq(Incentknow_Molecules_DisplayId.eqCheckState)(val.checkState)(Incentknow_Molecules_DisplayId.Available.value);
              }
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.IconMenu"] = $PS["Incentknow.Molecules.Setting.IconMenu"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.IconMenu"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Incentknow_Molecules_IconMenu = $PS["Incentknow.Molecules.IconMenu"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          return Incentknow_Molecules_Setting.component(Data_Maybe.eqMaybe(Data_Eq.eqString))(dictMonadAff)({
              editor: function (change) {
                  return function (disabled) {
                      return function (val) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "icon";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_IconMenu.component(dictBehaviour)(dictMonadAff))({
                              value: val,
                              disabled: false
                          })(function ($2) {
                              return Data_Maybe.Just.create(change($2));
                          });
                      };
                  };
              },
              viewer: function (val) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "icon";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_IconMenu.component(dictBehaviour)(dictMonadAff))({
                      value: val,
                      disabled: true
                  })(Data_Function["const"](Data_Maybe.Nothing.value));
              },
              validate: Data_Maybe.isJust
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.Text"] = $PS["Incentknow.Molecules.Setting.Text"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.Text"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      var renderTextArea = function (value) {
          return function (change) {
              return function (disabled) {
                  return Halogen_HTML_Elements.input([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.value(value), Halogen_HTML_Properties.disabled(disabled), Halogen_HTML_Events.onValueInput(function ($1) {
                      return Data_Maybe.Just.create(change($1));
                  }) ]);
              };
          };
      };
      return Incentknow_Molecules_Setting.component(Data_Eq.eqString)(dictMonadAff)({
          editor: function (change) {
              return function (disabled) {
                  return function (val) {
                      return renderTextArea(val)(change)(disabled);
                  };
              };
          },
          viewer: function (val) {
              return Halogen_HTML_Core.text(val);
          },
          validate: function (val) {
              return true;
          }
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Format.Setting"] = $PS["Incentknow.Pages.Format.Setting"] || {};
  var exports = $PS["Incentknow.Pages.Format.Setting"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_DisplayId = $PS["Incentknow.Molecules.DisplayId"];
  var Incentknow_Molecules_Setting_DisplayId = $PS["Incentknow.Molecules.Setting.DisplayId"];
  var Incentknow_Molecules_Setting_IconMenu = $PS["Incentknow.Molecules.Setting.IconMenu"];
  var Incentknow_Molecules_Setting_Text = $PS["Incentknow.Molecules.Setting.Text"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Edit = (function () {
      function Edit(value0) {
          this.value0 = value0;
      };
      Edit.create = function (value0) {
          return new Edit(value0);
      };
      return Edit;
  })();
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-user-setting") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayName";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_Setting_Text.component(dictMonadAff))({
                      submit: (function () {
                          var $14 = Incentknow_API.setFormatDisplayName(state.format.formatId);
                          return function ($15) {
                              return Incentknow_API_Execution.callCommand($14($15));
                          };
                      })(),
                      value: state.format.displayName,
                      title: "\u8868\u793a\u540d",
                      desc: "",
                      disabled: state.disabled
                  })(function ($16) {
                      return Data_Maybe.Just.create(Edit.create($16));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayId";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_Setting_DisplayId.component(dictMonadAff)((function () {
                      var $17 = Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId);
                      return function ($18) {
                          return Incentknow_API_Execution.callQuery(Incentknow_API.getAvailableFormatDisplayId($17($18)));
                      };
                  })()))({
                      submit: function ($19) {
                          return Incentknow_API_Execution.callCommand((function (x) {
                              return Incentknow_API.setFormatDisplayId(state.format.formatId)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(x.displayId));
                          })($19));
                      },
                      value: {
                          displayId: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeFormatDisplayId)(state.format.displayId),
                          checkState: Incentknow_Molecules_DisplayId.Available.value
                      },
                      title: "\u8868\u793aID",
                      desc: "ID\u3092\u8a2d\u5b9a\u3057\u307e\u3059",
                      disabled: state.disabled
                  })(function ($20) {
                      return Data_Maybe.Just.create(Edit.create($20));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "icon";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_Setting_IconMenu.component(dictMonadAff)(dictBehaviour))({
                      submit: function ($21) {
                          return Incentknow_API_Execution.callCommand((function (x) {
                              return Incentknow_API.setFormatIcon(state.format.formatId)(x);
                          })($21));
                      },
                      value: state.format.icon,
                      title: "\u30a2\u30a4\u30b3\u30f3",
                      desc: "",
                      disabled: state.disabled
                  })(function ($22) {
                      return Data_Maybe.Just.create(Edit.create($22));
                  }) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          format: input.format,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Edit) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Format.Setting (line 108, column 16 - line 113, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictBehaviour)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($23) {
                          return Data_Maybe.Just.create(HandleInput.create($23));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Format.Versions"] = $PS["Incentknow.Pages.Format.Versions"] || {};
  var exports = $PS["Incentknow.Pages.Format.Versions"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var FetchedVersions = (function () {
      function FetchedVersions(value0) {
          this.value0 = value0;
      };
      FetchedVersions.create = function (value0) {
          return new FetchedVersions(value0);
      };
      return FetchedVersions;
  })();
  var render = function (dictMonadEffect) {
      return function (state) {
          var renderVersion = function (version) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Core.text(Data_Show.show(Data_Show.showInt)(version.version)) ]) ]);
          };
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-format-versions") ])([ Incentknow_Atoms_Icon.remoteWith(state.versions)(function (versions) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("list") ])(Data_Functor.map(Data_Functor.functorArray)(renderVersion)(versions));
          }) ]);
      };
  };
  var initialState = function (input) {
      return {
          formatId: input.formatId,
          versions: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedVersions.create)(Incentknow_API.getStructures(state.formatId));
                      });
                  };
                  if (v instanceof FetchedVersions) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (versions) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $11 = {};
                              for (var $12 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $12)) {
                                      $11[$12] = v1[$12];
                                  };
                              };
                              $11.versions = versions;
                              return $11;
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Format.Versions (line 63, column 16 - line 69, column 42): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Format"] = $PS["Incentknow.Pages.Format"] || {};
  var exports = $PS["Incentknow.Pages.Format"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Pages_Format_Main = $PS["Incentknow.Pages.Format.Main"];
  var Incentknow_Pages_Format_Setting = $PS["Incentknow.Pages.Format.Setting"];
  var Incentknow_Pages_Format_Versions = $PS["Incentknow.Pages.Format.Versions"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangeTab = (function () {
      function ChangeTab(value0) {
          this.value0 = value0;
      };
      ChangeTab.create = function (value0) {
          return new ChangeTab(value0);
      };
      return ChangeTab;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var Delete = (function () {
      function Delete() {

      };
      Delete.value = new Delete();
      return Delete;
  })();
  var FetchedFormat = (function () {
      function FetchedFormat(value0) {
          this.value0 = value0;
      };
      FetchedFormat.create = function (value0) {
          return new FetchedFormat(value0);
      };
      return FetchedFormat;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Page.verticalTabPage(Incentknow_Route.eqFormatTab)("page-format")({
                      tabs: [ Incentknow_Route.FormatMain.value, Incentknow_Route.FormatSetting.value ],
                      currentTab: state.tab,
                      onChangeTab: ChangeTab.create,
                      showTab: function (v) {
                          if (v instanceof Incentknow_Route.FormatMain) {
                              return [ Halogen_HTML_Core.text("Structure") ];
                          };
                          if (v instanceof Incentknow_Route.FormatPage) {
                              return [ Halogen_HTML_Core.text("Page") ];
                          };
                          if (v instanceof Incentknow_Route.FormatVersions) {
                              return [ Halogen_HTML_Core.text("Versions") ];
                          };
                          if (v instanceof Incentknow_Route.FormatSetting) {
                              return [ Halogen_HTML_Core.text("Setting") ];
                          };
                          if (v instanceof Incentknow_Route.FormatReactor) {
                              return [ Halogen_HTML_Core.text("Reactor") ];
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.Format (line 83, column 9 - line 88, column 49): " + [ v.constructor.name ]);
                      }
                  })([ Incentknow_Atoms_Icon.remoteWith(state.format)(function (x) {
                      return Halogen_HTML_Core.text(x.displayName);
                  }) ])([ Incentknow_Atoms_Icon.remoteWith(state.format)(function (x) {
                      if (state.tab instanceof Incentknow_Route.FormatMain) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "main";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Format_Main.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              format: x
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.FormatPage) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (state.tab instanceof Incentknow_Route.FormatVersions) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "versions";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Format_Versions.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              formatId: x.formatId
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.FormatSetting) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "setting";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Format_Setting.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              format: x,
                              disabled: false
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.FormatReactor) {
                          return Halogen_HTML_Core.text("");
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.Format (line 93, column 37 - line 98, column 36): " + [ state.tab.constructor.name ]);
                  }) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          formatId: input.formatId,
          spaceId: input.spaceId,
          format: Incentknow_API_Execution.Loading.value,
          tab: input.tab
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormat.create)(Incentknow_API.getFormat(state.formatId));
                      });
                  };
                  if (v instanceof FetchedFormat) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (format) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $17 = {};
                              for (var $18 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $18)) {
                                      $17[$18] = v1[$18];
                                  };
                              };
                              $17.format = format;
                              return $17;
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $21 = Data_Eq.notEq(Incentknow_Data_Ids.eqFormatDisplayId)(state.formatId)(v.value0.formatId);
                          if ($21) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $22 = {};
                              for (var $23 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $23)) {
                                      $22[$23] = v1[$23];
                                  };
                              };
                              $22.tab = v.value0.tab;
                              return $22;
                          });
                      });
                  };
                  if (v instanceof ChangeTab) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Incentknow_Route.Space.create(state.spaceId)(new Incentknow_Route.SpaceFormat(state.formatId, v.value0)));
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof Delete) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Format (line 102, column 16 - line 123, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($28) {
                          return Data_Maybe.Just.create(HandleInput.create($28));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.FormatList"] = $PS["Incentknow.Pages.Space.FormatList"] || {};
  var exports = $PS["Incentknow.Pages.Space.FormatList"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_FormatList = $PS["Incentknow.Organisms.FormatList"];
  var Incentknow_Pages_Format = $PS["Incentknow.Pages.Format"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var FetchedFormats = (function () {
      function FetchedFormats(value0) {
          this.value0 = value0;
      };
      FetchedFormats.create = function (value0) {
          return new FetchedFormats(value0);
      };
      return FetchedFormats;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-format-list") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "formatList";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_FormatList.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  spaceId: state.spaceId,
                  spaceDisplayId: state.spaceDisplayId,
                  selectedFormatid: (function () {
                      if (state.formatTab instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just(state.formatTab.value0.value0);
                      };
                      return Data_Maybe.Nothing.value;
                  })()
              })(Data_Void.absurd), Incentknow_HTML_Utils.maybeElem(state.formatTab)(function (v) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "format";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Format.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      formatId: v.value0,
                      spaceId: state.spaceDisplayId,
                      tab: v.value1
                  })(Data_Void.absurd);
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          spaceDisplayId: input.spaceDisplayId,
          formatTab: input.formatTab,
          formats: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFormats.create)(Incentknow_API.getFormats(state.spaceId));
                      });
                  };
                  if (v instanceof FetchedFormats) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (formats) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $20 = {};
                              for (var $21 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $21)) {
                                      $20[$21] = v1[$21];
                                  };
                              };
                              $20.formats = formats;
                              return $20;
                          });
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceId)(state.spaceId)(v.value0.spaceId))(handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value));
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.FormatList (line 70, column 16 - line 82, column 30): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($26) {
                          return Data_Maybe.Just.create(HandleInput.create($26));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.ActivityView"] = $PS["Incentknow.Organisms.ActivityView"] || {};
  var exports = $PS["Incentknow.Organisms.ActivityView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderActivity = function (activity) {
                  var maybeContent = (function () {
                      if (activity.action instanceof Incentknow_Data_Entities.ContentCreatedActivityAction) {
                          return new Data_Maybe.Just(activity.action.value0);
                      };
                      if (activity.action instanceof Incentknow_Data_Entities.ContentUpdatedActivityAction) {
                          return new Data_Maybe.Just(activity.action.value0);
                      };
                      if (activity.action instanceof Incentknow_Data_Entities.ContentCommentedActivityAction) {
                          return new Data_Maybe.Just(activity.action.value0);
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.ActivityView (line 98, column 20 - line 101, column 63): " + [ activity.action.constructor.name ]);
                  })();
                  var maybeComment = (function () {
                      if (activity.action instanceof Incentknow_Data_Entities.ContentCommentedActivityAction) {
                          return new Data_Maybe.Just(activity.action.value1);
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(activity.actorUser.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("usericon") ])([ Incentknow_Atoms_Icon.userIcon(activity.actorUser.iconImage) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("action") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("time") ])([ Incentknow_HTML_DateTime.elapsedTime(activity.timestamp) ]), Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(activity.actorUser.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(activity.actorUser.displayName + "\u3055\u3093") ]), (function () {
                      if (activity.action instanceof Incentknow_Data_Entities.ContentCreatedActivityAction) {
                          return Halogen_HTML_Core.text("\u304c\u4f5c\u6210\u3057\u307e\u3057\u305f");
                      };
                      if (activity.action instanceof Incentknow_Data_Entities.ContentUpdatedActivityAction) {
                          return Halogen_HTML_Core.text("\u304c\u7de8\u96c6\u3057\u307e\u3057\u305f");
                      };
                      if (activity.action instanceof Incentknow_Data_Entities.ContentCommentedActivityAction) {
                          return Halogen_HTML_Core.text("\u304c\u30b3\u30e1\u30f3\u30c8\u3057\u307e\u3057\u305f");
                      };
                      throw new Error("Failed pattern match at Incentknow.Organisms.ActivityView (line 81, column 13 - line 84, column 72): " + [ activity.action.constructor.name ]);
                  })() ]), Incentknow_HTML_Utils.maybeElem(maybeContent)(function (content) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("content") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Content(content.contentId))([ Incentknow_HTML_Utils.css("title") ])([ Halogen_HTML_Core.text((Incentknow_Data_Content.getContentSemanticData(content.data)(content.format)).title) ]), Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Container(content.format.space.displayId, content.format.displayId))([ Incentknow_HTML_Utils.css("format") ])([ Incentknow_Atoms_Icon.formatWithIcon(content.format) ]) ]);
                  }) ]);
              };
              return Incentknow_Templates_Page.sectionWithHeader("org-activity-view")([ Halogen_HTML_Core.text("Activities") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.activities)(function (activities) {
                  return Halogen_HTML_Elements.div([  ])(Data_Functor.map(Data_Functor.functorArray)(renderActivity)(activities));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          activities: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof NavigateRoute) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.ActivityView (line 108, column 16 - line 112, column 57): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($27) {
                          return Data_Maybe.Just.create(HandleInput.create($27));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.TopicView"] = $PS["Incentknow.Organisms.TopicView"] || {};
  var exports = $PS["Incentknow.Organisms.TopicView"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_ConpactContentView = $PS["Incentknow.Organisms.ConpactContentView"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderTopic = function (content) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("topic") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Container(content.format.space.displayId, content.format.displayId))([ Incentknow_HTML_Utils.css("top") ])([ Incentknow_Atoms_Icon.formatWithIcon(content.format) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("content") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "content";
                  }))(Incentknow_Data_Ids.ordContentId)(Data_Symbol.SProxy.value)(content.contentId)(Incentknow_Organisms_ConpactContentView.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                      value: content
                  })(Data_Void.absurd) ]) ]);
              };
              return Incentknow_Templates_Page.sectionWithHeader("org-topic-view")([ Halogen_HTML_Core.text("Topics") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.contents)(function (contents) {
                  return Halogen_HTML_Elements.div([  ])(Data_Functor.map(Data_Functor.functorArray)(renderTopic)(contents));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          contents: input.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
              };
              if (v instanceof NavigateRoute) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Incentknow.Organisms.TopicView (line 86, column 16 - line 90, column 57): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($14) {
                          return Data_Maybe.Just.create(HandleInput.create($14));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.Home"] = $PS["Incentknow.Pages.Space.Home"] || {};
  var exports = $PS["Incentknow.Pages.Space.Home"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_ActivityView = $PS["Incentknow.Organisms.ActivityView"];
  var Incentknow_Organisms_TopicView = $PS["Incentknow.Organisms.TopicView"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var FetchedHomePace = (function () {
      function FetchedHomePace(value0) {
          this.value0 = value0;
      };
      FetchedHomePace.create = function (value0) {
          return new FetchedHomePace(value0);
      };
      return FetchedHomePace;
  })();
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-space-home") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "activity";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_ActivityView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  value: Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v) {
                      return v.activities;
                  })(state.page)
              })(Data_Void.absurd) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "topic";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_TopicView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  value: Data_Functor.map(Incentknow_API_Execution.functorRemote)(function (v) {
                      return v.topics;
                  })(state.page)
              })(Data_Void.absurd) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          spaceDisplayId: input.spaceDisplayId,
          page: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadAff1) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedHomePace.create)(Incentknow_API.getSpaceHomePage(state.spaceId));
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof FetchedHomePace) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (page) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $15 = {};
                              for (var $16 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $16)) {
                                      $15[$16] = v1[$16];
                                  };
                              };
                              $15.page = page;
                              return $15;
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.Home (line 63, column 16 - line 70, column 34): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadAff1) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictBehaviour),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Organisms.MemberList"] = $PS["Incentknow.Organisms.MemberList"] || {};
  var exports = $PS["Incentknow.Organisms.MemberList"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var showMemberType = function (member) {
      if (member.type instanceof Incentknow_Data_Entities.MemberTypeOwner) {
          return "\u30aa\u30fc\u30ca\u30fc";
      };
      if (member.type instanceof Incentknow_Data_Entities.MemberTypeNormal) {
          return "\u30e1\u30f3\u30d0\u30fc";
      };
      throw new Error("Failed pattern match at Incentknow.Organisms.MemberList (line 56, column 25 - line 59, column 29): " + [ member.type.constructor.name ]);
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              var renderItem = function (member) {
                  var linkUser = Incentknow_HTML_Utils.link(Navigate.create)(new Incentknow_Route.User(member.user.displayId, Incentknow_Route.UserMain.value));
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ linkUser([ Incentknow_HTML_Utils.css("icon") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getIconUrl(member.user.iconImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("details") ])([ linkUser([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(member.user.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("info") ])([ Halogen_HTML_Core.text(showMemberType(member)) ]), Incentknow_HTML_DateTime.elapsedTime(member.joinedAt), Halogen_HTML_Core.text("\u306b\u52a0\u308f\u308a\u307e\u3057\u305f") ]) ]);
              };
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("org-userlist") ])(Data_Functor.map(Data_Functor.functorArray)(renderItem)(state.members));
          };
      };
  };
  var initialState = function (input) {
      return {
          members: input.members,
          isAdmin: input.isAdmin
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                          return handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0())(Initialize.value);
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Organisms.MemberList (line 90, column 16 - line 95, column 52): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($15) {
                          return Data_Maybe.Just.create(HandleInput.create($15));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.MemberList"] = $PS["Incentknow.Pages.Space.MemberList"] || {};
  var exports = $PS["Incentknow.Pages.Space.MemberList"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_MemberList = $PS["Incentknow.Organisms.MemberList"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var FetchedMembers = (function () {
      function FetchedMembers(value0) {
          this.value0 = value0;
      };
      FetchedMembers.create = function (value0) {
          return new FetchedMembers(value0);
      };
      return FetchedMembers;
  })();
  var renderMembers = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (state) {
              return function (members) {
                  return Halogen_HTML_Elements.div([  ])([ Incentknow_HTML_Utils.whenElem(true)(function (v) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "memberList";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_MemberList.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          members: members,
                          isAdmin: state.isAdmin
                      })(Data_Void.absurd);
                  }) ]);
              };
          };
      };
  };
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-space-member-list") ])([ Incentknow_Atoms_Icon.remoteArrayWith(state.members)(renderMembers(dictMonadAff)(dictBehaviour)(state)) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          isAdmin: input.isAdmin,
          members: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedMembers.create)(Incentknow_API.getSpaceMembers(state.spaceId));
                      });
                  };
                  if (v instanceof FetchedMembers) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (members) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $15 = {};
                              for (var $16 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $16)) {
                                      $15[$16] = v1[$16];
                                  };
                              };
                              $15.members = members;
                              return $15;
                          });
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.MemberList (line 68, column 16 - line 75, column 52): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictBehaviour),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.AuthMenu"] = $PS["Incentknow.Molecules.AuthMenu"] || {};
  var exports = $PS["Incentknow.Molecules.AuthMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var toSelectMenuItem = function (item) {
      var html = Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(item.name) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(item.desc) ]) ]);
      return {
          id: item.id,
          name: item.name,
          searchWord: item.name,
          html: html
      };
  };
  var initialState = function (input) {
      return {
          auth: input.value,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)));
          };
          if (v instanceof Change) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $11 = {};
                  for (var $12 in v1) {
                      if ({}.hasOwnProperty.call(v1, $12)) {
                          $11[$12] = v1[$12];
                      };
                  };
                  $11.auth = v.value0;
                  return $11;
              }))(function () {
                  return Halogen_Query_HalogenM.raise(v.value0);
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.AuthMenu (line 107, column 16 - line 112, column 17): " + [ v.constructor.name ]);
      };
  };
  var authItems = [ {
      id: Incentknow_Data_Entities.SpaceAuthorityNone.value,
      name: "None",
      desc: "\u306a\u3057"
  }, {
      id: Incentknow_Data_Entities.SpaceAuthorityVisible.value,
      name: "Visible",
      desc: "\u30b9\u30da\u30fc\u30b9\u306e\u540d\u524d\u3084\u8aac\u660e\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059"
  }, {
      id: Incentknow_Data_Entities.SpaceAuthorityReadable.value,
      name: "Readable",
      desc: "\u30b3\u30f3\u30c6\u30f3\u30c4\u3084\u30e1\u30f3\u30d0\u30fc\u306e\u4e00\u89a7\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059"
  }, {
      id: Incentknow_Data_Entities.SpaceAuthorityWritable.value,
      name: "Writable",
      desc: "\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u6295\u7a3f\u3067\u304d\u307e\u3059"
  } ];
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Entities.ordSpaceAuthority)(Incentknow_Data_Entities.eqSpaceAuthority)(dictBehaviour)(dictMonadAff))({
                  value: state.auth,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Nothing.value,
                  fetchId: "",
                  initial: {
                      items: Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem)(authItems),
                      completed: true
                  },
                  visibleCrossmark: false
              })(function ($15) {
                  return Data_Maybe.Just.create(Change.create($15));
              }) ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour.MonadEffect0()),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($16) {
                      return Data_Maybe.Just.create(HandleInput.create($16));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.AuthMenu"] = $PS["Incentknow.Molecules.Setting.AuthMenu"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.AuthMenu"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Molecules_AuthMenu = $PS["Incentknow.Molecules.AuthMenu"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          return Incentknow_Molecules_Setting.component(Data_Maybe.eqMaybe(Incentknow_Data_Entities.eqSpaceAuthority))(dictMonadAff)({
              editor: function (change) {
                  return function (disabled) {
                      return function (val) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "auth";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_AuthMenu.component(dictBehaviour)(dictMonadAff))({
                              value: val,
                              disabled: false
                          })(function ($2) {
                              return Data_Maybe.Just.create(change($2));
                          });
                      };
                  };
              },
              viewer: function (val) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "auth";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_AuthMenu.component(dictBehaviour)(dictMonadAff))({
                      value: val,
                      disabled: true
                  })(Data_Function["const"](Data_Maybe.Nothing.value));
              },
              validate: Data_Maybe.isJust
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.Checkbox"] = $PS["Incentknow.Molecules.Setting.Checkbox"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.Checkbox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      return function (text) {
          return Incentknow_Molecules_Setting.component(Data_Eq.eqBoolean)(dictMonadAff)({
              editor: function (change) {
                  return function (disabled) {
                      return function (val) {
                          return Incentknow_Atoms_Inputs.checkbox(text)(val)(change)(disabled);
                      };
                  };
              },
              viewer: function (val) {
                  return Incentknow_Atoms_Inputs.disabledCheckbox(text)(val);
              },
              validate: Data_Function["const"](true)
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.File.File"] = $PS["Web.File.File"] || {};
  var exports = $PS["Web.File.File"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toBlob = Unsafe_Coerce.unsafeCoerce;
  exports["toBlob"] = toBlob;
})(PS);
(function(exports) {
  "use strict";                                                    

  exports._item = function (index) {
    return function (fileList) {
      return fileList.item(index);
    };
  };
})(PS["Web.File.FileList"] = PS["Web.File.FileList"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.File.FileList"] = $PS["Web.File.FileList"] || {};
  var exports = $PS["Web.File.FileList"];
  var $foreign = $PS["Web.File.FileList"];
  var Data_Nullable = $PS["Data.Nullable"];                    
  var item = function (i) {
      var $1 = $foreign["_item"](i);
      return function ($2) {
          return Data_Nullable.toMaybe($1($2));
      };
  };
  exports["item"] = item;
})(PS);
(function(exports) {
  "use strict";

  exports.createObjectURL = function (blob) {
    return function () {
      return URL.createObjectURL(blob);
    };
  };
})(PS["Web.File.Url"] = PS["Web.File.Url"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.File.Url"] = $PS["Web.File.Url"] || {};
  var exports = $PS["Web.File.Url"];
  var $foreign = $PS["Web.File.Url"];
  exports["createObjectURL"] = $foreign.createObjectURL;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports._files = function (input) {
    return function () {
      return input.files;
    };
  };
})(PS["Web.HTML.HTMLInputElement"] = PS["Web.HTML.HTMLInputElement"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLInputElement"] = $PS["Web.HTML.HTMLInputElement"] || {};
  var exports = $PS["Web.HTML.HTMLInputElement"];
  var $foreign = $PS["Web.HTML.HTMLInputElement"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                                  
  var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
  var files = (function () {
      var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($5) {
          return $4($foreign["_files"]($5));
      };
  })();
  exports["fromElement"] = fromElement;
  exports["files"] = files;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.Image"] = $PS["Incentknow.Molecules.Setting.Image"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.Image"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputAcceptType = $PS["DOM.HTML.Indexed.InputAcceptType"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_Utils = $PS["Data.Maybe.Utils"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];
  var Web_File_File = $PS["Web.File.File"];
  var Web_File_FileList = $PS["Web.File.FileList"];
  var Web_File_Url = $PS["Web.File.Url"];
  var Web_HTML_HTMLInputElement = $PS["Web.HTML.HTMLInputElement"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var Edit = (function () {
      function Edit() {

      };
      Edit.value = new Edit();
      return Edit;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var Cancel = (function () {
      function Cancel() {

      };
      Cancel.value = new Cancel();
      return Cancel;
  })();
  var setInput = function (input) {
      return function (state) {
          return {
              state: state.state,
              typingIcon: state.typingIcon,
              nowUrl: input.value,
              submit: input.submit,
              disabled: input.disabled
          };
      };
  };
  var initialState = function (input) {
      return {
          state: Incentknow_Molecules_Setting.None.value,
          typingIcon: Data_Maybe.Nothing.value,
          nowUrl: input.value,
          submit: input.submit,
          disabled: input.disabled
      };
  };
  var iconInput_ = "iconInput";
  var render = function (state) {
      var renderImage = function (url) {
          return Incentknow_HTML_Utils.maybeElem(url)(function (x) {
              return Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(x) ]);
          });
      };
      var renderIconInput = function (disabled) {
          return Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputFile.value), Halogen_HTML_Properties.ref(iconInput_), Halogen_HTML_Properties.disabled(disabled), Halogen_HTML_Properties.accept(DOM_HTML_Indexed_InputAcceptType.mediaType("image/jpeg,image/png,image/webp")), Halogen_HTML_Events.onChange(function ($41) {
              return Data_Maybe.Just.create(Change.create($41));
          }) ]);
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text("\u30a2\u30a4\u30b3\u30f3") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("value") ])([ (function () {
          var iconUrl = (function () {
              if (state.typingIcon instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(state.typingIcon.value0.url);
              };
              if (state.typingIcon instanceof Data_Maybe.Nothing) {
                  return state.nowUrl;
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Image (line 99, column 31 - line 101, column 46): " + [ state.typingIcon.constructor.name ]);
          })();
          if (state.state instanceof Incentknow_Molecules_Setting.None) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ renderImage(state.nowUrl) ]);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Changing) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ renderImage(iconUrl), renderIconInput(false) ]);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Sending) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ renderImage(iconUrl), renderIconInput(true) ]);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Failed) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ renderImage(iconUrl), renderIconInput(false) ]);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Changed) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ renderImage(state.nowUrl) ]);
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Image (line 103, column 21 - line 126, column 28): " + [ state.state.constructor.name ]);
      })() ]) ]), Incentknow_HTML_Utils.whenElem(!state.disabled)(function (v) {
          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Incentknow_Molecules_Setting.renderEditButton(state.state)(Edit.value) ]);
      }) ]), Incentknow_Molecules_Setting.renderSubmitButton(state.state)(Submit.value)(Cancel.value)(Data_Maybe.isNothing(state.typingIcon)), Incentknow_Molecules_Setting.renderMessage("\u30a2\u30a4\u30b3\u30f3\u3092\u5909\u66f4\u3057\u307e\u3057\u305f")(state.state) ]);
  };
  var handleAction = function (dictMonadAff) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setInput(v.value0));
              };
              if (v instanceof Submit) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(state.typingIcon)(function (icon) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $19 = {};
                              for (var $20 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $20)) {
                                      $19[$20] = v1[$20];
                                  };
                              };
                              $19.state = Incentknow_Molecules_Setting.Sending.value;
                              return $19;
                          }))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(state.submit(icon.blob)))(function (result) {
                                  if (result instanceof Data_Either.Right) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $23 = {};
                                          for (var $24 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $24)) {
                                                  $23[$24] = v1[$24];
                                              };
                                          };
                                          $23.state = Incentknow_Molecules_Setting.Changed.value;
                                          return $23;
                                      });
                                  };
                                  if (result instanceof Data_Either.Left) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                          var $27 = {};
                                          for (var $28 in v1) {
                                              if ({}.hasOwnProperty.call(v1, $28)) {
                                                  $27[$28] = v1[$28];
                                              };
                                          };
                                          $27.state = new Incentknow_Molecules_Setting.Failed(result.value0);
                                          return $27;
                                      });
                                  };
                                  throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Image (line 158, column 7 - line 160, column 55): " + [ result.constructor.name ]);
                              });
                          });
                      });
                  });
              };
              if (v instanceof Change) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Data_Maybe_Utils.flatten)(Data_Functor.map(Data_Maybe.functorMaybe)(Web_HTML_HTMLInputElement.fromElement)))(Halogen_Query_HalogenM.getRef(iconInput_)))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function (input) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_HTML_HTMLInputElement.files(input)))(function (fileList) {
                          var maybeFile = Data_Maybe_Utils.flatten(Data_Functor.map(Data_Maybe.functorMaybe)(Web_File_FileList.item(0))(fileList));
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeFile)(function (file) {
                              var blob = Web_File_File.toBlob(file);
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_File_Url.createObjectURL(blob)))(function (url) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $31 = {};
                                      for (var $32 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $32)) {
                                              $31[$32] = v1[$32];
                                          };
                                      };
                                      $31.typingIcon = new Data_Maybe.Just({
                                          file: file,
                                          blob: blob,
                                          url: url
                                      });
                                      return $31;
                                  });
                              });
                          });
                      });
                  }));
              };
              if (v instanceof Cancel) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $35 = {};
                      for (var $36 in v1) {
                          if ({}.hasOwnProperty.call(v1, $36)) {
                              $35[$36] = v1[$36];
                          };
                      };
                      $35.state = Incentknow_Molecules_Setting.None.value;
                      return $35;
                  });
              };
              if (v instanceof Edit) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $38 = {};
                      for (var $39 in v1) {
                          if ({}.hasOwnProperty.call(v1, $39)) {
                              $38[$39] = v1[$39];
                          };
                      };
                      $38.state = Incentknow_Molecules_Setting.Changing.value;
                      return $38;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(Incentknow_Molecules_Setting.Edited.value);
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Image (line 150, column 16 - line 175, column 19): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadAff) {
      return function (dictMonadEffect) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff)(dictMonadAff.MonadEffect0()),
                  handleQuery: Incentknow_Molecules_Setting.handleSettingQuery,
                  receive: function ($42) {
                      return Data_Maybe.Just.create(HandleInput.create($42));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.MembershipMethodMenu"] = $PS["Incentknow.Molecules.MembershipMethodMenu"] || {};
  var exports = $PS["Incentknow.Molecules.MembershipMethodMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var toSelectMenuItem = function (item) {
      var html = Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(item.name) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(item.desc) ]) ]);
      return {
          id: item.id,
          name: item.name,
          searchWord: item.name,
          html: html
      };
  };
  var initialState = function (input) {
      return {
          membershipMethod: input.value,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)));
          };
          if (v instanceof Change) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $11 = {};
                  for (var $12 in v1) {
                      if ({}.hasOwnProperty.call(v1, $12)) {
                          $11[$12] = v1[$12];
                      };
                  };
                  $11.membershipMethod = v.value0;
                  return $11;
              }))(function () {
                  return Halogen_Query_HalogenM.raise(v.value0);
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.MembershipMethodMenu (line 104, column 16 - line 109, column 29): " + [ v.constructor.name ]);
      };
  };
  var authItems = [ {
      id: Incentknow_Data_Entities.MembershipMethodNone.value,
      name: "None",
      desc: "\u30e1\u30f3\u30d0\u30fc\u306e\u8ffd\u52a0\u306f\u884c\u308f\u308c\u307e\u305b\u3093"
  }, {
      id: Incentknow_Data_Entities.MembershipMethodApp.value,
      name: "Application and approval",
      desc: "\u30e1\u30f3\u30d0\u30fc\u52a0\u5165\u8005\u306b\u3088\u308b\u7533\u8acb\u3068\u30b9\u30da\u30fc\u30b9\u7ba1\u7406\u8005\u306b\u3088\u308b\u627f\u8a8d\u306b\u3088\u3063\u3066\u3001\u30e1\u30f3\u30d0\u30fc\u30b7\u30c3\u30d7\u306e\u52a0\u5165\u306f\u7ba1\u7406\u3055\u308c\u307e\u3059"
  } ];
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Entities.ordMembershipMethod)(Incentknow_Data_Entities.eqMembershipMethod)(dictBehaviour)(dictMonadAff))({
                  value: state.membershipMethod,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Nothing.value,
                  fetchId: "",
                  initial: {
                      items: Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem)(authItems),
                      completed: true
                  },
                  visibleCrossmark: false
              })(function ($15) {
                  return Data_Maybe.Just.create(Change.create($15));
              }) ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour.MonadEffect0()),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($16) {
                      return Data_Maybe.Just.create(HandleInput.create($16));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.MembershipMethodMenu"] = $PS["Incentknow.Molecules.Setting.MembershipMethodMenu"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.MembershipMethodMenu"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Molecules_MembershipMethodMenu = $PS["Incentknow.Molecules.MembershipMethodMenu"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          return Incentknow_Molecules_Setting.component(Data_Maybe.eqMaybe(Incentknow_Data_Entities.eqMembershipMethod))(dictMonadAff)({
              editor: function (change) {
                  return function (disabled) {
                      return function (val) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "menu";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_MembershipMethodMenu.component(dictBehaviour)(dictMonadAff))({
                              value: val,
                              disabled: false
                          })(function ($2) {
                              return Data_Maybe.Just.create(change($2));
                          });
                      };
                  };
              },
              viewer: function (val) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "menu";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_MembershipMethodMenu.component(dictBehaviour)(dictMonadAff))({
                      value: val,
                      disabled: true
                  })(Data_Function["const"](Data_Maybe.Nothing.value));
              },
              validate: Data_Maybe.isJust
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.Setting"] = $PS["Incentknow.Pages.Space.Setting"] || {};
  var exports = $PS["Incentknow.Pages.Space.Setting"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Molecules_DisplayId = $PS["Incentknow.Molecules.DisplayId"];
  var Incentknow_Molecules_Setting_AuthMenu = $PS["Incentknow.Molecules.Setting.AuthMenu"];
  var Incentknow_Molecules_Setting_Checkbox = $PS["Incentknow.Molecules.Setting.Checkbox"];
  var Incentknow_Molecules_Setting_DisplayId = $PS["Incentknow.Molecules.Setting.DisplayId"];
  var Incentknow_Molecules_Setting_Image = $PS["Incentknow.Molecules.Setting.Image"];
  var Incentknow_Molecules_Setting_MembershipMethodMenu = $PS["Incentknow.Molecules.Setting.MembershipMethodMenu"];
  var Incentknow_Molecules_Setting_Text = $PS["Incentknow.Molecules.Setting.Text"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Edit = (function () {
      function Edit(value0) {
          this.value0 = value0;
      };
      Edit.create = function (value0) {
          return new Edit(value0);
      };
      return Edit;
  })();
  var published_ = Data_Symbol.SProxy.value;
  var membershipMethodMenu_ = Data_Symbol.SProxy.value;
  var initialState = function (input) {
      return {
          space: input.space,
          disabled: input.disabled
      };
  };
  var homeImage_ = Data_Symbol.SProxy.value;
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0));
                  };
                  if (v instanceof Edit) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.Setting (line 147, column 16 - line 152, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var displayName_ = Data_Symbol.SProxy.value;
  var displayId_ = Data_Symbol.SProxy.value;
  var authMenu_ = Data_Symbol.SProxy.value;
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Page.section("page-user-setting")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayName";
                  }))(Data_Ord.ordUnit)(displayName_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Text.component(dictMonadAff))({
                      submit: (function () {
                          var $14 = Incentknow_API.setSpaceDisplayName(state.space.spaceId);
                          return function ($15) {
                              return Incentknow_API_Execution.callCommand($14($15));
                          };
                      })(),
                      value: state.space.displayName,
                      title: "\u8868\u793a\u540d",
                      desc: "",
                      disabled: state.disabled
                  })(function ($16) {
                      return Data_Maybe.Just.create(Edit.create($16));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayName";
                  }))(Data_Ord.ordUnit)(displayName_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Text.component(dictMonadAff))({
                      submit: (function () {
                          var $17 = Incentknow_API.setSpaceDescription(state.space.spaceId);
                          return function ($18) {
                              return Incentknow_API_Execution.callCommand($17($18));
                          };
                      })(),
                      value: state.space.description,
                      title: "\u8aac\u660e",
                      desc: "",
                      disabled: state.disabled
                  })(function ($19) {
                      return Data_Maybe.Just.create(Edit.create($19));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "homeImage";
                  }))(Data_Ord.ordUnit)(homeImage_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Image.component(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      submit: function ($20) {
                          return Incentknow_API_Execution.callCommand((function (blob) {
                              return Incentknow_API.uploadSpaceHeaderImage({
                                  spaceId: state.space.spaceId,
                                  blob: blob
                              });
                          })($20));
                      },
                      value: Data_Maybe.Just.create(Incentknow_API_Static.getHeaderImageUrl(state.space.headerImage)),
                      disabled: state.disabled
                  })(function ($21) {
                      return Data_Maybe.Just.create(Edit.create($21));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "published";
                  }))(Data_Ord.ordUnit)(published_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Checkbox.component(dictMonadAff)("\u516c\u958b\u3059\u308b"))({
                      submit: (function () {
                          var $22 = Incentknow_API.setSpacePublished(state.space.spaceId);
                          return function ($23) {
                              return Incentknow_API_Execution.callCommand($22($23));
                          };
                      })(),
                      value: state.space.published,
                      title: "\u4e00\u822c\u516c\u958b",
                      desc: "\u3053\u306e\u8a2d\u5b9a\u3092\u30aa\u30f3\u306b\u3059\u308b\u3068\u3001\u30b9\u30da\u30fc\u30b9\u306e\u691c\u7d22\u7d50\u679c\u3084\u30b9\u30da\u30fc\u30b9\u306e\u4e00\u89a7\u306b\u3053\u306e\u30b9\u30da\u30fc\u30b9\u306e\u540d\u524d\u3084\u8aac\u660e\u304c\u8868\u793a\u3055\u308c\u307e\u3059",
                      disabled: state.disabled
                  })(function ($24) {
                      return Data_Maybe.Just.create(Edit.create($24));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "authMenu";
                  }))(Data_Ord.ordUnit)(authMenu_)(Data_Unit.unit)(Incentknow_Molecules_Setting_AuthMenu.component(dictMonadAff)(dictBehaviour))({
                      submit: function ($25) {
                          return Incentknow_API_Execution.callCommand((function (x) {
                              return Incentknow_API.setSpaceDefaultAuthority(state.space.spaceId)(Data_Maybe.fromMaybe(Incentknow_Data_Entities.SpaceAuthorityNone.value)(x));
                          })($25));
                      },
                      value: new Data_Maybe.Just(state.space.defaultAuthority),
                      title: "\u6a19\u6e96\u6a29\u9650",
                      desc: "\u30b9\u30da\u30fc\u30b9\u306e\u30e1\u30f3\u30d0\u30fc\u4ee5\u5916\u306e\u4eba\u3092\u542b\u3080\u5168\u3066\u306e\u4eba\u306b\u9069\u7528\u3055\u308c\u308b\u6a29\u9650\u3092\u8a2d\u5b9a\u3057\u307e\u3059",
                      disabled: state.disabled
                  })(function ($26) {
                      return Data_Maybe.Just.create(Edit.create($26));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "membershipMethodMenu";
                  }))(Data_Ord.ordUnit)(membershipMethodMenu_)(Data_Unit.unit)(Incentknow_Molecules_Setting_MembershipMethodMenu.component(dictMonadAff)(dictBehaviour))({
                      submit: function ($27) {
                          return Incentknow_API_Execution.callCommand((function (x) {
                              return Incentknow_API.setSpaceMembershipMethod(state.space.spaceId)(Data_Maybe.fromMaybe(Incentknow_Data_Entities.MembershipMethodNone.value)(x));
                          })($27));
                      },
                      value: new Data_Maybe.Just(state.space.membershipMethod),
                      title: "\u30e1\u30f3\u30d0\u30fc\u52a0\u5165\u65b9\u6cd5",
                      desc: "\u30e1\u30f3\u30d0\u30fc\u304c\u3069\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067\u30b9\u30da\u30fc\u30b9\u306b\u52a0\u5165\u3059\u308b\u304b\u3092\u8a2d\u5b9a\u3057\u307e\u3059",
                      disabled: state.disabled
                  })(function ($28) {
                      return Data_Maybe.Just.create(Edit.create($28));
                  }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayId";
                  }))(Data_Ord.ordUnit)(displayId_)(Data_Unit.unit)(Incentknow_Molecules_Setting_DisplayId.component(dictMonadAff)((function () {
                      var $29 = Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId);
                      return function ($30) {
                          return Incentknow_API_Execution.callQuery(Incentknow_API.getAvailableSpaceDisplayId($29($30)));
                      };
                  })()))({
                      submit: function ($31) {
                          return Incentknow_API_Execution.callCommand((function (x) {
                              return Incentknow_API.setSpaceDisplayId(state.space.spaceId)(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(x.displayId));
                          })($31));
                      },
                      value: {
                          displayId: Data_Newtype.unwrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)(state.space.displayId),
                          checkState: Incentknow_Molecules_DisplayId.Available.value
                      },
                      title: "\u8868\u793aID",
                      desc: "ID\u3092\u8a2d\u5b9a\u3057\u307e\u3059",
                      disabled: state.disabled
                  })(function ($32) {
                      return Data_Maybe.Just.create(Edit.create($32));
                  }) ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictBehaviour)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($33) {
                          return Data_Maybe.Just.create(HandleInput.create($33));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space.SpaceInfo"] = $PS["Incentknow.Pages.Space.SpaceInfo"] || {};
  var exports = $PS["Incentknow.Pages.Space.SpaceInfo"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Pages_Space_FormatList = $PS["Incentknow.Pages.Space.FormatList"];
  var Incentknow_Pages_Space_Home = $PS["Incentknow.Pages.Space.Home"];
  var Incentknow_Pages_Space_MemberList = $PS["Incentknow.Pages.Space.MemberList"];
  var Incentknow_Pages_Space_Setting = $PS["Incentknow.Pages.Space.Setting"];
  var Incentknow_Pages_Space_Utils = $PS["Incentknow.Pages.Space.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangeTab = (function () {
      function ChangeTab(value0) {
          this.value0 = value0;
      };
      ChangeTab.create = function (value0) {
          return new ChangeTab(value0);
      };
      return ChangeTab;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var Delete = (function () {
      function Delete() {

      };
      Delete.value = new Delete();
      return Delete;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Page.tabPage(Incentknow_Route.eqSpaceTab)({
                      tabs: [ Incentknow_Route.SpaceHome.value, Incentknow_Route.SpaceContainers.value, Incentknow_Route.SpaceMembers.value, Incentknow_Route.SpaceSetting.value ],
                      currentTab: state.tab,
                      onChangeTab: ChangeTab.create,
                      isTabAlphabet: true,
                      showTab: function (v) {
                          if (v instanceof Incentknow_Route.SpaceHome) {
                              return [ Halogen_HTML_Core.text("Home") ];
                          };
                          if (v instanceof Incentknow_Route.SpaceContainers) {
                              return [ Halogen_HTML_Core.text("Containers"), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text("(" + (Data_Show.show(Data_Show.showInt)(state.space.containerCount) + ")")) ]) ];
                          };
                          if (v instanceof Incentknow_Route.SpaceMembers) {
                              return [ Halogen_HTML_Core.text("Members"), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text("(" + (Data_Show.show(Data_Show.showInt)(state.space.memberCount) + ")")) ]) ];
                          };
                          if (v instanceof Incentknow_Route.SpaceSetting) {
                              return [ Halogen_HTML_Core.text("Setting") ];
                          };
                          return [  ];
                      }
                  })([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-space-header page-space-header-info"), Halogen_HTML_Events.onDoubleClick(function (v) {
                      return Data_Maybe.Just.create(Navigate.create(new Incentknow_Route.ContainerList(state.space.displayId)));
                  }) ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("backward") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getFullsizeHeaderImageUrl(state.space.headerImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("forward") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(state.space.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("description") ])([ Halogen_HTML_Core.text(state.space.description) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Incentknow_Pages_Space_Utils.renderMode(true)(state.space.displayId)(NavigateRoute.create), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("attributes") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("created") ])([ Incentknow_HTML_DateTime.elapsedTime(state.space.createdAt), Halogen_HTML_Core.text("\u306b\u4f5c\u6210") ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("scope") ])([ Incentknow_Atoms_Icon.spaceScopeIcon(state.space) ]) ]) ]) ]) ]) ])([ (function () {
                      if (state.tab instanceof Incentknow_Route.SpaceHome) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "home";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_Home.component(dictBehaviour)(dictMonadAff)(dictMonadAff))({
                              spaceId: state.space.spaceId,
                              spaceDisplayId: state.space.displayId
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.SpaceContainers) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "formats";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_FormatList.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                              spaceId: state.space.spaceId,
                              spaceDisplayId: state.space.displayId,
                              formatTab: Data_Maybe.Nothing.value
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.SpaceFormat) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "formats";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_FormatList.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                              spaceId: state.space.spaceId,
                              spaceDisplayId: state.space.displayId,
                              formatTab: new Data_Maybe.Just(new Data_Tuple.Tuple(state.tab.value0, state.tab.value1))
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.SpaceMembers) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "members";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_MemberList.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({
                              spaceId: state.space.spaceId,
                              isAdmin: true
                          })(Data_Void.absurd);
                      };
                      if (state.tab instanceof Incentknow_Route.SpaceCrawlers) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (state.tab instanceof Incentknow_Route.SpaceSetting) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "setting";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_Setting.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              space: state.space,
                              disabled: !true
                          })(Data_Void.absurd);
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.Space.SpaceInfo (line 139, column 7 - line 158, column 137): " + [ state.tab.constructor.name ]);
                  })() ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          space: input.space,
          tab: input.tab
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $23 = Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceId)(state.space.spaceId)(v.value0.space.spaceId);
                          if ($23) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $24 = {};
                              for (var $25 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $25)) {
                                      $24[$25] = v1[$25];
                                  };
                              };
                              $24.tab = v.value0.tab;
                              return $24;
                          });
                      });
                  };
                  if (v instanceof ChangeTab) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.Space(state.space.displayId, v.value0));
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof NavigateRoute) {
                      return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                  };
                  if (v instanceof Delete) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space.SpaceInfo (line 172, column 16 - line 189, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($32) {
                          return Data_Maybe.Just.create(HandleInput.create($32));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Space"] = $PS["Incentknow.Pages.Space"] || {};
  var exports = $PS["Incentknow.Pages.Space"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Pages_Space_SpaceContainers = $PS["Incentknow.Pages.Space.SpaceContainers"];
  var Incentknow_Pages_Space_SpaceInfo = $PS["Incentknow.Pages.Space.SpaceInfo"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var FetchedSpace = (function () {
      function FetchedSpace(value0) {
          this.value0 = value0;
      };
      FetchedSpace.create = function (value0) {
          return new FetchedSpace(value0);
      };
      return FetchedSpace;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Atoms_Icon.remoteWith(state.space)(function (space) {
                      return Incentknow_Templates_Main.centerLayout({
                          css: "",
                          leftSide: [  ],
                          rightSide: [  ]
                      })([ (function () {
                          if (state.tab instanceof Data_Either.Left) {
                              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                                  return "spaceInfo";
                              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_SpaceInfo.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                                  space: space,
                                  tab: state.tab.value0
                              })(Data_Void.absurd);
                          };
                          if (state.tab instanceof Data_Either.Right) {
                              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                                  return "spaceContainers";
                              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space_SpaceContainers.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                                  space: space,
                                  formatId: state.tab.value0
                              })(Data_Void.absurd);
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.Space (line 70, column 9 - line 72, column 131): " + [ state.tab.constructor.name ]);
                      })() ]);
                  });
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          space: Incentknow_API_Execution.Loading.value,
          tab: input.tab
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedSpace.create)(Incentknow_API.getSpace(state.spaceId));
                      });
                  };
                  if (v instanceof FetchedSpace) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (space) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $17 = {};
                              for (var $18 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $18)) {
                                      $17[$18] = v1[$18];
                                  };
                              };
                              $17.space = space;
                              return $17;
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $21 = Data_Eq.notEq(Incentknow_Data_Ids.eqSpaceDisplayId)(state.spaceId)(v.value0.spaceId);
                          if ($21) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $22 = {};
                              for (var $23 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $23)) {
                                      $22[$23] = v1[$23];
                                  };
                              };
                              $22.tab = v.value0.tab;
                              return $22;
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Space (line 76, column 16 - line 89, column 38): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($26) {
                          return Data_Maybe.Just.create(HandleInput.create($26));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Home"] = $PS["Incentknow.Pages.Home"] || {};
  var exports = $PS["Incentknow.Pages.Home"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_SpaceCardView = $PS["Incentknow.Organisms.SpaceCardView"];
  var Incentknow_Pages_Content = $PS["Incentknow.Pages.Content"];
  var Incentknow_Pages_Space = $PS["Incentknow.Pages.Space"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var FetchedPublishedSpaces = (function () {
      function FetchedPublishedSpaces(value0) {
          this.value0 = value0;
      };
      FetchedPublishedSpaces.create = function (value0) {
          return new FetchedPublishedSpaces(value0);
      };
      return FetchedPublishedSpaces;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-home") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("logo") ])([ Halogen_HTML_Core.text("Incentknow") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text("\u60c5\u5831\u3092\u6574\u7406\u3057\u5171\u6709\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("part") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Core.text("\u3061\u3089\u3070\u3063\u305f\u60c5\u5831\u3092\u4e00\u7b87\u6240\u306b\u6574\u7406") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text("\u3082\u3046\u3069\u3053\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u3042\u308b\u306e\u304b\u63a2\u3059\u5fc5\u8981\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u4e00\u7b87\u6240\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3069\u308c\u304c\u672c\u5f53\u306e\u60c5\u5831\u304b\u3092\u78ba\u304b\u3081\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u305b\u3093\u3002") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("example") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "space";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                  spaceId: Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId)("930774711778059"),
                  tab: new Data_Either.Right(Data_Maybe.Just.create(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeFormatDisplayId)("135605421976660")))
              })(Data_Void.absurd) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("part") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Core.text("\u81ea\u5728\u306b\u60c5\u5831\u3092\u95a2\u9023\u3065\u3051\u308b") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text("\u3069\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u60c5\u5831\u3067\u3082\u6574\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u60c5\u5831\u540c\u58eb\u3092\u7d10\u4ed8\u3051\u3001\u3059\u3050\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("example") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "content";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Content.component(dictBehaviour)(dictMonadAff))({
                  contentSpec: Incentknow_Route.ContentSpecContentId.create(Data_Newtype.wrap(Incentknow_Data_Ids.newtypeContentId)("vME9fV25gHek"))
              })(Data_Void.absurd) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("part") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("header") ])([ Halogen_HTML_Core.text("\u30c1\u30fc\u30e0\u3067\u6574\u7406\u3057\u3001\u516c\u958b\u3067\u304d\u308b") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text("\u305f\u304f\u3055\u3093\u306e\u6574\u7406\u3055\u308c\u305f\u60c5\u5831\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("example") ])([ Incentknow_Atoms_Icon.remoteWith(state.publishedSpaces)(function (spaces) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "cardview";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SpaceCardView.component(dictBehaviour.MonadEffect0())(dictBehaviour))({
                      value: spaces
                  })(Data_Void.absurd);
              }) ]) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          publishedSpaces: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function ($copy_dictBehaviour) {
      return function ($copy_dictMonadAff) {
          return function ($copy_v) {
              var $tco_var_dictBehaviour = $copy_dictBehaviour;
              var $tco_var_dictMonadAff = $copy_dictMonadAff;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictBehaviour, dictMonadAff, v) {
                  if (v instanceof Initialize) {
                      $tco_done = true;
                      return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedPublishedSpaces.create)(Incentknow_API.getPublishedSpaces(Data_Unit.unit));
                  };
                  if (v instanceof HandleInput) {
                      $tco_var_dictBehaviour = dictBehaviour;
                      $tco_var_dictMonadAff = dictMonadAff;
                      $copy_v = Initialize.value;
                      return;
                  };
                  if (v instanceof FetchedPublishedSpaces) {
                      $tco_done = true;
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (spaces) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $11 = {};
                              for (var $12 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $12)) {
                                      $11[$12] = v1[$12];
                                  };
                              };
                              $11.publishedSpaces = spaces;
                              return $11;
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Home (line 97, column 16 - line 103, column 47): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictBehaviour, $tco_var_dictMonadAff, $copy_v);
              };
              return $tco_result;
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($15) {
                      return Data_Maybe.Just.create(HandleInput.create($15));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.JoinSpace"] = $PS["Incentknow.Pages.JoinSpace"] || {};
  var exports = $PS["Incentknow.Pages.JoinSpace"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var FetchedSpace = (function () {
      function FetchedSpace(value0) {
          this.value0 = value0;
      };
      FetchedSpace.create = function (value0) {
          return new FetchedSpace(value0);
      };
      return FetchedSpace;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Page.section("page-community-join")([ Halogen_HTML_Core.text(""), Incentknow_Atoms_Inputs.submitButton({
                      isDisabled: false,
                      isLoading: false,
                      loadingText: "",
                      text: "\u30b9\u30da\u30fc\u30b9\u3078\u306e\u52a0\u5165\u3092\u7533\u8acb\u3059\u308b",
                      onClick: Submit.value
                  }) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          space: Incentknow_API_Execution.Loading.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v instanceof FetchedSpace) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (space) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $13 = {};
                              for (var $14 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $14)) {
                                      $13[$14] = v1[$14];
                                  };
                              };
                              $13.space = space;
                              return $13;
                          });
                      });
                  };
                  if (v instanceof Submit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.applySpaceMembership(state.spaceId)))(function (response) {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.JoinSpace (line 60, column 16 - line 71, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Form"] = $PS["Incentknow.Molecules.Form"] || {};
  var exports = $PS["Incentknow.Molecules.Form"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];                
  var define = function (label) {
      return function (inner) {
          return Halogen_HTML_Elements.dl([  ])([ Halogen_HTML_Elements.dt([  ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text(label) ]) ]), Halogen_HTML_Elements.dd([  ])(inner) ]);
      };
  };
  var defineText = function (input) {
      return define(input.label)([ Incentknow_Atoms_Inputs.textarea({
          placeholder: "",
          value: input.value,
          onChange: input.onChange
      }) ]);
  };
  exports["define"] = define;
  exports["defineText"] = defineText;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.FormatUsageMenu"] = $PS["Incentknow.Molecules.FormatUsageMenu"] || {};
  var exports = $PS["Incentknow.Molecules.FormatUsageMenu"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_SelectMenu = $PS["Incentknow.Molecules.SelectMenu"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Change = (function () {
      function Change(value0) {
          this.value0 = value0;
      };
      Change.create = function (value0) {
          return new Change(value0);
      };
      return Change;
  })();
  var usages = [ {
      id: Incentknow_Data_Entities.Internal.value,
      name: "Internal",
      desc: "\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3002\u30b9\u30da\u30fc\u30b9\u5185\u90e8\u3067\u306e\u307f\u4f7f\u7528\u3067\u304d\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002"
  }, {
      id: Incentknow_Data_Entities.External.value,
      name: "External",
      desc: "\u30b9\u30da\u30fc\u30b9\u5916\u90e8\u3067\u306e\u307f\u4f7f\u7528\u3067\u304d\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002"
  } ];
  var toSelectMenuItem = function (format) {
      var html = Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(format.name) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("desc") ])([ Halogen_HTML_Core.text(format.desc) ]) ]);
      return {
          id: format.id,
          name: format.name,
          searchWord: format.name,
          html: html
      };
  };
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Halogen_HTML_Elements.div_([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "selectMenu";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_SelectMenu.component(Incentknow_Data_Entities.ordFormatUsage)(Incentknow_Data_Entities.eqFormatUsage)(dictBehaviour)(dictMonadAff))({
                  value: state.generator,
                  disabled: state.disabled,
                  fetchMultiple: function (v) {
                      return Data_Maybe.Nothing.value;
                  },
                  fetchSingle: Data_Maybe.Nothing.value,
                  fetchId: "",
                  initial: {
                      items: Data_Functor.map(Data_Functor.functorArray)(toSelectMenuItem)(usages),
                      completed: true
                  },
                  visibleCrossmark: false
              })(function ($15) {
                  return Data_Maybe.Just.create(Change.create($15));
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          generator: input.value,
          disabled: input.disabled
      };
  };
  var handleAction = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Initialize) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
          if (v instanceof HandleInput) {
              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.isJust(v.value0.value))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)));
          };
          if (v instanceof Change) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $11 = {};
                  for (var $12 in v1) {
                      if ({}.hasOwnProperty.call(v1, $12)) {
                          $11[$12] = v1[$12];
                      };
                  };
                  $11.generator = v.value0;
                  return $11;
              }))(function () {
                  return Halogen_Query_HalogenM.raise(v.value0);
              });
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.FormatUsageMenu (line 105, column 16 - line 110, column 22): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour.MonadEffect0()),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($16) {
                      return Data_Maybe.Just.create(HandleInput.create($16));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.NewFormat"] = $PS["Incentknow.Pages.NewFormat"] || {};
  var exports = $PS["Incentknow.Pages.NewFormat"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Molecules_Form = $PS["Incentknow.Molecules.Form"];
  var Incentknow_Molecules_FormatUsageMenu = $PS["Incentknow.Molecules.FormatUsageMenu"];
  var Incentknow_Organisms_Structure = $PS["Incentknow.Organisms.Structure"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var ChangeDisplayName = (function () {
      function ChangeDisplayName(value0) {
          this.value0 = value0;
      };
      ChangeDisplayName.create = function (value0) {
          return new ChangeDisplayName(value0);
      };
      return ChangeDisplayName;
  })();
  var ChangeDisplayId = (function () {
      function ChangeDisplayId(value0) {
          this.value0 = value0;
      };
      ChangeDisplayId.create = function (value0) {
          return new ChangeDisplayId(value0);
      };
      return ChangeDisplayId;
  })();
  var ChangeDescription = (function () {
      function ChangeDescription(value0) {
          this.value0 = value0;
      };
      ChangeDescription.create = function (value0) {
          return new ChangeDescription(value0);
      };
      return ChangeDescription;
  })();
  var ChangeUsage = (function () {
      function ChangeUsage(value0) {
          this.value0 = value0;
      };
      ChangeUsage.create = function (value0) {
          return new ChangeUsage(value0);
      };
      return ChangeUsage;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var usage_ = Data_Symbol.SProxy.value;
  var structure_ = Data_Symbol.SProxy.value;
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Main.centerLayout({
                      css: "",
                      leftSide: [  ],
                      rightSide: [  ]
                  })([ Incentknow_Templates_Page.creationPage({
                      title: "\u65b0\u3057\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b",
                      desc: "\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u5f62\u5f0f\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30da\u30fc\u30b8\u306e\u5f62\u5f0f\u3084\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u4ed6\u306e\u5a92\u4f53\u304b\u3089\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u306b\u3064\u3044\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002"
                  })([ Incentknow_Molecules_Form.defineText({
                      label: "\u540d\u524d",
                      value: state.displayName,
                      onChange: ChangeDisplayName.create
                  }), Incentknow_Molecules_Form.defineText({
                      label: "\u8aac\u660e",
                      value: state.description,
                      onChange: ChangeDescription.create
                  }), Incentknow_Molecules_Form.define("\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4f7f\u7528\u7528\u9014")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "usage";
                  }))(Data_Ord.ordUnit)(usage_)(Data_Unit.unit)(Incentknow_Molecules_FormatUsageMenu.component(dictBehaviour)(dictMonadAff))({
                      value: state.usage,
                      disabled: false
                  })(function ($42) {
                      return Data_Maybe.Just.create(ChangeUsage.create($42));
                  }) ]), Incentknow_Molecules_Form.define("\u30c6\u30fc\u30bf\u5b9a\u7fa9")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "structure";
                  }))(Data_Ord.ordUnit)(structure_)(Data_Unit.unit)(Incentknow_Organisms_Structure.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      readonly: false,
                      spaceId: state.spaceId
                  })(Data_Void.absurd) ]), Halogen_HTML_Elements.div([  ])([ Incentknow_Atoms_Inputs.submitButton({
                      isDisabled: state.loading,
                      isLoading: state.loading,
                      loadingText: "",
                      text: "\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4f5c\u6210",
                      onClick: Submit.value
                  }) ]) ]) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          spaceId: input.spaceId,
          displayName: "",
          displayId: "",
          description: "",
          usage: new Data_Maybe.Just(Incentknow_Data_Entities.Internal.value),
          props: [  ],
          loading: false
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof ChangeDisplayName) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $16 = {};
                      for (var $17 in v1) {
                          if ({}.hasOwnProperty.call(v1, $17)) {
                              $16[$17] = v1[$17];
                          };
                      };
                      $16.displayName = v.value0;
                      return $16;
                  });
              };
              if (v instanceof ChangeDisplayId) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $20 = {};
                      for (var $21 in v1) {
                          if ({}.hasOwnProperty.call(v1, $21)) {
                              $20[$21] = v1[$21];
                          };
                      };
                      $20.displayId = v.value0;
                      return $20;
                  });
              };
              if (v instanceof ChangeDescription) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $24 = {};
                      for (var $25 in v1) {
                          if ({}.hasOwnProperty.call(v1, $25)) {
                              $24[$25] = v1[$25];
                          };
                      };
                      $24.description = v.value0;
                      return $24;
                  });
              };
              if (v instanceof ChangeUsage) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $28 = {};
                      for (var $29 in v1) {
                          if ({}.hasOwnProperty.call(v1, $29)) {
                              $28[$29] = v1[$29];
                          };
                      };
                      $28.usage = v.value0;
                      return $28;
                  });
              };
              if (v instanceof Submit) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "structure";
                      }))(Data_Ord.ordUnit)(structure_)(Data_Unit.unit)(Halogen_Query.request(Incentknow_Organisms_Structure.GetValue.create)))(function (struct) {
                          if (struct instanceof Data_Maybe.Just && state.usage instanceof Data_Maybe.Just) {
                              var newFormat = {
                                  displayName: state.displayName,
                                  description: state.description,
                                  properties: struct.value0,
                                  spaceId: state.spaceId,
                                  usage: state.usage.value0
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $34 = {};
                                  for (var $35 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $35)) {
                                          $34[$35] = v1[$35];
                                      };
                                  };
                                  $34.loading = true;
                                  return $34;
                              }))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createFormat(newFormat)))(function (response) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(response)(function (displayId) {
                                          return Incentknow_AppM.message(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_AppM.Success("\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4f5c\u6210\u306b\u6210\u529f\u3057\u307e\u3057\u305f"));
                                      }))(function () {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                              var $37 = {};
                                              for (var $38 in v1) {
                                                  if ({}.hasOwnProperty.call(v1, $38)) {
                                                      $37[$38] = v1[$38];
                                                  };
                                              };
                                              $37.loading = false;
                                              return $37;
                                          });
                                      });
                                  });
                              });
                          };
                          if (struct instanceof Data_Maybe.Nothing) {
                              return Incentknow_AppM.message(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_AppM["Error"]("\u30c7\u30fc\u30bf\u5b9a\u7fa9\u306e\u5165\u529b\u304c\u7d42\u308f\u3063\u3066\u3044\u307e\u305b\u3093"));
                          };
                          if (state.usage instanceof Data_Maybe.Nothing) {
                              return Incentknow_AppM.message(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_AppM["Error"]("\u4f7f\u7528\u7528\u9014\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044"));
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.NewFormat (line 109, column 5 - line 127, column 52): " + [ struct.constructor.name, state.usage.constructor.name ]);
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Pages.NewFormat (line 101, column 16 - line 127, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.NewSpace"] = $PS["Incentknow.Pages.NewSpace"] || {};
  var exports = $PS["Incentknow.Pages.NewSpace"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_Data_Utils = $PS["Incentknow.Data.Utils"];
  var Incentknow_Molecules_DisplayId = $PS["Incentknow.Molecules.DisplayId"];
  var Incentknow_Molecules_Form = $PS["Incentknow.Molecules.Form"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var ChangeDisplayName = (function () {
      function ChangeDisplayName(value0) {
          this.value0 = value0;
      };
      ChangeDisplayName.create = function (value0) {
          return new ChangeDisplayName(value0);
      };
      return ChangeDisplayName;
  })();
  var ChangeDisplayId = (function () {
      function ChangeDisplayId(value0) {
          this.value0 = value0;
      };
      ChangeDisplayId.create = function (value0) {
          return new ChangeDisplayId(value0);
      };
      return ChangeDisplayId;
  })();
  var ChangeDescription = (function () {
      function ChangeDescription(value0) {
          this.value0 = value0;
      };
      ChangeDescription.create = function (value0) {
          return new ChangeDescription(value0);
      };
      return ChangeDescription;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Templates_Main.centerLayout({
                      css: "",
                      leftSide: [  ],
                      rightSide: [  ]
                  })([ Incentknow_Templates_Page.creationPage({
                      title: "\u65b0\u3057\u3044\u30b9\u30da\u30fc\u30b9\u3092\u4f5c\u6210",
                      desc: "\u30b9\u30da\u30fc\u30b9\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30b9\u30da\u30fc\u30b9\u3067\u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u95b2\u89a7\u304a\u3088\u3073\u7de8\u96c6\u306e\u6a29\u9650\u3092\u7ba1\u7406\u3059\u308b\u30e1\u30f3\u30d0\u30fc\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002"
                  })([ Incentknow_Molecules_Form.defineText({
                      label: "\u8868\u793a\u540d",
                      value: state.displayName,
                      onChange: ChangeDisplayName.create
                  }), Incentknow_Molecules_Form.define("ID")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "displayId";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Molecules_DisplayId.component(dictMonadAff))({
                      checkId: (function () {
                          var $39 = Data_Newtype.wrap(Incentknow_Data_Ids.newtypeSpaceDisplayId);
                          return function ($40) {
                              return Incentknow_API_Execution.callQuery(Incentknow_API.getAvailableSpaceDisplayId($39($40)));
                          };
                      })(),
                      disabled: false,
                      value: state.displayId
                  })(function ($41) {
                      return Data_Maybe.Just.create(ChangeDisplayId.create($41));
                  }) ]), Incentknow_Molecules_Form.defineText({
                      label: "\u8aac\u660e",
                      value: state.description,
                      onChange: ChangeDescription.create
                  }), Incentknow_Atoms_Inputs.submitButton({
                      isDisabled: state.loading || (Data_Eq.notEq(Incentknow_Molecules_DisplayId.eqCheckState)(state.displayId.checkState)(Incentknow_Molecules_DisplayId.Available.value) || Data_String_CodePoints.length(state.displayName) === 0),
                      isLoading: state.loading,
                      loadingText: "",
                      text: "\u30b9\u30da\u30fc\u30b9\u3092\u4f5c\u6210",
                      onClick: Submit.value
                  }) ]) ]);
              };
          };
      };
  };                                         
  var initialState = function (input) {
      return {
          displayName: "",
          displayId: {
              displayId: "",
              checkState: Incentknow_Molecules_DisplayId.Typing.value
          },
          description: "",
          loading: false
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_Data_Utils.generateId(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(12))(function (displayId) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $18 = {};
                              for (var $19 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $19)) {
                                      $18[$19] = v1[$19];
                                  };
                              };
                              $18.displayId = {
                                  displayId: displayId,
                                  checkState: Incentknow_Molecules_DisplayId.Available.value
                              };
                              return $18;
                          });
                      });
                  };
                  if (v instanceof ChangeDisplayName) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $21 = {};
                          for (var $22 in v1) {
                              if ({}.hasOwnProperty.call(v1, $22)) {
                                  $21[$22] = v1[$22];
                              };
                          };
                          $21.displayName = v.value0;
                          return $21;
                      });
                  };
                  if (v instanceof ChangeDisplayId) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $25 = {};
                          for (var $26 in v1) {
                              if ({}.hasOwnProperty.call(v1, $26)) {
                                  $25[$26] = v1[$26];
                              };
                          };
                          $25.displayId = v.value0;
                          return $25;
                      });
                  };
                  if (v instanceof ChangeDescription) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $29 = {};
                          for (var $30 in v1) {
                              if ({}.hasOwnProperty.call(v1, $30)) {
                                  $29[$30] = v1[$30];
                              };
                          };
                          $29.description = v.value0;
                          return $29;
                      });
                  };
                  if (v instanceof Submit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $33 = {};
                          for (var $34 in v1) {
                              if ({}.hasOwnProperty.call(v1, $34)) {
                                  $33[$34] = v1[$34];
                              };
                          };
                          $33.loading = true;
                          return $33;
                      }))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createSpace({
                              displayId: state.displayId.displayId,
                              displayName: state.displayName,
                              description: state.description
                          })))(function (response) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(response)(function (displayId) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.Space(displayId, Incentknow_Route.SpaceHome.value)))(function () {
                                      return Incentknow_AppM.message(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_AppM.Success("\u30b9\u30da\u30fc\u30b9\u306e\u4f5c\u6210\u306b\u6210\u529f\u3057\u307e\u3057\u305f"));
                                  });
                              }))(function () {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $36 = {};
                                      for (var $37 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $37)) {
                                              $36[$37] = v1[$37];
                                          };
                                      };
                                      $36.loading = false;
                                      return $36;
                                  });
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.NewSpace (line 94, column 16 - line 114, column 36): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Notifications"] = $PS["Incentknow.Pages.Notifications"] || {};
  var exports = $PS["Incentknow.Pages.Notifications"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_Data_Content = $PS["Incentknow.Data.Content"];
  var Incentknow_Data_Entities = $PS["Incentknow.Data.Entities"];
  var Incentknow_Data_EntityUtils = $PS["Incentknow.Data.EntityUtils"];
  var Incentknow_HTML_DateTime = $PS["Incentknow.HTML.DateTime"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var All = (function () {
      function All() {

      };
      All.value = new All();
      return All;
  })();
  var Comments = (function () {
      function Comments() {

      };
      Comments.value = new Comments();
      return Comments;
  })();
  var Replies = (function () {
      function Replies() {

      };
      Replies.value = new Replies();
      return Replies;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var FetchedNotifications = (function () {
      function FetchedNotifications(value0) {
          this.value0 = value0;
      };
      FetchedNotifications.create = function (value0) {
          return new FetchedNotifications(value0);
      };
      return FetchedNotifications;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var NavigateRoute = (function () {
      function NavigateRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NavigateRoute.create = function (value0) {
          return function (value1) {
              return new NavigateRoute(value0, value1);
          };
      };
      return NavigateRoute;
  })();
  var ChangeTab = (function () {
      function ChangeTab(value0) {
          this.value0 = value0;
      };
      ChangeTab.create = function (value0) {
          return new ChangeTab(value0);
      };
      return ChangeTab;
  })();
  var initialState = function (input) {
      return {
          notifications: Incentknow_API_Execution.Loading.value,
          tab: All.value
      };
  };
  var handleAction = function ($copy_dictBehaviour) {
      return function ($copy_dictMonadAff) {
          return function ($copy_dictMonadEffect) {
              return function ($copy_v) {
                  var $tco_var_dictBehaviour = $copy_dictBehaviour;
                  var $tco_var_dictMonadAff = $copy_dictMonadAff;
                  var $tco_var_dictMonadEffect = $copy_dictMonadEffect;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictBehaviour, dictMonadAff, dictMonadEffect, v) {
                      if (v instanceof Initialize) {
                          $tco_done = true;
                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedNotifications.create)(Incentknow_API.getNotifications(Data_Unit.unit));
                      };
                      if (v instanceof HandleInput) {
                          $tco_var_dictBehaviour = dictBehaviour;
                          $tco_var_dictMonadAff = dictMonadAff;
                          $tco_var_dictMonadEffect = dictBehaviour.MonadEffect0();
                          $copy_v = Initialize.value;
                          return;
                      };
                      if (v instanceof FetchedNotifications) {
                          $tco_done = true;
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (notifications) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $20 = {};
                                  for (var $21 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $21)) {
                                          $20[$21] = v1[$21];
                                      };
                                  };
                                  $20.notifications = notifications;
                                  return $20;
                              });
                          }))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.readAllNotifications(Data_Unit.unit)))(function () {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                              });
                          });
                      };
                      if (v instanceof Navigate) {
                          $tco_done = true;
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                      };
                      if (v instanceof NavigateRoute) {
                          $tco_done = true;
                          return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
                      };
                      if (v instanceof ChangeTab) {
                          $tco_done = true;
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $27 = {};
                              for (var $28 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $28)) {
                                      $27[$28] = v1[$28];
                                  };
                              };
                              $27.tab = v.value0;
                              return $27;
                          });
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.Notifications (line 158, column 16 - line 169, column 45): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictBehaviour, $tco_var_dictMonadAff, $tco_var_dictMonadEffect, $copy_v);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var eqTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof All && y instanceof All) {
              return true;
          };
          if (x instanceof Comments && y instanceof Comments) {
              return true;
          };
          if (x instanceof Replies && y instanceof Replies) {
              return true;
          };
          return false;
      };
  });
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  var renderContentTitle = function (content) {
                      return Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.Content(content.contentId))([ Incentknow_HTML_Utils.css("content") ])([ Halogen_HTML_Core.text((Incentknow_Data_Content.getContentSemanticData(content.data)(content.format)).title) ]);
                  };
                  var renderComment = function (comment) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("comment") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("usericon") ])([ Incentknow_Atoms_Icon.userIcon(comment.user.iconImage) ]), Incentknow_Atoms_Message.commentBox("comment-body")([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ Incentknow_HTML_Utils.link(NavigateRoute.create)(new Incentknow_Route.User(comment.user.displayId, Incentknow_Route.UserMain.value))([ Incentknow_HTML_Utils.css("username") ])([ Halogen_HTML_Core.text(comment.user.displayName) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("time") ])((function () {
                          var $33 = comment.createdAt === comment.updatedAt;
                          if ($33) {
                              return [ Incentknow_HTML_DateTime.elapsedTime(comment.createdAt) ];
                          };
                          return [ Incentknow_HTML_DateTime.elapsedTime(comment.updatedAt), Halogen_HTML_Core.text("\u306b\u7de8\u96c6") ];
                      })()) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Core.text(comment.text) ]) ]) ]);
                  };
                  var renderNotification = function (notification) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("notification" + (function () {
                          if (notification.isRead) {
                              return "";
                          };
                          return " not-read";
                      })()) ])((function () {
                          if (notification.action instanceof Incentknow_Data_Entities.ContentCommentedNotificationAction) {
                              return [ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ renderContentTitle(notification.action.value0), Halogen_HTML_Core.text("\u306b\u30b3\u30e1\u30f3\u30c8\u304c\u3064\u304d\u307e\u3057\u305f") ]), renderComment(notification.action.value1) ];
                          };
                          if (notification.action instanceof Incentknow_Data_Entities.CommentRepliedNotificationAction) {
                              return [ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("top") ])([ renderContentTitle(notification.action.value0), Halogen_HTML_Core.text("\u3067\u30b3\u30e1\u30f3\u30c8\u306b\u8fd4\u4fe1\u304c\u304d\u307e\u3057\u305f") ]), renderComment(notification.action.value1) ];
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.Notifications (line 112, column 9 - line 126, column 14): " + [ notification.action.constructor.name ]);
                      })());
                  };
                  var renderNotifications = function (remote) {
                      return Incentknow_Atoms_Icon.remoteArrayWith(remote)(function (notifications) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("notifications") ])(Data_Functor.map(Data_Functor.functorArray)(renderNotification)(notifications));
                      });
                  };
                  var notificationReplies = Data_Functor.map(Incentknow_API_Execution.functorRemote)(Data_Array.filter(function (x) {
                      return Data_Eq.eq(Incentknow_Data_Entities.eqNotificationType)(Incentknow_Data_EntityUtils.getNotificationType(x.action))(Incentknow_Data_Entities.NotificationTypeCommentReplied.value);
                  }))(state.notifications);
                  var notificationComments = Data_Functor.map(Incentknow_API_Execution.functorRemote)(Data_Array.filter(function (x) {
                      return Data_Eq.eq(Incentknow_Data_Entities.eqNotificationType)(Incentknow_Data_EntityUtils.getNotificationType(x.action))(Incentknow_Data_Entities.NotificationTypeContentCommented.value);
                  }))(state.notifications);
                  var notReadCount = function (x) {
                      return Data_Array.length(Data_Array.filter((function () {
                          var $42 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                          return function ($43) {
                              return $42((function (v) {
                                  return v.isRead;
                              })($43));
                          };
                      })())(x));
                  };
                  var countElement = function (remote) {
                      return Incentknow_HTML_Utils.maybeElem(Incentknow_API_Execution.toMaybe(remote))(function (x) {
                          return Incentknow_HTML_Utils.whenElem(x > 0)(function (v) {
                              return Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text("(" + (Data_Show.show(Data_Show.showInt)(x) + ")")) ]);
                          });
                      });
                  };
                  return Incentknow_Templates_Main.centerLayout({
                      css: "",
                      leftSide: [  ],
                      rightSide: [  ]
                  })([ Incentknow_Templates_Page.verticalTabPage(eqTab)("page-notifications")({
                      tabs: [ All.value, Comments.value, Replies.value ],
                      currentTab: state.tab,
                      onChangeTab: ChangeTab.create,
                      showTab: function (v) {
                          if (v instanceof All) {
                              return [ Halogen_HTML_Core.text("All"), countElement(Data_Functor.map(Incentknow_API_Execution.functorRemote)(notReadCount)(state.notifications)) ];
                          };
                          if (v instanceof Comments) {
                              return [ Halogen_HTML_Core.text("Comments"), countElement(Data_Functor.map(Incentknow_API_Execution.functorRemote)(notReadCount)(notificationComments)) ];
                          };
                          if (v instanceof Replies) {
                              return [ Halogen_HTML_Core.text("Replies"), countElement(Data_Functor.map(Incentknow_API_Execution.functorRemote)(notReadCount)(notificationReplies)) ];
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.Notifications (line 78, column 13 - line 81, column 100): " + [ v.constructor.name ]);
                      }
                  })([ Incentknow_Atoms_Icon.iconSolid("bell"), Halogen_HTML_Core.text("Notifications") ])([ renderNotifications((function () {
                      if (state.tab instanceof All) {
                          return state.notifications;
                      };
                      if (state.tab instanceof Comments) {
                          return notificationComments;
                      };
                      if (state.tab instanceof Replies) {
                          return notificationReplies;
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.Notifications (line 87, column 13 - line 90, column 45): " + [ state.tab.constructor.name ]);
                  })()) ]) ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($44) {
                          return Data_Maybe.Just.create(HandleInput.create($44));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.SpaceList"] = $PS["Incentknow.Pages.SpaceList"] || {};
  var exports = $PS["Incentknow.Pages.SpaceList"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_SpaceCardView = $PS["Incentknow.Organisms.SpaceCardView"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var FetchedPublishedSpaces = (function () {
      function FetchedPublishedSpaces(value0) {
          this.value0 = value0;
      };
      FetchedPublishedSpaces.create = function (value0) {
          return new FetchedPublishedSpaces(value0);
      };
      return FetchedPublishedSpaces;
  })();
  var FetchedFollowedSpaces = (function () {
      function FetchedFollowedSpaces(value0) {
          this.value0 = value0;
      };
      FetchedFollowedSpaces.create = function (value0) {
          return new FetchedFollowedSpaces(value0);
      };
      return FetchedFollowedSpaces;
  })();
  var render = function (dictMonadEffect) {
      return function (dictBehaviour) {
          return function (state) {
              return Incentknow_Templates_Main.centerLayout({
                  css: "page-spaces",
                  leftSide: [  ],
                  rightSide: [  ]
              })([ Incentknow_HTML_Utils.maybeElem(state.account)(function (v) {
                  return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-spaces-part") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("caption") ])([ Halogen_HTML_Core.text("My spaces"), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text(Data_Maybe.maybe("")(function (x) {
                      return " (" + (Data_Show.show(Data_Show.showInt)(Data_Array.length(x)) + ")");
                  })(Incentknow_API_Execution.toMaybe(state.followedSpaces))) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("creation") ])([ Incentknow_Atoms_Inputs.menuPositiveButton("\u30b9\u30da\u30fc\u30b9\u3092\u4f5c\u6210")(new Navigate(Incentknow_Route.NewSpace.value)) ]) ]), Incentknow_Atoms_Icon.remoteWith(state.followedSpaces)(function (spaces) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "cardview";
                      }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SpaceCardView.component(dictBehaviour.MonadEffect0())(dictBehaviour))({
                          value: spaces
                      })(Data_Void.absurd);
                  }) ]);
              }), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-spaces-part") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("caption") ])([ Halogen_HTML_Core.text("Public spaces"), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("count") ])([ Halogen_HTML_Core.text(Data_Maybe.maybe("")(function (x) {
                  return " (" + (Data_Show.show(Data_Show.showInt)(Data_Array.length(x)) + ")");
              })(Incentknow_API_Execution.toMaybe(state.publishedSpaces))) ]) ]), Incentknow_Atoms_Icon.remoteWith(state.publishedSpaces)(function (spaces) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "cardview2";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SpaceCardView.component(dictBehaviour.MonadEffect0())(dictBehaviour))({
                      value: spaces
                  })(Data_Void.absurd);
              }) ]) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          publishedSpaces: Incentknow_API_Execution.Loading.value,
          followedSpaces: Incentknow_API_Execution.Loading.value,
          account: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function ($copy_dictBehaviour) {
      return function ($copy_dictMonadEffect) {
          return function ($copy_dictMonadAff) {
              return function ($copy_v) {
                  var $tco_var_dictBehaviour = $copy_dictBehaviour;
                  var $tco_var_dictMonadEffect = $copy_dictMonadEffect;
                  var $tco_var_dictMonadAff = $copy_dictMonadAff;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictBehaviour, dictMonadEffect, dictMonadAff, v) {
                      if (v instanceof Initialize) {
                          $tco_done = true;
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.getAccount(Incentknow_AppM.behaviourHalogenM(dictBehaviour)))(function (account) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $16 = {};
                                  for (var $17 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $17)) {
                                          $16[$17] = v1[$17];
                                      };
                                  };
                                  $16.account = account;
                                  return $16;
                              }))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedPublishedSpaces.create)(Incentknow_API.getPublishedSpaces(Data_Unit.unit)))(function () {
                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(account)(function (v1) {
                                          return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedFollowedSpaces.create)(Incentknow_API.getMySpaces(Data_Unit.unit));
                                      });
                                  });
                              });
                          });
                      };
                      if (v instanceof HandleInput) {
                          $tco_var_dictBehaviour = dictBehaviour;
                          $tco_var_dictMonadEffect = dictBehaviour.MonadEffect0();
                          $tco_var_dictMonadAff = dictMonadAff;
                          $copy_v = Initialize.value;
                          return;
                      };
                      if (v instanceof FetchedPublishedSpaces) {
                          $tco_done = true;
                          return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (spaces) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $20 = {};
                                  for (var $21 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $21)) {
                                          $20[$21] = v1[$21];
                                      };
                                  };
                                  $20.publishedSpaces = spaces;
                                  return $20;
                              });
                          });
                      };
                      if (v instanceof FetchedFollowedSpaces) {
                          $tco_done = true;
                          return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (spaces) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $24 = {};
                                  for (var $25 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $25)) {
                                          $24[$25] = v1[$25];
                                      };
                                  };
                                  $24.followedSpaces = spaces;
                                  return $24;
                              });
                          });
                      };
                      if (v instanceof Navigate) {
                          $tco_done = true;
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.SpaceList (line 89, column 16 - line 104, column 35): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictBehaviour, $tco_var_dictMonadEffect, $tco_var_dictMonadAff, $copy_v);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour.MonadEffect0())(dictBehaviour),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($29) {
                          return Data_Maybe.Just.create(HandleInput.create($29));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Public"] = $PS["Incentknow.Pages.Public"] || {};
  var exports = $PS["Incentknow.Pages.Public"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Pages_SpaceList = $PS["Incentknow.Pages.SpaceList"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (state) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-public-space-list") ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "spaceList";
              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_SpaceList.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({})(Data_Void.absurd) ]);
          };
      };
  };
  var initialState = function (input) {
      return {};
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictMonadAff)(dictBehaviour),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.SearchAll"] = $PS["Incentknow.Pages.SearchAll"] || {};
  var exports = $PS["Incentknow.Pages.SearchAll"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Organisms_SearchView = $PS["Incentknow.Organisms.SearchView"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (state) {
              return Incentknow_Templates_Main.centerLayout({
                  css: "page-search-all",
                  leftSide: [  ],
                  rightSide: [  ]
              })([ Incentknow_HTML_Utils.maybeElem(state.query)(function (query) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "searchView";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_SearchView.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      value: new Incentknow_Organisms_SearchView.SearchAllQuery(query)
                  })(Data_Void.absurd);
              }) ]);
          };
      };
  };
  var initialState = function (input) {
      return {
          query: input.query
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $10 = {};
                      for (var $11 in v1) {
                          if ({}.hasOwnProperty.call(v1, $11)) {
                              $10[$11] = v1[$11];
                          };
                      };
                      $10.query = v.value0.query;
                      return $10;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Pages.SearchAll (line 55, column 16 - line 57, column 59): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render(dictBehaviour)(dictMonadAff),
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: function ($14) {
                      return Data_Maybe.Just.create(HandleInput.create($14));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.Sign"] = $PS["Incentknow.Pages.Sign"] || {};
  var exports = $PS["Incentknow.Pages.Sign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Session = $PS["Incentknow.API.Session"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Inputs = $PS["Incentknow.Atoms.Inputs"];
  var Incentknow_Atoms_Message = $PS["Incentknow.Atoms.Message"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Route = $PS["Incentknow.Route"];                
  var RegisterMode = (function () {
      function RegisterMode() {

      };
      RegisterMode.value = new RegisterMode();
      return RegisterMode;
  })();
  var LoginMode = (function () {
      function LoginMode() {

      };
      LoginMode.value = new LoginMode();
      return LoginMode;
  })();
  var Register = (function () {
      function Register() {

      };
      Register.value = new Register();
      return Register;
  })();
  var Login = (function () {
      function Login() {

      };
      Login.value = new Login();
      return Login;
  })();
  var ChangeMode = (function () {
      function ChangeMode(value0) {
          this.value0 = value0;
      };
      ChangeMode.create = function (value0) {
          return new ChangeMode(value0);
      };
      return ChangeMode;
  })();
  var ChangeUsername = (function () {
      function ChangeUsername(value0) {
          this.value0 = value0;
      };
      ChangeUsername.create = function (value0) {
          return new ChangeUsername(value0);
      };
      return ChangeUsername;
  })();
  var ChangeEmail = (function () {
      function ChangeEmail(value0) {
          this.value0 = value0;
      };
      ChangeEmail.create = function (value0) {
          return new ChangeEmail(value0);
      };
      return ChangeEmail;
  })();
  var ChangePassword = (function () {
      function ChangePassword(value0) {
          this.value0 = value0;
      };
      ChangePassword.create = function (value0) {
          return new ChangePassword(value0);
      };
      return ChangePassword;
  })();
  var Navigate = (function () {
      function Navigate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Navigate.create = function (value0) {
          return function (value1) {
              return new Navigate(value0, value1);
          };
      };
      return Navigate;
  })();
  var Focused = (function () {
      function Focused(value0) {
          this.value0 = value0;
      };
      Focused.create = function (value0) {
          return new Focused(value0);
      };
      return Focused;
  })();
  var validateUsername = function (x) {
      return Data_String_CodePoints.length(x) >= 4;
  };
  var validatePassword = function (x) {
      return Data_String_CodePoints.length(x) >= 8;
  };
  var validateEmail = function (x) {
      var reg = Data_String_Regex.regex("^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$")(Data_String_Regex_Flags.noFlags);
      if (reg instanceof Data_Either.Right) {
          return Data_Maybe.isJust(Data_String_Regex.match(reg.value0)(x));
      };
      return false;
  };
  var toString = function (v) {
      if (v instanceof Data_Either.Right) {
          return v.value0;
      };
      if (v instanceof Data_Either.Left) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 112, column 12 - line 114, column 14): " + [ v.constructor.name ]);
  };
  var textbox = function (input) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("textbox") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.placeholder(input.placeholder), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(input.type_), Halogen_HTML_Properties.disabled(input.isDisabled), Halogen_HTML_Properties.value(toString(input.value)), Halogen_HTML_Events.onValueInput(function (x) {
          return Data_Maybe.Just.create(input.onChange((function () {
              var $29 = input.validate(x);
              if ($29) {
                  return new Data_Either.Right(x);
              };
              return new Data_Either.Left(x);
          })()));
      }), Halogen_HTML_Events.onFocus(function (v) {
          return input.onFocus;
      }) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("icon") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src((function () {
          var $30 = Data_Either.isRight(input.value);
          if ($30) {
              return "/assets/imgs/checkmark_ok.svg";
          };
          return "/assets/imgs/checkmark_ng.svg";
      })()) ]) ]) ]);
  };
  var initialState = function (input) {
      return {
          mode: RegisterMode.value,
          email: new Data_Either.Left(""),
          password: new Data_Either.Left(""),
          username: new Data_Either.Left(""),
          isRegistering: false,
          isLogining: false,
          resultMessage: Data_Maybe.Nothing.value,
          focused: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (v) {
              if (v instanceof ChangeMode) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      var $32 = state.isLogining || state.isRegistering;
                      if ($32) {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      };
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $33 = {};
                          for (var $34 in v1) {
                              if ({}.hasOwnProperty.call(v1, $34)) {
                                  $33[$34] = v1[$34];
                              };
                          };
                          $33.mode = v.value0;
                          return $33;
                      });
                  });
              };
              if (v instanceof ChangeUsername) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $37 = {};
                      for (var $38 in v1) {
                          if ({}.hasOwnProperty.call(v1, $38)) {
                              $37[$38] = v1[$38];
                          };
                      };
                      $37.username = v.value0;
                      return $37;
                  });
              };
              if (v instanceof ChangeEmail) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $41 = {};
                      for (var $42 in v1) {
                          if ({}.hasOwnProperty.call(v1, $42)) {
                              $41[$42] = v1[$42];
                          };
                      };
                      $41.email = v.value0;
                      return $41;
                  });
              };
              if (v instanceof ChangePassword) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $45 = {};
                      for (var $46 in v1) {
                          if ({}.hasOwnProperty.call(v1, $46)) {
                              $45[$46] = v1[$46];
                          };
                      };
                      $45.password = v.value0;
                      return $45;
                  });
              };
              if (v instanceof Navigate) {
                  return Incentknow_AppM.navigateRoute(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(v.value1);
              };
              if (v instanceof Focused) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $51 = {};
                      for (var $52 in v1) {
                          if ({}.hasOwnProperty.call(v1, $52)) {
                              $51[$52] = v1[$52];
                          };
                      };
                      $51.focused = new Data_Maybe.Just(v.value0);
                      return $51;
                  });
              };
              if (v instanceof Register) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $55 = {};
                          for (var $56 in v1) {
                              if ({}.hasOwnProperty.call(v1, $56)) {
                                  $55[$56] = v1[$56];
                              };
                          };
                          $55.isRegistering = true;
                          return $55;
                      }))(function () {
                          var user = {
                              displayName: toString(state.username),
                              email: toString(state.email),
                              password: toString(state.password)
                          };
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeCommand(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API.createUser(user)))(function (result) {
                              if (result instanceof Data_Maybe.Just) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $59 = {};
                                      for (var $60 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $60)) {
                                              $59[$60] = v1[$60];
                                          };
                                      };
                                      $59.resultMessage = Data_Maybe.Just.create("\u767b\u9332\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002" + (toString(state.email) + "\u306b\u9001\u4fe1\u3057\u305f\u30ea\u30f3\u30af\u304b\u3089\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u8a8d\u8a3c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"));
                                      return $59;
                                  }))(function () {
                                      return Incentknow_AppM.resetMessage(Incentknow_AppM.behaviourHalogenM(dictBehaviour));
                                  });
                              };
                              if (result instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $63 = {};
                                      for (var $64 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $64)) {
                                              $63[$64] = v1[$64];
                                          };
                                      };
                                      $63.isRegistering = false;
                                      return $63;
                                  });
                              };
                              throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 258, column 5 - line 262, column 57): " + [ result.constructor.name ]);
                          });
                      });
                  });
              };
              if (v instanceof Login) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $66 = {};
                          for (var $67 in v1) {
                              if ({}.hasOwnProperty.call(v1, $67)) {
                                  $66[$67] = v1[$67];
                              };
                          };
                          $66.isLogining = true;
                          return $66;
                      }))(function () {
                          var user = {
                              email: toString(state.email),
                              password: toString(state.password)
                          };
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_API_Execution.executeAPI(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Incentknow_API_Session.login(user)))(function (result) {
                              if (result instanceof Data_Maybe.Just) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_API_Session.loadPage(Incentknow_Route.routeToPath(Incentknow_Route.Home.value)));
                              };
                              if (result instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $71 = {};
                                      for (var $72 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $72)) {
                                              $71[$72] = v1[$72];
                                          };
                                      };
                                      $71.isLogining = false;
                                      return $71;
                                  });
                              };
                              throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 272, column 5 - line 274, column 52): " + [ result.constructor.name ]);
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 236, column 16 - line 274, column 52): " + [ v.constructor.name ]);
          };
      };
  };
  var eqMode = new Data_Eq.Eq(function (a) {
      return function (b) {
          var v = new Data_Tuple.Tuple(a, b);
          if (v.value0 instanceof RegisterMode && v.value1 instanceof RegisterMode) {
              return true;
          };
          if (v.value0 instanceof LoginMode && v.value1 instanceof LoginMode) {
              return true;
          };
          return false;
      };
  });
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-sign") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("container") ])([ Incentknow_HTML_Utils.link(Navigate.create)(Incentknow_Route.Home.value)([ Incentknow_HTML_Utils.css("logo") ])([ Halogen_HTML_Core.text("Incentknow") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("message") ])([ Halogen_HTML_Core.text("\u77e5\u8b58\u3068\u60c5\u5831\u3092\u6574\u7406\u3057\u3001\u4e16\u754c\u3092\u30af\u30ea\u30a2\u306b\u3059\u308b") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("text") ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("logo") ])([ Halogen_HTML_Core.text("Incentknow") ]), Halogen_HTML_Core.text("\u3078\u3088\u3046\u3053\u305d\uff01"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u767b\u9332\u3082\u3057\u304f\u306f\u30ed\u30b0\u30a4\u30f3\u304c\u5fc5\u8981\u3067\u3059\u3002") ]), (function () {
          if (state.resultMessage instanceof Data_Maybe.Just) {
              return Incentknow_Atoms_Message.success(state.resultMessage.value0);
          };
          if (state.resultMessage instanceof Data_Maybe.Nothing) {
              return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("before") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("tab") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("register" + (function () {
                  var $81 = Data_Eq.eq(eqMode)(state.mode)(RegisterMode.value);
                  if ($81) {
                      return " selected";
                  };
                  return "";
              })()), Halogen_HTML_Events.onClick(function (v) {
                  return Data_Maybe.Just.create(new ChangeMode(RegisterMode.value));
              }) ])([ Halogen_HTML_Core.text("\u767b\u9332") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("login" + (function () {
                  var $82 = Data_Eq.eq(eqMode)(state.mode)(LoginMode.value);
                  if ($82) {
                      return " selected";
                  };
                  return "";
              })()), Halogen_HTML_Events.onClick(function (v) {
                  return Data_Maybe.Just.create(new ChangeMode(LoginMode.value));
              }) ])([ Halogen_HTML_Core.text("\u30ed\u30b0\u30a4\u30f3") ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("form") ])([ (function () {
                  if (state.mode instanceof RegisterMode) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("register") ])([ textbox({
                          value: state.username,
                          placeholder: "\u30e6\u30fc\u30b6\u30fc\u540d",
                          type_: DOM_HTML_Indexed_InputType.InputText.value,
                          onChange: ChangeUsername.create,
                          onFocus: Data_Maybe.Just.create(new Focused("username")),
                          isDisabled: state.isRegistering,
                          validate: validateUsername
                      }), Incentknow_HTML_Utils.whenElem(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(state.focused)(new Data_Maybe.Just("username")))(function (v) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("rule") ])([ Halogen_HTML_Core.text("4\u6587\u5b57\u4ee5\u4e0a\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044") ]);
                      }), textbox({
                          value: state.email,
                          placeholder: "\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9",
                          type_: DOM_HTML_Indexed_InputType.InputEmail.value,
                          onChange: ChangeEmail.create,
                          onFocus: Data_Maybe.Just.create(new Focused("email")),
                          isDisabled: state.isRegistering,
                          validate: validateEmail
                      }), textbox({
                          value: state.password,
                          placeholder: "\u30d1\u30b9\u30ef\u30fc\u30c9",
                          type_: DOM_HTML_Indexed_InputType.InputPassword.value,
                          onChange: ChangePassword.create,
                          onFocus: Data_Maybe.Just.create(new Focused("password")),
                          isDisabled: state.isRegistering,
                          validate: validatePassword
                      }), Incentknow_HTML_Utils.whenElem(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(state.focused)(new Data_Maybe.Just("password")))(function (v) {
                          return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("rule") ])([ Halogen_HTML_Core.text("\u534a\u89d2\u82f1\u5b57\u3001\u6570\u5b57\u3001\u8a18\u53f7\u3092\u7d44\u307f\u5408\u308f\u305b\u3066 8\u6587\u5b57\u4ee5\u4e0a\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044") ]);
                      }), Incentknow_Atoms_Inputs.submitButton({
                          isDisabled: state.isRegistering || (Data_Either.isLeft(state.username) || (Data_Either.isLeft(state.email) || Data_Either.isLeft(state.password))),
                          isLoading: state.isRegistering,
                          loadingText: "",
                          text: "\u767b\u9332",
                          onClick: Register.value
                      }) ]);
                  };
                  if (state.mode instanceof LoginMode) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("login") ])([ textbox({
                          value: state.email,
                          placeholder: "\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9",
                          type_: DOM_HTML_Indexed_InputType.InputEmail.value,
                          onChange: ChangeEmail.create,
                          onFocus: Data_Maybe.Just.create(new Focused("login-email")),
                          isDisabled: state.isLogining,
                          validate: validateEmail
                      }), textbox({
                          value: state.password,
                          placeholder: "\u30d1\u30b9\u30ef\u30fc\u30c9",
                          type_: DOM_HTML_Indexed_InputType.InputPassword.value,
                          onChange: ChangePassword.create,
                          onFocus: Data_Maybe.Just.create(new Focused("login-password")),
                          isDisabled: state.isLogining,
                          validate: validatePassword
                      }), Incentknow_Atoms_Inputs.submitButton({
                          isDisabled: state.isLogining || (Data_Either.isLeft(state.email) || Data_Either.isLeft(state.password)),
                          isLoading: state.isLogining,
                          loadingText: "",
                          text: "\u30ed\u30b0\u30a4\u30f3",
                          onClick: Login.value
                      }) ]);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 160, column 23 - line 229, column 30): " + [ state.mode.constructor.name ]);
              })() ]) ]);
          };
          throw new Error("Failed pattern match at Incentknow.Pages.Sign (line 143, column 11 - line 231, column 18): " + [ state.resultMessage.constructor.name ]);
      })() ]) ]);
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictBehaviour)(dictMonadAff),
                  handleQuery: Halogen_Component.defaultEval.handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: Halogen_Component.defaultEval.initialize,
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.User.Main"] = $PS["Incentknow.Pages.User.Main"] || {};
  var exports = $PS["Incentknow.Pages.User.Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_Organisms_ContentList = $PS["Incentknow.Organisms.ContentList"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "contentList";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_ContentList.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                      value: new Incentknow_API_Execution.Holding([  ]),
                      query: Data_Maybe.Nothing.value
                  })(Data_Void.absurd);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          userId: input.userId,
          list: [  ]
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Molecules.Setting.Password"] = $PS["Incentknow.Molecules.Setting.Password"] || {};
  var exports = $PS["Incentknow.Molecules.Setting.Password"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Molecules_Setting = $PS["Incentknow.Molecules.Setting"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var ChangeOldPassword = (function () {
      function ChangeOldPassword(value0) {
          this.value0 = value0;
      };
      ChangeOldPassword.create = function (value0) {
          return new ChangeOldPassword(value0);
      };
      return ChangeOldPassword;
  })();
  var ChangeNewPassword = (function () {
      function ChangeNewPassword(value0) {
          this.value0 = value0;
      };
      ChangeNewPassword.create = function (value0) {
          return new ChangeNewPassword(value0);
      };
      return ChangeNewPassword;
  })();
  var Edit = (function () {
      function Edit() {

      };
      Edit.value = new Edit();
      return Edit;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var Cancel = (function () {
      function Cancel() {

      };
      Cancel.value = new Cancel();
      return Cancel;
  })();
  var setInput = function (input) {
      return function (state) {
          return {
              submit: input.submit,
              state: state.state,
              typingOldPassword: "",
              typingNewPassword: ""
          };
      };
  };
  var render = function (state) {
      var renderPasswordForm = function (old) {
          return function ($$new) {
              return function (changeOld) {
                  return function (changeNew) {
                      return function (disabled) {
                          return Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("subtext") ])([ Halogen_HTML_Core.text("\u73fe\u5728\u306e\u30d1\u30b9\u30ef\u30fc\u30c9") ]), Halogen_HTML_Elements.input([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.value(old), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputPassword.value), Halogen_HTML_Properties.disabled(disabled), Halogen_HTML_Events.onValueInput(function ($36) {
                              return Data_Maybe.Just.create(changeOld($36));
                          }) ]), Halogen_HTML_Elements.span([ Incentknow_HTML_Utils.css("subtext") ])([ Halogen_HTML_Core.text("\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9") ]), Halogen_HTML_Elements.input([ Incentknow_HTML_Utils.css("atom-textarea"), Halogen_HTML_Properties.value($$new), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputPassword.value), Halogen_HTML_Properties.disabled(disabled), Halogen_HTML_Events.onValueInput(function ($37) {
                              return Data_Maybe.Just.create(changeNew($37));
                          }) ]) ]);
                      };
                  };
              };
          };
      };
      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("item") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("main") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text("\u30d1\u30b9\u30ef\u30fc\u30c9") ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("value") ])([ (function () {
          if (state.state instanceof Incentknow_Molecules_Setting.None) {
              return Halogen_HTML_Core.text("************");
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Changing) {
              return renderPasswordForm(state.typingOldPassword)(state.typingNewPassword)(ChangeOldPassword.create)(ChangeNewPassword.create)(false);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Sending) {
              return renderPasswordForm(state.typingOldPassword)(state.typingNewPassword)(ChangeOldPassword.create)(ChangeNewPassword.create)(true);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Failed) {
              return renderPasswordForm(state.typingOldPassword)(state.typingNewPassword)(ChangeOldPassword.create)(ChangeNewPassword.create)(false);
          };
          if (state.state instanceof Incentknow_Molecules_Setting.Changed) {
              return Halogen_HTML_Core.text("************");
          };
          throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Password (line 80, column 19 - line 103, column 54): " + [ state.state.constructor.name ]);
      })() ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Incentknow_Molecules_Setting.renderEditButton(state.state)(Edit.value) ]) ]), Incentknow_Molecules_Setting.renderSubmitButton(state.state)(Submit.value)(Cancel.value)(false), Incentknow_Molecules_Setting.renderMessage("\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u307e\u3057\u305f")(state.state) ]);
  };
  var initialState = function (input) {
      return {
          submit: input.submit,
          state: Incentknow_Molecules_Setting.None.value,
          typingOldPassword: "",
          typingNewPassword: ""
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictMonadEffect) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              if (v instanceof HandleInput) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setInput(v.value0));
              };
              if (v instanceof ChangeOldPassword) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $16 = {};
                      for (var $17 in v1) {
                          if ({}.hasOwnProperty.call(v1, $17)) {
                              $16[$17] = v1[$17];
                          };
                      };
                      $16.typingOldPassword = v.value0;
                      return $16;
                  });
              };
              if (v instanceof ChangeNewPassword) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $20 = {};
                      for (var $21 in v1) {
                          if ({}.hasOwnProperty.call(v1, $21)) {
                              $20[$21] = v1[$21];
                          };
                      };
                      $20.typingNewPassword = v.value0;
                      return $20;
                  });
              };
              if (v instanceof Edit) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $24 = {};
                      for (var $25 in v1) {
                          if ({}.hasOwnProperty.call(v1, $25)) {
                              $24[$25] = v1[$25];
                          };
                      };
                      $24.state = Incentknow_Molecules_Setting.Changing.value;
                      return $24;
                  }))(function () {
                      return Halogen_Query_HalogenM.raise(Incentknow_Molecules_Setting.Edited.value);
                  });
              };
              if (v instanceof Submit) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $27 = {};
                      for (var $28 in v1) {
                          if ({}.hasOwnProperty.call(v1, $28)) {
                              $27[$28] = v1[$28];
                          };
                      };
                      $27.state = Incentknow_Molecules_Setting.Sending.value;
                      return $27;
                  }))(function () {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(state.submit({
                              oldPassword: state.typingOldPassword,
                              newPassword: state.typingNewPassword
                          })))(function (resposne) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $30 = {};
                                  for (var $31 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $31)) {
                                          $30[$31] = v1[$31];
                                      };
                                  };
                                  $30.state = Incentknow_Molecules_Setting.toState(resposne);
                                  return $30;
                              });
                          });
                      });
                  });
              };
              if (v instanceof Cancel) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $33 = {};
                      for (var $34 in v1) {
                          if ({}.hasOwnProperty.call(v1, $34)) {
                              $33[$34] = v1[$34];
                          };
                      };
                      $33.state = Incentknow_Molecules_Setting.None.value;
                      return $33;
                  });
              };
              throw new Error("Failed pattern match at Incentknow.Molecules.Setting.Password (line 134, column 16 - line 147, column 41): " + [ v.constructor.name ]);
          };
      };
  };
  var component = function (dictMonadAff) {
      return function (dictMonadEffect) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff)(dictMonadAff.MonadEffect0()),
                  handleQuery: Incentknow_Molecules_Setting.handleSettingQuery,
                  receive: function ($38) {
                      return Data_Maybe.Just.create(HandleInput.create($38));
                  },
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.User.Setting"] = $PS["Incentknow.Pages.User.Setting"] || {};
  var exports = $PS["Incentknow.Pages.User.Setting"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Molecules_Setting_Image = $PS["Incentknow.Molecules.Setting.Image"];
  var Incentknow_Molecules_Setting_Password = $PS["Incentknow.Molecules.Setting.Password"];
  var Incentknow_Molecules_Setting_Text = $PS["Incentknow.Molecules.Setting.Text"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangeAccount = (function () {
      function ChangeAccount(value0) {
          this.value0 = value0;
      };
      ChangeAccount.create = function (value0) {
          return new ChangeAccount(value0);
      };
      return ChangeAccount;
  })();
  var Edit = (function () {
      function Edit(value0) {
          this.value0 = value0;
      };
      Edit.create = function (value0) {
          return new Edit(value0);
      };
      return Edit;
  })();
  var password_ = Data_Symbol.SProxy.value;
  var initialState = function (input) {
      return {
          account: Incentknow_API_Execution.Loading.value
      };
  };
  var icon_ = Data_Symbol.SProxy.value;
  var handleAction = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Incentknow_API_Execution.callbackQuery(dictMonadAff)(ChangeAccount.create)(Incentknow_API.getMyAccount(Data_Unit.unit));
                  };
                  if (v instanceof ChangeAccount) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (account) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $13 = {};
                              for (var $14 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $14)) {
                                      $13[$14] = v1[$14];
                                  };
                              };
                              $13.account = account;
                              return $13;
                          });
                      });
                  };
                  if (v instanceof Edit) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.User.Setting (line 100, column 16 - line 108, column 14): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var email_ = Data_Symbol.SProxy.value;
  var displayName_ = Data_Symbol.SProxy.value;
  var render = function (dictMonadAff) {
      return function (dictBehaviour) {
          return function (dictMonadEffect) {
              return function (state) {
                  return Incentknow_Atoms_Icon.remoteWith(state.account)(function (account) {
                      return Incentknow_Templates_Page.section("page-user-setting")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "displayName";
                      }))(Data_Ord.ordUnit)(displayName_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Text.component(dictMonadAff))({
                          submit: function ($18) {
                              return Incentknow_API_Execution.callCommand(Incentknow_API.setMyDisplayName($18));
                          },
                          value: account.displayName,
                          title: "\u8868\u793a\u540d",
                          desc: "",
                          disabled: false
                      })(function ($19) {
                          return Data_Maybe.Just.create(Edit.create($19));
                      }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "icon";
                      }))(Data_Ord.ordUnit)(icon_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Image.component(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          submit: function (blob) {
                              return Incentknow_API_Execution.callCommand(Incentknow_API.uploadMyIcon({
                                  blob: blob
                              }));
                          },
                          value: Data_Maybe.Just.create(Incentknow_API_Static.getFullsizeIconUrl(account.iconImage)),
                          disabled: false
                      })(function ($20) {
                          return Data_Maybe.Just.create(Edit.create($20));
                      }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "password";
                      }))(Data_Ord.ordUnit)(password_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Password.component(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                          submit: function ($21) {
                              return Incentknow_API_Execution.callCommand(Incentknow_API.setMyPassword($21));
                          }
                      })(function ($22) {
                          return Data_Maybe.Just.create(Edit.create($22));
                      }), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "email";
                      }))(Data_Ord.ordUnit)(email_)(Data_Unit.unit)(Incentknow_Molecules_Setting_Text.component(dictMonadAff))({
                          submit: function ($23) {
                              return Incentknow_API_Execution.callCommand(Incentknow_API.setMyEmail($23));
                          },
                          value: account.email,
                          title: "\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9",
                          desc: "",
                          disabled: false
                      })(function ($24) {
                          return Data_Maybe.Just.create(Edit.create($24));
                      }) ]);
                  });
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictBehaviour)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Pages.User"] = $PS["Incentknow.Pages.User"] || {};
  var exports = $PS["Incentknow.Pages.User"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_API_Session = $PS["Incentknow.API.Session"];
  var Incentknow_API_Static = $PS["Incentknow.API.Static"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Atoms_Icon = $PS["Incentknow.Atoms.Icon"];
  var Incentknow_Data_Ids = $PS["Incentknow.Data.Ids"];
  var Incentknow_HTML_Utils = $PS["Incentknow.HTML.Utils"];
  var Incentknow_Pages_User_Main = $PS["Incentknow.Pages.User.Main"];
  var Incentknow_Pages_User_Setting = $PS["Incentknow.Pages.User.Setting"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Incentknow_Templates_Page = $PS["Incentknow.Templates.Page"];                
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangeTab = (function () {
      function ChangeTab(value0) {
          this.value0 = value0;
      };
      ChangeTab.create = function (value0) {
          return new ChangeTab(value0);
      };
      return ChangeTab;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var Navigate = (function () {
      function Navigate(value0) {
          this.value0 = value0;
      };
      Navigate.create = function (value0) {
          return new Navigate(value0);
      };
      return Navigate;
  })();
  var Logout = (function () {
      function Logout() {

      };
      Logout.value = new Logout();
      return Logout;
  })();
  var FetchedUser = (function () {
      function FetchedUser(value0) {
          this.value0 = value0;
      };
      FetchedUser.create = function (value0) {
          return new FetchedUser(value0);
      };
      return FetchedUser;
  })();
  var render = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return function (state) {
                  var userId = Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
                      return v.userId;
                  })(Incentknow_API_Execution.toMaybe(state.user));
                  return Incentknow_Templates_Main.centerLayout({
                      css: "page-user",
                      leftSide: [  ],
                      rightSide: [  ]
                  })([ Incentknow_Templates_Page.tabPage(Incentknow_Route.eqUserTab)({
                      tabs: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Incentknow_Route.UserMain.value ])((function () {
                          var $17 = Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqUserId))(userId)(state.myUserId);
                          if ($17) {
                              return [ Incentknow_Route.UserSetting.value ];
                          };
                          return [  ];
                      })()),
                      currentTab: state.tab,
                      onChangeTab: ChangeTab.create,
                      isTabAlphabet: true,
                      showTab: function (v) {
                          if (v instanceof Incentknow_Route.UserMain) {
                              return [ Halogen_HTML_Core.text("Home") ];
                          };
                          if (v instanceof Incentknow_Route.UserSetting) {
                              return [ Halogen_HTML_Core.text("Setting") ];
                          };
                          throw new Error("Failed pattern match at Incentknow.Pages.User (line 76, column 13 - line 78, column 51): " + [ v.constructor.name ]);
                      }
                  })((function () {
                      var $19 = Data_Eq.eq(Data_Maybe.eqMaybe(Incentknow_Data_Ids.eqUserId))(userId)(state.myUserId);
                      if ($19) {
                          return [ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-user-logout"), Halogen_HTML_Events.onClick(function (v) {
                              return new Data_Maybe.Just(Logout.value);
                          }) ])([ Halogen_HTML_Core.text("Logout") ]) ];
                      };
                      return [  ];
                  })())([ Incentknow_Atoms_Icon.remoteWith(state.user)(function (user) {
                      return Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("page-user-header") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("left") ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src(Incentknow_API_Static.getFullsizeIconUrl(user.iconImage)) ]) ]), Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("right") ])([ Halogen_HTML_Elements.div([ Incentknow_HTML_Utils.css("name") ])([ Halogen_HTML_Core.text(user.displayName) ]) ]) ]);
                  }) ])([ (function () {
                      if (state.tab instanceof Incentknow_Route.UserMain) {
                          return Incentknow_HTML_Utils.maybeElem(userId)(function (x) {
                              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                                  return "main";
                              }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_User_Main.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                                  userId: x
                              })(Data_Void.absurd);
                          });
                      };
                      if (state.tab instanceof Incentknow_Route.UserSetting) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "setting";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_User_Setting.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({})(Data_Void.absurd);
                      };
                      throw new Error("Failed pattern match at Incentknow.Pages.User (line 94, column 11 - line 98, column 97): " + [ state.tab.constructor.name ]);
                  })() ]) ]);
              };
          };
      };
  };
  var initialState = function (input) {
      return {
          userId: input.userId,
          tab: input.tab,
          user: Incentknow_API_Execution.Loading.value,
          myUserId: Data_Maybe.Nothing.value
      };
  };
  var handleAction = function (dictBehaviour) {
      return function (dictMonadEffect) {
          return function (dictMonadAff) {
              return function (v) {
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_API_Session.getMyUserId))(function (myUserId) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $22 = {};
                                  for (var $23 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $23)) {
                                          $22[$23] = v1[$23];
                                      };
                                  };
                                  $22.myUserId = myUserId;
                                  return $22;
                              }))(function () {
                                  return Incentknow_API_Execution.callbackQuery(dictMonadAff)(FetchedUser.create)(Incentknow_API.getUser(state.userId));
                              });
                          });
                      });
                  };
                  if (v instanceof FetchedUser) {
                      return Incentknow_API_Execution.forRemote(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0)(function (user) {
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $25 = {};
                              for (var $26 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $26)) {
                                      $25[$26] = v1[$26];
                                  };
                              };
                              $25.user = user;
                              return $25;
                          });
                      });
                  };
                  if (v instanceof HandleInput) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var $29 = Data_Eq.notEq(Incentknow_Data_Ids.eqUserDisplayId)(state.userId)(v.value0.userId);
                          if ($29) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(initialState(v.value0)))(function () {
                                  return handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff)(Initialize.value);
                              });
                          };
                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $30 = {};
                              for (var $31 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $31)) {
                                      $30[$31] = v1[$31];
                                  };
                              };
                              $30.tab = v.value0.tab;
                              return $30;
                          });
                      });
                  };
                  if (v instanceof ChangeTab) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(new Incentknow_Route.User(state.userId, v.value0));
                      });
                  };
                  if (v instanceof Navigate) {
                      return Incentknow_AppM.navigate(Incentknow_AppM.behaviourHalogenM(dictBehaviour))(v.value0);
                  };
                  if (v instanceof Logout) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_API_Session.logout))(function () {
                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Incentknow_API_Session.reloadPage);
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Pages.User (line 105, column 16 - line 127, column 28): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var component = function (dictBehaviour) {
      return function (dictMonadAff) {
          return function (dictMonadEffect) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($36) {
                          return Data_Maybe.Just.create(HandleInput.create($36));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };

  // ----------------------------------------------------------------------------

  exports.pathname = function (location) {
    return function () {
      return location.pathname;
    };
  };

  // ----------------------------------------------------------------------------

  exports.search = function (location) {
    return function () {
      return location.search;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
  exports["pathname"] = $foreign.pathname;
  exports["search"] = $foreign.search;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Router"] = $PS["Incentknow.Router"] || {};
  var exports = $PS["Incentknow.Router"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Foreign = $PS["Foreign"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Organisms_Footer = $PS["Incentknow.Organisms.Footer"];
  var Incentknow_Organisms_Header = $PS["Incentknow.Organisms.Header"];
  var Incentknow_Pages_Activate = $PS["Incentknow.Pages.Activate"];
  var Incentknow_Pages_Content = $PS["Incentknow.Pages.Content"];
  var Incentknow_Pages_EditDraft = $PS["Incentknow.Pages.EditDraft"];
  var Incentknow_Pages_Home = $PS["Incentknow.Pages.Home"];
  var Incentknow_Pages_JoinSpace = $PS["Incentknow.Pages.JoinSpace"];
  var Incentknow_Pages_NewFormat = $PS["Incentknow.Pages.NewFormat"];
  var Incentknow_Pages_NewSpace = $PS["Incentknow.Pages.NewSpace"];
  var Incentknow_Pages_Notifications = $PS["Incentknow.Pages.Notifications"];
  var Incentknow_Pages_Public = $PS["Incentknow.Pages.Public"];
  var Incentknow_Pages_SearchAll = $PS["Incentknow.Pages.SearchAll"];
  var Incentknow_Pages_Sign = $PS["Incentknow.Pages.Sign"];
  var Incentknow_Pages_Space = $PS["Incentknow.Pages.Space"];
  var Incentknow_Pages_SpaceList = $PS["Incentknow.Pages.SpaceList"];
  var Incentknow_Pages_User = $PS["Incentknow.Pages.User"];
  var Incentknow_Route = $PS["Incentknow.Route"];
  var Incentknow_Templates_Main = $PS["Incentknow.Templates.Main"];
  var Test_Unit_Console = $PS["Test.Unit.Console"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var ChangeRoute = (function () {
      function ChangeRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChangeRoute.create = function (value0) {
          return function (value1) {
              return new ChangeRoute(value0, value1);
          };
      };
      return ChangeRoute;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var component = function (dictMonadAff) {
      return function (dictBehaviour) {
          var updateRoute = function (path) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Test_Unit_Console.consoleLog("updateRoute" + Data_Show.show(Data_Show.showString)(path))))(function () {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $15 = {};
                      for (var $16 in st) {
                          if ({}.hasOwnProperty.call(st, $16)) {
                              $15[$16] = st[$16];
                          };
                      };
                      $15.route = Incentknow_Route.pathToRoute(path);
                      return $15;
                  });
              });
          };
          var renderBody = function (dictBehaviour1) {
              return function (dictMonadAff1) {
                  return function (v) {
                      if (v instanceof Incentknow_Route.Home) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "home";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Home.component(dictBehaviour)(dictMonadAff))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.ActivateAccount) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "activate";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Activate.component(dictBehaviour)(dictMonadAff))({
                              token: v.value0
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.NotFound) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (v instanceof Incentknow_Route.SearchAll) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "searchAll";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_SearchAll.component(dictBehaviour)(dictMonadAff))({
                              query: v.value0
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Public) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "public";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Public.component(dictBehaviour)(dictMonadAff))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Notifications) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "notifications";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Notifications.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Content) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "content";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Content.component(dictBehaviour)(dictMonadAff))({
                              contentSpec: new Incentknow_Route.ContentSpecContentId(v.value0)
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.ContentBySemanticId) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "content";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Content.component(dictBehaviour)(dictMonadAff))({
                              contentSpec: new Incentknow_Route.ContentSpecSemanticId(v.value0, v.value1)
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.EditDraft) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "editDraft";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_EditDraft.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))(v.value0)(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.EditScraper) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (v instanceof Incentknow_Route.NewFormat) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "newFormat";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_NewFormat.component(dictBehaviour)(dictMonadAff))({
                              spaceId: v.value0
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.JoinSpace) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "joinSpace";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_JoinSpace.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              spaceId: v.value0
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.SpaceList) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "spaceList";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_SpaceList.component(dictBehaviour)(dictBehaviour.MonadEffect0())(dictMonadAff))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.NewSpace) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "newSpace";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_NewSpace.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Space) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "space";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              spaceId: v.value0,
                              tab: new Data_Either.Left(v.value1)
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Container) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "space";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              spaceId: v.value0,
                              tab: new Data_Either.Right(new Data_Maybe.Just(v.value1))
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.ContainerList) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "space";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Space.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              spaceId: v.value0,
                              tab: new Data_Either.Right(Data_Maybe.Nothing.value)
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.User) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "user";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_User.component(dictBehaviour)(dictMonadAff)(dictBehaviour.MonadEffect0()))({
                              userId: v.value0,
                              tab: v.value1
                          })(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Sign) {
                          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                              return "sign";
                          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Pages_Sign.component(dictBehaviour)(dictMonadAff))({})(Data_Void.absurd);
                      };
                      if (v instanceof Incentknow_Route.Rivision) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (v instanceof Incentknow_Route.RivisionList) {
                          return Halogen_HTML_Core.text("");
                      };
                      if (v instanceof Incentknow_Route.DraftList) {
                          return Halogen_HTML_Core.text("");
                      };
                      throw new Error("Failed pattern match at Incentknow.Router (line 110, column 16 - line 143, column 28): " + [ v.constructor.name ]);
                  };
              };
          };
          var render = function (state) {
              return Incentknow_Templates_Main.main({
                  header: Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "header";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Header.component(dictMonadAff)(dictBehaviour))({
                      route: state.route
                  })(Data_Void.absurd),
                  footer: Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "footer";
                  }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Incentknow_Organisms_Footer.component(dictBehaviour))(Data_Unit.unit)(Data_Void.absurd),
                  messages: state.msgs,
                  body: Halogen_HTML_Elements.div_([ (function () {
                      if (state.loading === 0) {
                          return Halogen_HTML_Core.text("");
                      };
                      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("loading") ])([  ]);
                  })(), renderBody(dictBehaviour)(dictMonadAff)(state.route) ])
              });
          };
          var pushState = function (route) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.getPushStateInterface(Incentknow_AppM.behaviourHalogenM(dictBehaviour)))(function (pushStateInterface) {
                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(pushStateInterface.pushState(Foreign.unsafeToForeign({}))(Incentknow_Route.routeToPath(route)));
              });
          };
          var initialState = function (v) {
              return {
                  route: Incentknow_Route.Home.value,
                  loading: 0,
                  msgs: [  ]
              };
          };
          var handleQuery = function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(updateRoute(v.value0))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
              });
          };
          var globalMessageLoop = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Incentknow_AppM.takeGlobalMessage(Incentknow_AppM.behaviourHalogenM(dictBehaviour)))(function (query) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(globalMessageLoop)))(function () {
                  if (query instanceof Incentknow_AppM.PushStateG) {
                      return pushState(query.value0);
                  };
                  if (query instanceof Incentknow_AppM.NavigateG) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                          var $44 = {};
                          for (var $45 in v) {
                              if ({}.hasOwnProperty.call(v, $45)) {
                                  $44[$45] = v[$45];
                              };
                          };
                          $44.route = query.value0;
                          return $44;
                      }))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(pushState(query.value0))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          });
                      });
                  };
                  if (query instanceof Incentknow_AppM.StartLoadingG) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $48 = {};
                          for (var $49 in st) {
                              if ({}.hasOwnProperty.call(st, $49)) {
                                  $48[$49] = st[$49];
                              };
                          };
                          $48.loading = st.loading + 1 | 0;
                          return $48;
                      });
                  };
                  if (query instanceof Incentknow_AppM.StopLoadingG) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $51 = {};
                          for (var $52 in st) {
                              if ({}.hasOwnProperty.call(st, $52)) {
                                  $51[$52] = st[$52];
                              };
                          };
                          $51.loading = st.loading - 1 | 0;
                          return $51;
                      });
                  };
                  if (query instanceof Incentknow_AppM.MessageG) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $54 = {};
                          for (var $55 in st) {
                              if ({}.hasOwnProperty.call(st, $55)) {
                                  $54[$55] = st[$55];
                              };
                          };
                          $54.msgs = [ query.value0 ];
                          return $54;
                      });
                  };
                  if (query instanceof Incentknow_AppM.ResetMesssageG) {
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $58 = {};
                          for (var $59 in st) {
                              if ({}.hasOwnProperty.call(st, $59)) {
                                  $58[$59] = st[$59];
                              };
                          };
                          $58.msgs = [  ];
                          return $58;
                      });
                  };
                  throw new Error("Failed pattern match at Incentknow.Router (line 185, column 5 - line 194, column 58): " + [ query.constructor.name ]);
              });
          });
          var handleAction = function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(globalMessageLoop)))(function () {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.pathname)))(function (path) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictBehaviour.MonadEffect0()))(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.search)))(function (query) {
                          return updateRoute(path + query);
                      });
                  });
              });
          };
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction,
                  handleQuery: handleQuery,
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: Halogen_Component.defaultEval.finalize
              })
          });
      };
  };
  exports["ChangeRoute"] = ChangeRoute;
  exports["component"] = component;
})(PS);
(function(exports) {
  "use strict";

  exports.createTextNode = function (data) {
    return function (doc) {
      return function () {
        return doc.createTextNode(data);
      };
    };
  };
})(PS["Web.DOM.Document"] = PS["Web.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var $foreign = $PS["Web.DOM.Document"];
  exports["createTextNode"] = $foreign.createTextNode;
})(PS);
(function(exports) {
  "use strict";

  exports.mutationObserver = function (cb) {
    return function () {
      return new MutationObserver(function (mr, mo) {
        return cb(mr)(mo)();
      });
    };
  };

  exports._observe = function (node) {
    return function (config) {
      return function (mo) {
        return function () {
          return mo.observe(node, config);
        };
      };
    };
  };
})(PS["Web.DOM.MutationObserver"] = PS["Web.DOM.MutationObserver"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.MutationObserver"] = $PS["Web.DOM.MutationObserver"] || {};
  var exports = $PS["Web.DOM.MutationObserver"];
  var $foreign = $PS["Web.DOM.MutationObserver"];
  var observe = function (dictUnion) {
      return $foreign["_observe"];
  };
  exports["observe"] = observe;
  exports["mutationObserver"] = $foreign.mutationObserver;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Text"] = $PS["Web.DOM.Text"] || {};
  var exports = $PS["Web.DOM.Text"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Event.PopStateEvent.EventTypes"] = $PS["Web.HTML.Event.PopStateEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.PopStateEvent.EventTypes"];
  var popstate = "popstate";
  exports["popstate"] = popstate;
})(PS);
(function(exports) {
  "use strict";
  exports.pushState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.pushState(a, docTitle, url);
          };
        };
      };
    };
  };
  exports.replaceState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.replaceState(a, docTitle, url);
          };
        };
      };
    };
  };
  exports.state = function(history) {
    return function() {
      return history.state;
    };
  };
})(PS["Web.HTML.History"] = PS["Web.HTML.History"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.History"] = $PS["Web.HTML.History"] || {};
  var exports = $PS["Web.HTML.History"];
  var $foreign = $PS["Web.HTML.History"];
  exports["pushState"] = $foreign.pushState;
  exports["replaceState"] = $foreign.replaceState;
  exports["state"] = $foreign.state;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.PushState"] = $PS["Routing.PushState"] || {};
  var exports = $PS["Routing.PushState"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_MutationObserver = $PS["Web.DOM.MutationObserver"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_DOM_Text = $PS["Web.DOM.Text"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_PopStateEvent_EventTypes = $PS["Web.HTML.Event.PopStateEvent.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_History = $PS["Web.HTML.History"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var makeImmediate = function (run) {
      return function __do() {
          var document = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
              var $7 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument);
              return function ($8) {
                  return $7(Web_HTML_Window.document($8));
              };
          })())();
          var nextTick = Effect_Ref["new"](new Data_Either.Right(0))();
          var obsvNode = Data_Functor.map(Effect.functorEffect)(Web_DOM_Text.toNode)(Web_DOM_Document.createTextNode("")(document))();
          var observer = Web_DOM_MutationObserver.mutationObserver(function (v) {
              return function (v1) {
                  return function __do() {
                      Effect_Ref.modify_(Data_Either.either((function () {
                          var $9 = Data_Semiring.add(Data_Semiring.semiringInt)(1);
                          return function ($10) {
                              return Data_Either.Right.create($9($10));
                          };
                      })())(Data_Either.Right.create))(nextTick)();
                      return run();
                  };
              };
          })();
          Web_DOM_MutationObserver.observe()(obsvNode)({
              characterData: true
          })(observer)();
          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(nextTick))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Either.foldableEither)(function (tick) {
              return function __do() {
                  Effect_Ref.write(new Data_Either.Left(tick + 1 | 0))(nextTick)();
                  return Web_DOM_Node.setNodeValue(Data_Show.show(Data_Show.showInt)(tick))(obsvNode)();
              };
          }));
      };
  };
  var makeInterface = function __do() {
      var freshRef = Effect_Ref["new"](0)();
      var listenersRef = Effect_Ref["new"](Data_Map_Internal.empty)();
      var notify = function (ev) {
          return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (v) {
              return v(ev);
          }))(Effect_Ref.read(listenersRef));
      };
      var locationState = function __do() {
          var loc = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
          var state = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.history))(Web_HTML_History.state)();
          var pathname = Web_HTML_Location.pathname(loc)();
          var search = Web_HTML_Location.search(loc)();
          var hash = Web_HTML_Location.hash(loc)();
          var path = pathname + (search + hash);
          return {
              state: state,
              pathname: pathname,
              search: search,
              hash: hash,
              path: path
          };
      };
      var listen = function (k) {
          return function __do() {
              var fresh = Effect_Ref.read(freshRef)();
              Effect_Ref.write(fresh + 1 | 0)(freshRef)();
              Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(fresh)(k))(listenersRef)();
              return Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(fresh))(listenersRef);
          };
      };
      var schedule = makeImmediate(Control_Bind.bindFlipped(Effect.bindEffect)(notify)(locationState))();
      var stateFn = function (op) {
          return function (state) {
              return function (path) {
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.history))(op(state)("")(path))();
                      return schedule();
                  };
              };
          };
      };
      var listener = Web_Event_EventTarget.eventListener(function (v) {
          return Control_Bind.bindFlipped(Effect.bindEffect)(notify)(locationState);
      })();
      Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
          var $11 = Web_Event_EventTarget.addEventListener(Web_HTML_Event_PopStateEvent_EventTypes.popstate)(listener)(false);
          return function ($12) {
              return $11(Web_HTML_Window.toEventTarget($12));
          };
      })())();
      return {
          pushState: stateFn(Web_HTML_History.pushState),
          replaceState: stateFn(Web_HTML_History.replaceState),
          locationState: locationState,
          listen: listen
      };
  };
  exports["makeInterface"] = makeInterface;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Event.PopStateEvent"] = $PS["Web.HTML.Event.PopStateEvent"] || {};
  var exports = $PS["Web.HTML.Event.PopStateEvent"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("PopStateEvent");
  exports["fromEvent"] = fromEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Incentknow.Main"] = $PS["Incentknow.Main"] || {};
  var exports = $PS["Incentknow.Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Coroutine_Aff = $PS["Control.Coroutine.Aff"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var Incentknow_API = $PS["Incentknow.API"];
  var Incentknow_API_Execution = $PS["Incentknow.API.Execution"];
  var Incentknow_AppM = $PS["Incentknow.AppM"];
  var Incentknow_Router = $PS["Incentknow.Router"];
  var Routing_PushState = $PS["Routing.PushState"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_PopStateEvent = $PS["Web.HTML.Event.PopStateEvent"];
  var Web_HTML_Event_PopStateEvent_EventTypes = $PS["Web.HTML.Event.PopStateEvent.EventTypes"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var popStateProducer = Control_Coroutine_Aff.produce(function (emitter) {
      return function __do() {
          var listener = Web_Event_EventTarget.eventListener((function () {
              var $3 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Control_Coroutine_Aff.emit(emitter));
              return function ($4) {
                  return $3(Web_HTML_Event_PopStateEvent.fromEvent($4));
              };
          })())();
          return Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
              var $5 = Web_Event_EventTarget.addEventListener(Web_HTML_Event_PopStateEvent_EventTypes.popstate)(listener)(false);
              return function ($6) {
                  return $5(Web_HTML_Window.toEventTarget($6));
              };
          })()))();
      };
  });
  var popStateConsumer = function (query) {
      return Control_Coroutine.consumer(Effect_Aff.monadAff)(function (event) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.pathname)))(function (path) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location))(Web_HTML_Location.search)))(function (params) {
                  var url = path + params;
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Console.log(url)))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(query(Halogen_Query.tell(Incentknow_Router.ChangeRoute.create(url)))))(function () {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                      });
                  });
              });
          });
      });
  };
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Incentknow_API_Execution.callQuery(Incentknow_API.getMyAccount(Data_Unit.unit)))(function (result) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (globalMessage) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_PushState.makeInterface))(function (pushStateInterface) {
              var account = (function () {
                  if (result instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (result instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(result.value0);
                  };
                  throw new Error("Failed pattern match at Incentknow.Main (line 63, column 17 - line 65, column 26): " + [ result.constructor.name ]);
              })();
              var environment = {
                  globalMessage: globalMessage,
                  pushStateInterface: pushStateInterface,
                  account: account
              };
              var component = Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Effect_Aff.functorAff)(Incentknow_AppM.runAppM(environment))(Incentknow_Router.component(Incentknow_AppM.monadAffAppM)(Incentknow_AppM.behaviourAppM));
              return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(component)(Data_Unit.unit)(body))(function (io) {
                      return Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(popStateProducer)(popStateConsumer(io.query)));
                  });
              });
          });
      });
  }));
  exports["popStateProducer"] = popStateProducer;
  exports["popStateConsumer"] = popStateConsumer;
  exports["main"] = main;
})(PS);
PS["Incentknow.Main"].main();